Prompt,Query
Retrieve the full names and employee IDs of active staff members.,"SELECT full_name, employee_id FROM staff_directory WHERE is_active = 1;"
Find assets with a specific serial number and belonging to a particular pharmacy.,SELECT * FROM assets WHERE serial_number = 'ABC123' AND pharmacies_id = 456;
Get all hazards created in the last week.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL '1 week';
Retrieve the names and order of event staff roles for a specific facility.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 789;"
Find event actions performed by a specific user and within a given date range.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-07-01' AND '2023-07-31';
Retrieve form settings summary tools for a specific form and organization.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND organization_id = 456;
Get events with a specific event type and open status.,SELECT * FROM events WHERE events_type_id = 123 AND is_open = 1;
Find users with a specific role and created after a certain date.,SELECT * FROM users WHERE roles_id = 789 AND date_created > '2023-01-01';
Retrieve organizations with a trial end date in the future.,SELECT * FROM organizations WHERE trial_ends_at > NOW();
Find pharmacies that were activated by a specific user.,SELECT * FROM pharmacies WHERE activated_by = 123;
Retrieve the IDs and full names of staff members belonging to a specific organization.,"SELECT id, full_name FROM staff_directory WHERE org_id = 123;"
Find assets that are currently active and belong to a particular organization.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456;
Get hazards with a specific name and description.,SELECT * FROM hazards WHERE name = 'Fire Hazard' AND description = 'High risk of fire outbreak.';
Retrieve the default event staff roles for a specific form ID.,SELECT * FROM event_staff_roles WHERE forms_id = 789 AND is_default = 1;
Find event actions performed by a specific user and updated within the last week.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_at >= NOW() - INTERVAL '1 week';
Get form settings summary tools for a particular facility and organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789 AND organization_id = 456;
Retrieve events created by a specific user and still open.,SELECT * FROM events WHERE users_id = 123 AND is_open = 1;
Find users with a specific role and active status.,SELECT * FROM users WHERE roles_id = 789 AND active = 1;
Get organizations created after a certain date and located in a specific city.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND city = 'New York';
Retrieve pharmacies that were activated within the last month.,SELECT * FROM pharmacies WHERE activated_by >= NOW() - INTERVAL '1 month';
Retrieve the user IDs and names of active staff members in a specific organization.,"SELECT user_id, full_name FROM staff_directory WHERE is_active = 1 AND org_id = 123;"
Find assets that were created or updated in the last 30 days.,SELECT * FROM assets WHERE created_at >= NOW() - INTERVAL '30 days' OR updated_at >= NOW() - INTERVAL '30 days';
"Get hazards with a description containing the word ""danger"" and created in the last 3 months.",SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months';
Retrieve the names and orders of event staff roles for a specific form ID and facility ID.,"SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456;"
Find event actions performed by a specific user,"updated by a specific user, and within a specific date range.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30';"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123;"
Retrieve events created by a specific user,"organization ID, and closed within the last week.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days';"
Find users with a specific role,"active status, and created after a certain date.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01';"
Get organizations with a trial end date in the future and located in a specific city.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London';
Find assets that are active,"belong to a specific organization, and have been updated within the last month.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND updated_at >= NOW() - INTERVAL '1 month';"
"Get hazards with a description containing the word ""danger"" and created in the last 3 months","ordered by their names in ascending order.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' ORDER BY name ASC;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones that have a default setting.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND is_default = 0;"
Find event actions performed by a specific user,"updated by a different specific user, and within a specific date range, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC;"
Retrieve events created by a specific user,"organization ID, and closed within the last week, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC;"
Get organizations with a trial end date in the future,"located in a specific city, and ordered by their trial end dates in descending order.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC;"
Retrieve pharmacies with a specific name,"activated by a specific user, and disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the full names and employee IDs of staff members who are active,"belong to a specific organization, and have a registration number.,SELECT full_name, employee_id FROM staff_directory WHERE is_active = 1 AND org_id = 123 AND reg_number IS NOT NULL;"
Find assets that are active,"belong to a specific organization, have a specific asset type ID, and have been updated within the last month.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_at >= NOW() - INTERVAL '1 month';"
"Get hazards with a description containing the word ""danger"" and created in the last 3 months","ordered by their names in ascending order and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' ORDER BY name ASC LIMIT 10;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones that have a default setting and ordered by the order in descending order.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND is_default = 0 ORDER BY order DESC;"
Find event actions performed by a specific user,"updated by a different specific user, and within a specific date range, ordered by the action date in descending order and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Retrieve events created by a specific user,"organization ID, and closed within the last week, ordered by the event type ID in ascending order and limited to 50 rows.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC LIMIT 50;"
Retrieve pharmacies with a specific name,"activated by a specific user, and disabled after a certain date, ordered by their names in ascending order and limited to 15 rows.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC LIMIT 15;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, and ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the names and IDs of staff members who are active,"belong to a specific organization, and have been updated in the last 3 months.,SELECT full_name, id FROM staff_directory WHERE is_active = 1 AND org_id = 123 AND updated_at >= NOW() - INTERVAL '3 months';"
Find assets that are active,"belong to a specific organization, have a specific asset type ID, and have a serial number starting with 'ABC'.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND serial_number LIKE 'ABC%';"
"Get hazards with a description containing the word ""fire"" and created in the last 6 months","ordered by their created dates in descending order.,SELECT * FROM hazards WHERE description LIKE '%fire%' AND created_at >= NOW() - INTERVAL '6 months' ORDER BY created_at DESC;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones with a specific name.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND name NOT LIKE '%Admin%';"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 10 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 10;"
Retrieve events created by a specific user,"organization ID, and closed within the last month, ordered by the event type ID in ascending order, and limited to 20 rows.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '1 month' ORDER BY events_type_id ASC LIMIT 20;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order, and limited to 15 rows.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC LIMIT 15;"
Retrieve the user IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Retrieve the full names of staff members who have an official user ID.,SELECT full_name FROM staff_directory WHERE official_user_id IS NOT NULL;
Find assets that have been updated in the last 7 days.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS;
Get hazards with a description longer than 100 characters.,SELECT * FROM hazards WHERE LENGTH(description) > 100;
Retrieve the names and orders of event staff roles in alphabetical order.,"SELECT name, `order` FROM event_staff_roles ORDER BY name ASC;"
Find event actions that were updated by a specific user.,SELECT * FROM event_actions WHERE updated_by = 123;
Get form settings summary tools for a specific organization ID.,SELECT * FROM formsettings_summarytools WHERE organization_id = 456;
Retrieve events that are still open.,SELECT * FROM events WHERE is_open = 1;
Find users with a specific type and created after a certain date.,SELECT * FROM users WHERE type = 'admin' AND date_created > '2023-01-01';
Get organizations located in a specific city.,SELECT * FROM organizations WHERE city = 'New York';
Retrieve pharmacies that were activated by a specific user.,SELECT * FROM pharmacies WHERE activated_by = 123;
Find assets that are currently active and have a serial number starting with 'ABC'.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE 'ABC%';
Get hazards created in the last 30 days and belong to a specific organization.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAYS AND organizations_id = 789;
Retrieve the names and IDs of staff members ordered by their full names in ascending order.,"SELECT full_name, id FROM staff_directory ORDER BY full_name ASC;"
Find assets with a specific asset item ID and belong to a specific organization.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456;
"Get hazards with a description containing the word ""safety"" and created in the last 6 months.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS;
Retrieve all event staff roles with a specific order.,SELECT * FROM event_staff_roles WHERE `order` = 1;
Find event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456;
Get form settings summary tools for a specific form ID and updated by a specific user.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123;
Retrieve events that have a specific event type ID and created by a specific user.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456;
Find users with a specific profile ID and active status.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1;
Get organizations created after a certain date and located in a specific country.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123;
Retrieve pharmacies with a specific organization ID and created before a certain date.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01';
Find assets that were updated in the last 7 days and belong to a specific organization.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123;
Get hazards with a description shorter than 50 characters and created by a specific pharmacy.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456;
Retrieve the names and orders of event staff roles ordered by their orders in descending order.,"SELECT name, `order` FROM event_staff_roles ORDER BY `order` DESC;"
Find event actions that were updated by a specific user and created after a certain date.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01';
Get form settings summary tools for a specific facility ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456;
Retrieve events that are still open and created by a specific user.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123;
Find users with a specific type and created between two dates.,SELECT * FROM users WHERE type = 'admin' AND date_created BETWEEN '2023-01-01' AND '2023-01-31';
Get organizations located in a specific city and created after a certain date.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01';
Retrieve pharmacies that were activated by a specific user and created before a certain date.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01';
Find assets that are currently active and have a serial number ending with 'XYZ'.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ';
Get hazards created in the last 30 days and have a specific organization ID.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAYS AND organizations_id = 123;
Retrieve the names and IDs of staff members ordered by their IDs in ascending order.,"SELECT full_name, id FROM staff_directory ORDER BY id ASC;"
Find assets with a specific asset item ID,"belong to a specific organization, and have a certain serial number.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ';"
"Get hazards with a description containing the word ""safety"" and created in the last 6 months","ordered by their names in ascending order.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC;"
Retrieve all event staff roles with a specific order and form ID.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123;
Find event actions for a specific event ID,"user ID, and action date within a specific date range.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31';"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW();"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789;"
Retrieve the names and orders of event staff roles ordered by their names in descending order.,"SELECT name, `order` FROM event_staff_roles ORDER BY name DESC;"
Find event actions that were updated by a specific user,"created after a certain date, and belong to a specific event.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01' AND events_id = 456;"
Get form settings summary tools for a specific facility ID,"organization ID, and updated by a specific user.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456 AND updated_by = 789;"
Retrieve events that are still open,"created by a specific user, and closed within the last week.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123 AND date_closed >= NOW() - INTERVAL '7 days';"
Find users with a specific type,"active status, and created between two dates, ordered by their full names in ascending order.,SELECT * FROM users WHERE type = 'admin' AND active = 1 AND date_created BETWEEN '2023-01-01' AND '2023-01-31' ORDER BY full_name ASC;"
Get organizations located in a specific city,"created after a certain date, and have a trial end date in the future.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01' AND trial_ends_at > NOW();"
Retrieve pharmacies that were activated by a specific user,"created before a certain date, and disabled after a certain date.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01' AND date_disabled > '2023-01-01';"
Find assets that are currently active,"have a serial number ending with 'XYZ', and belong to a specific organization.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ' AND organizations_id = 123;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS AND pharmacies_id = 789;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order.,"SELECT full_name, id FROM staff_directory ORDER BY id DESC;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC;"
Retrieve the names and orders of event staff roles ordered by their names in descending order,"and limited to 10 rows.,SELECT name, `order` FROM event_staff_roles ORDER BY name DESC LIMIT 10;"
Find event actions that were updated by a specific user,"created after a certain date, and belong to a specific event, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01' AND events_id = 456 ORDER BY action_date DESC;"
Get form settings summary tools for a specific facility ID,"organization ID, and updated by a specific user, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456 AND updated_by = 789 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that are still open,"created by a specific user, and closed within the last week, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific type,"active status, and created between two dates, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE type = 'admin' AND active = 1 AND date_created BETWEEN '2023-01-01' AND '2023-01-31' ORDER BY full_name ASC LIMIT 30;"
Get organizations located in a specific city,"created after a certain date, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01' AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies that were activated by a specific user,"created before a certain date, and disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01' AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Find assets that are currently active,"have a serial number ending with 'XYZ', and belong to a specific organization, ordered by their asset items ID in ascending order.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ' AND organizations_id = 123 ORDER BY asset_items_id ASC;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, and belong to a specific pharmacy, ordered by their created dates in descending order.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS AND pharmacies_id = 789 ORDER BY created_at DESC;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 20 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 20;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC;"
Retrieve the staff directory for user_id '12345'.,SELECT * FROM staff_directory WHERE user_id = '12345';
Get the assets with an active status.,SELECT * FROM assets WHERE active = true;
Find hazards associated with pharmacies_id '9876'.,SELECT * FROM hazards WHERE pharmacies_id = '9876';
Get the event staff roles with the default flag set.,SELECT * FROM event_staff_roles WHERE is_default = true;
Retrieve event actions performed by user_id '5678'.,SELECT * FROM event_actions WHERE user_id = '5678';
Find form settings summary tools for facility_id '2468' and organization_id '1357'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '2468' AND organization_id = '1357';
Retrieve users with active status and updated after '2023-01-01'.,SELECT * FROM users WHERE active = true AND date_updated > '2023-01-01';
Find organizations located in the city 'New York'.,SELECT * FROM organizations WHERE city = 'New York';
Get pharmacies activated by 'Pharmacist A'.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist A';
Retrieve the staff directory for full_name 'John Smith'.,SELECT * FROM staff_directory WHERE full_name = 'John Smith';
Get hazards with the name 'Fire Hazard'.,SELECT * FROM hazards WHERE name = 'Fire Hazard';
Retrieve the event staff roles with the forms_id '456'.,SELECT * FROM event_staff_roles WHERE forms_id = '456';
Get event actions for events_id '789'.,SELECT * FROM event_actions WHERE events_id = '789';
Find form settings summary tools for organization_id '987' and facility_id '654'.,SELECT * FROM formsettings_summarytools WHERE organization_id = '987' AND facility_id = '654';
Get events reported by user_id '321'.,SELECT * FROM events WHERE reporters_id = '321';
Retrieve users of type 'Admin'.,SELECT * FROM users WHERE type = 'Admin';
Find organizations created after '2023-01-01'.,SELECT * FROM organizations WHERE created_at > '2023-01-01';
Get pharmacies in the city 'Los Angeles'.,SELECT * FROM pharmacies WHERE city = 'Los Angeles';
Retrieve the staff directory for user_id '54321'.,SELECT * FROM staff_directory WHERE user_id = '54321';
Find assets with asset_type_id '123'.,SELECT * FROM assets WHERE asset_type_id = '123';
Get hazards associated with pharmacies_id '65432'.,SELECT * FROM hazards WHERE pharmacies_id = '65432';
Get event actions performed by user_id '87654'.,SELECT * FROM event_actions WHERE user_id = '87654';
Find form settings summary tools for facility_id '23456' and organization_id '54321'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '23456' AND organization_id = '54321';
Retrieve users with active status and updated after '2023-03-01'.,SELECT * FROM users WHERE active = true AND date_updated > '2023-03-01';
Find organizations located in the city 'Seattle'.,SELECT * FROM organizations WHERE city = 'Seattle';
Get pharmacies activated by 'Pharmacist B'.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist B';
Retrieve the staff directory for user_id '98765'.,SELECT * FROM staff_directory WHERE user_id = '98765';
Get hazards associated with pharmacies_id '56789'.,SELECT * FROM hazards WHERE pharmacies_id = '56789';
Get event actions performed by user_id '45678'.,SELECT * FROM event_actions WHERE user_id = '45678';
Find form settings summary tools for facility_id '98765' and organization_id '87654'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '98765' AND organization_id = '87654';
Retrieve users with active status and updated after '2023-06-01'.,SELECT * FROM users WHERE active = true AND date_updated > '2023-06-01';
Find organizations located in the city 'San Francisco'.,SELECT * FROM organizations WHERE city = 'San Francisco';
Get pharmacies activated by 'Pharmacist C'.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist C';
Retrieve the staff directory for employee_id 'ABCDE'.,SELECT * FROM staff_directory WHERE employee_id = 'ABCDE';
Get the assets with asset_items_id '123456'.,SELECT * FROM assets WHERE asset_items_id = '123456';
Find hazards with a description containing the word 'explosive'.,SELECT * FROM hazards WHERE description LIKE '%explosive%';
Get the event staff roles with the order greater than 5.,"SELECT * FROM event_staff_roles WHERE ""order"" > 5;"
Retrieve event actions performed by user_id '98765' and user_pharmacy_id '54321'.,SELECT * FROM event_actions WHERE user_id = '98765' AND user_pharmacy_id = '54321';
Find form settings summary tools for facility_id '2468' or organization_id '1357'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '2468' OR organization_id = '1357';
Get events where the harmt is not null or prescribers_id is not null.,SELECT * FROM events WHERE harmt IS NOT NULL OR prescribers_id IS NOT NULL;
Retrieve users with active status and updated between '2023-01-01' and '2023-06-30'.,SELECT * FROM users WHERE is_active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Find organizations located in countries_id 10 or 15.,"SELECT * FROM organizations WHERE countries_id IN (10, 15);"
Get pharmacies activated after '2023-01-01' and activated_by 'Pharmacist X'.,SELECT * FROM pharmacies WHERE activate_at > '2023-01-01' AND activated_by = 'Pharmacist X';
Retrieve the staff directory for full_name 'Jane Doe' and fixed is true.,SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' AND fixed = true;
Find assets with an active status and updated between '2023-01-01' and '2023-06-30'.,SELECT * FROM assets WHERE active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Get hazards with the name starting with 'Chemical'.,SELECT * FROM hazards WHERE name LIKE 'Chemical%';
Retrieve the event staff roles with the forms_id '789' and facility_id '654'.,SELECT * FROM event_staff_roles WHERE forms_id = '789' AND facility_id = '654';
Get event actions for events_id '987' and updated_by 'John Smith'.,SELECT * FROM event_actions WHERE events_id = '987' AND updated_by = 'John Smith';
Find form settings summary tools for organization_id '543' and updated_by 'Jane Doe'.,SELECT * FROM formsettings_summarytools WHERE organization_id = '543' AND updated_by = 'Jane Doe';
Get events reported by user_id '321' and harmt is not null.,SELECT * FROM events WHERE reporters_id = '321' AND harmt IS NOT NULL;
Retrieve users with type 'Admin' and active status is true.,SELECT * FROM users WHERE type = 'Admin' AND is_active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Find organizations created after '2023-01-01' and updated before '2023-06-30'.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND updated_at < '2023-06-30';
Get pharmacies in the city 'Los Angeles' and daye_enabled is not null.,SELECT * FROM pharmacies WHERE city = 'Los Angeles' AND daye_enabled IS NOT NULL;
Retrieve the staff directory for user_id '54321' and created_at is not null.,SELECT * FROM staff_directory WHERE user_id = '54321' AND created_at IS NOT NULL;
Find assets with asset_type_id '789' and serial_number is not null.,SELECT * FROM assets WHERE asset_type_id = '789' AND serial_number IS NOT NULL;
Get hazards associated with pharmacies_id '65432' and description is not empty.,SELECT * FROM hazards WHERE pharmacies_id = '65432' AND description <> '';
Retrieve the event staff roles with the default flag set and order is not null.,"SELECT * FROM event_staff_roles WHERE is_default = true AND ""order"" IS NOT NULL;"
Get event actions performed by user_id '87654' and updated_at is not null.,SELECT * FROM event_actions WHERE user_id = '87654' AND updated_at IS NOT NULL;
Find form settings summary tools for facility_id '23456' or organization_id '54321'.,SELECT * FROM formsettings_summarytools WHERE (facility_id = '23456' OR organization_id = '54321') AND tools_id IS NOT NULL;
Get events where the harmt is not null or prescribers_id is not null and is_open is true.,SELECT * FROM events WHERE (harmt IS NOT NULL OR prescribers_id IS NOT NULL) AND is_open = true AND date_created IS NOT NULL;
Retrieve users with active status and updated after '2023-03-01' and type is not null.,SELECT * FROM users WHERE is_active = true AND updated_at > '2023-03-01' AND type IS NOT NULL;
Find organizations located in the city 'Seattle' and trial_ends_at is not null.,SELECT * FROM organizations WHERE city = 'Seattle' AND trial_ends_at IS NOT NULL;
Get pharmacies activated by 'Pharmacist B' and activate_at is not null.,SELECT * FROM pharmacies WHERE activate_at > '2023-01-01' AND activated_by = 'Pharmacist B';
Retrieve the staff directory for user_id '98765' and locum_full_name is not empty.,SELECT * FROM staff_directory WHERE user_id = '98765' AND locum_full_name <> '';
Find assets with an active status and created_at is not null.,SELECT * FROM assets WHERE active = true AND created_at IS NOT NULL;
Get hazards with the name 'Chemical Spill' and updated_at is not null.,SELECT * FROM hazards WHERE name = 'Chemical Spill' AND updated_at IS NOT NULL;
Retrieve the event staff roles with the forms_id '654' and updates_by is not null.,SELECT * FROM event_staff_roles WHERE forms_id = '654' AND updates_by IS NOT NULL;
Get event actions for events_id '321' and action_date is not null.,SELECT * FROM event_actions WHERE events_id = '321' AND action_date IS NOT NULL;
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '876' AND facility_id = '543' AND updated_by IS NOT NULL;
Get events reported by user_id '987' and date_created is not null.,SELECT * FROM events WHERE reporters_id = '987' AND date_created IS NOT NULL;
Retrieve users of type 'User' and date_updated is not null.,SELECT * FROM users WHERE type = 'User' AND date_updated IS NOT NULL;
Find organizations created after '2023-02-01' and countries_id is not null.,SELECT * FROM organizations WHERE created_at > '2023-02-01' AND countries_id IS NOT NULL;
Get pharmacies in the city 'Chicago' and created_at is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL;
Retrieve the staff directory for user_id '13579' and official_user_id is not null.,SELECT * FROM staff_directory WHERE user_id = '13579' AND official_user_id IS NOT NULL;
Find assets with an active status and updated_at is not null.,SELECT * FROM assets WHERE active = true AND updated_at IS NOT NULL;
Get hazards associated with pharmacies_id '43210' and created_at is not null.,SELECT * FROM hazards WHERE pharmacies_id = '43210' AND created_at IS NOT NULL;
Retrieve the event staff roles with the default flag set and forms_id is not null.,SELECT * FROM event_staff_roles WHERE is_default = true AND forms_id IS NOT NULL;
Get event actions performed by user_id '65432' and updated_at is not null.,SELECT * FROM event_actions WHERE user_id = '65432' AND updated_at IS NOT NULL;
Find form settings summary tools for facility_id '54321' and organization_id '87654' and tools_id is not null.,SELECT * FROM formsettings_summarytools WHERE facility_id = '54321' AND organization_id = '87654' AND tools_id IS NOT NULL;
Get events where the harmt is not null or prescribers_id is not null and is_open is true and date_created is not null.,SELECT * FROM events WHERE (harmt IS NOT NULL OR prescribers_id IS NOT NULL) AND is_open = true AND date_created IS NOT NULL AND date_closed IS NOT NULL;
Retrieve users with active status and updated after '2023-04-01' and updated_at is not null.,SELECT * FROM users WHERE is_active = true AND updated_at > '2023-04-01' AND updated_at IS NOT NULL;
Find organizations located in the city 'Denver' and trial_ends_at is not null.,SELECT * FROM organizations WHERE city = 'Denver' AND trial_ends_at IS NOT NULL;
Get pharmacies activated by 'Pharmacist D' and activate_at is not null.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist D' AND activate_at IS NOT NULL;
Retrieve the staff directory for user_id '97531' and employee_id is not null.,SELECT * FROM staff_directory WHERE user_id = '97531' AND employee_id IS NOT NULL;
Find assets with an active status and serial_number is not empty.,SELECT * FROM assets WHERE active = true AND serial_number <> '';
Get hazards with the name 'Chemical Spill' and description is not empty.,SELECT * FROM hazards WHERE name = 'Chemical Spill' AND description <> '';
Retrieve the event staff roles with the forms_id '654' and order is not null.,"SELECT * FROM event_staff_roles WHERE forms_id = '654' AND ""order"" IS NOT NULL;"
Get event actions for events_id '321' and action_date is not null and date_done is not null.,SELECT * FROM event_actions WHERE events_id = '321' AND action_date IS NOT NULL AND date_done IS NOT NULL;
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null and updated_at is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '876' AND facility_id = '543' AND updated_by IS NOT NULL AND updated_at IS NOT NULL;
Get events reported by user_id '987' and date_created is not null and updated_by is not null.,SELECT * FROM events WHERE reporters_id = '987' AND date_created IS NOT NULL AND updated_by IS NOT NULL AND harmt IS NOT NULL;
Retrieve users of type 'User' and active status is true and date_created is not null.,SELECT * FROM users WHERE type = 'User' AND is_active = true AND date_created IS NOT NULL AND sf_id IS NOT NULL;
Find organizations created after '2023-02-01' and countries_id is not null and trial_ends_at is not null.,SELECT * FROM organizations WHERE created_at > '2023-02-01' AND countries_id IS NOT NULL AND trial_ends_at IS NOT NULL AND name <> '';
Get pharmacies in the city 'Chicago' and created_at is not null and activated_by is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL AND activated_by IS NOT NULL;
Retrieve the staff directory for user_id '13579' and official_user_id is not null and fixed is true.,SELECT * FROM staff_directory WHERE user_id = '13579' AND official_user_id IS NOT NULL AND fixed = true;
Find assets with an active status and updated_at is not null and asset_type_id is not null.,SELECT * FROM assets WHERE active = true AND updated_at IS NOT NULL AND asset_type_id IS NOT NULL;
Get hazards associated with pharmacies_id '43210' and created_at is not null and pharmacies_id is not null.,SELECT * FROM hazards WHERE pharmacies_id = '43210' AND created_at IS NOT NULL AND pharmacies_id IS NOT NULL;
Retrieve the event staff roles with the default flag set and forms_id is not null and facility_id is not null.,SELECT * FROM event_staff_roles WHERE is_default = true AND forms_id IS NOT NULL AND facility_id IS NOT NULL;
Get event actions performed by user_id '65432' and updated_at is not null and user_pharmacy_id is not null.,SELECT * FROM event_actions WHERE user_id = '65432' AND updated_at IS NOT NULL AND user_pharmacy_id IS NOT NULL;
Find form settings summary tools for facility_id '54321' and organization_id '87654' and tools_id is not null and updated_by is not null.,SELECT * FROM formsettings_summarytools WHERE facility_id = '54321' AND organization_id = '87654' AND tools_id IS NOT NULL AND updated_by IS NOT NULL;
Get events where the harmt is not null or prescribers_id is not null and is_open is true and date_created is not null and date_closed is not null.,SELECT * FROM events WHERE (harmt IS NOT NULL OR prescribers_id IS NOT NULL) AND is_open = true AND date_created IS NOT NULL AND date_closed IS NOT NULL;
Retrieve users with active status and updated after '2023-04-01' and updated_at is not null and date_updated is not null.,SELECT * FROM users WHERE is_active = true AND updated_at > '2023-03-01' AND type IS NOT NULL AND date_updated IS NOT NULL;
Find organizations located in the city 'Denver' and trial_ends_at is not null and countries_id is not null.,SELECT * FROM organizations WHERE city = 'Seattle' AND trial_ends_at IS NOT NULL AND countries_id IS NOT NULL;
Get pharmacies activated by 'Pharmacist D' and activate_at is not null and activated_by is not null.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist B' AND activate_at IS NOT NULL;
Retrieve the staff directory for user_id '97531' and employee_id is not null and full_name is not empty.,SELECT * FROM staff_directory WHERE user_id = '98765' AND created_at IS NOT NULL;
Find assets with an active status and serial_number is not empty and asset_type_id is not null.,SELECT * FROM assets WHERE asset_type_id = '789' AND serial_number IS NOT NULL;
Get hazards with the name 'Chemical Spill' and description is not empty and pharmacies_id is not null.,SELECT * FROM hazards WHERE pharmacies_id = '65432' AND description <> '';
Retrieve the event staff roles with the forms_id '654' and order is not null and name is not empty.,SELECT * FROM event_staff_roles WHERE forms_id = '654' AND order IS NOT NULL;
Get event actions for events_id '321' and action_date is not null and date_done is not null and updated_by is not null.,SELECT * FROM event_actions WHERE events_id = '987' AND updated_by = 'John Smith';
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null and tools_id is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '543' AND updated_by = 'Jane Doe';
Get events reported by user_id '987' and date_created is not null and updated_by is not null and harmt is not null.,SELECT * FROM events WHERE reporters_id = '321' AND harmt IS NOT NULL;
Retrieve users of type 'User' and active status is true and date_created is not null and sf_id is not null.,SELECT * FROM users WHERE type = 'Admin' AND is_active = true;
Find organizations created after '2023-02-01' and countries_id is not null and trial_ends_at is not null and name is not empty.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND updated_at < '2023-06-30';
Get pharmacies in the city 'Chicago' and created_at is not null and activated_by is not null and organizations_id is not null.,SELECT * FROM pharmacies WHERE city = 'Los Angeles' AND daye_enabled IS NOT NULL;
Retrieve the staff directory for user_id '13579' and official_user_id is not null and fixed is true and full_name is not empty.,SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' AND fixed = true;
Find assets with an active status and updated_at is not null and asset_type_id is not null and asset_items_id is not null.,SELECT * FROM assets WHERE active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Get hazards associated with pharmacies_id '43210' and created_at is not null and pharmacies_id is not null and name is not empty.,SELECT * FROM hazards WHERE name LIKE 'Chemical%';
Retrieve the event staff roles with the default flag set and forms_id is not null and facility_id is not null and order is not null.,SELECT * FROM event_staff_roles WHERE forms_id = '789' AND facility_id = '654';
Get event actions performed by user_id '65432' and updated_at is not null and user_pharmacy_id is not null and action_date is not null.,SELECT * FROM event_actions WHERE events_id = '987' AND updated_by = 'John Smith';
Find form settings summary tools for facility_id '54321' and organization_id '87654' and tools_id is not null and updated_by is not null and forms_id is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '543' AND updated_by = 'Jane Doe';
Get events where the harmt is not null or prescribers_id is not null and is_open is true and date_created is not null and date_closed is not null and users_fullname is not empty.,SELECT * FROM events WHERE reporters_id = '321' AND harmt IS NOT NULL;
Retrieve users with active status and updated after '2023-04-01' and updated_at is not null and date_updated is not null and profiles_id is not null.,SELECT * FROM users WHERE type = 'User' AND is_active = true;
Find organizations located in the city 'Denver' and trial_ends_at is not null and countries_id is not null and name is not empty and address is not empty.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND updated_at < '2023-06-30';
Get pharmacies activated by 'Pharmacist D' and activate_at is not null and activated_by is not null and date_disabled is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL;
Retrieve the staff directory for user_id '97531' and employee_id is not null and full_name is not empty and official_user_id is not null.,SELECT * FROM staff_directory WHERE user_id = '13579' AND official_user_id IS NOT NULL;
Find assets with an active status and serial_number is not empty and asset_type_id is not null and created_at is not null.,SELECT * FROM assets WHERE active = true AND updated_at IS NOT NULL;
Get hazards with the name 'Chemical Spill' and description is not empty and pharmacies_id is not null and updated_at is not null.,SELECT * FROM hazards WHERE pharmacies_id = '43210' AND created_at IS NOT NULL;
Retrieve the event staff roles with the forms_id '654' and order is not null and name is not empty and facility_id is not null.,SELECT * FROM event_staff_roles WHERE forms_id = '654' AND updates_by IS NOT NULL;
Get event actions for events_id '321' and action_date is not null and date_done is not null and updated_by is not null and date_created is not null.,SELECT * FROM event_actions WHERE events_id = '321' AND action_date IS NOT NULL;
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null and tools_id is not null and facility_id is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '876' AND facility_id = '543' AND updated_by IS NOT NULL;
Get events reported by user_id '987' and date_created is not null and updated_by is not null and harmt is not null and organization_id is not null.,SELECT * FROM events WHERE reporters_id = '987' AND date_created IS NOT NULL;
Retrieve users of type 'User' and active status is true and date_created is not null and sf_id is not null and roles_id is not null.,SELECT * FROM users WHERE type = 'User' AND date_updated IS NOT NULL;
Find organizations created after '2023-02-01' and countries_id is not null and trial_ends_at is not null and name is not empty and updated_at is not null.,SELECT * FROM organizations WHERE created_at > '2023-02-01' AND countries_id IS NOT NULL;
Get pharmacies in the city 'Chicago' and created_at is not null and activated_by is not null and organizations_id is not null and updated_at is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL;
Retrieve the staff directory for employees with IDs starting with 'EMP-'.,SELECT * FROM staff_directory WHERE employee_id LIKE 'EMP-%';
Get the assets that have been recently updated.,SELECT * FROM assets WHERE updated_at > (CURRENT_TIMESTAMP - INTERVAL 1 DAY);
Find hazards related to pharmacies with names containing the word 'Healthcare'.,SELECT * FROM hazards WHERE pharmacies_id IN (SELECT pharmacies_id FROM pharmacies WHERE name LIKE '%Healthcare%');
Get the event staff roles with names ending in 'Coordinator'.,SELECT * FROM event_staff_roles WHERE name LIKE '%Coordinator';
Retrieve event actions performed by users who have the role of 'Supervisor' in their profile.,SELECT * FROM event_actions WHERE user_id IN (SELECT user_id FROM users WHERE profiles_id IN (SELECT profiles_id FROM profiles WHERE role = 'Supervisor'));
Find form settings summary tools for facilities located in cities starting with 'S'.,SELECT * FROM formsettings_summarytools WHERE facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'S%');
Get events that involve multiple harm types and are reported by users with the 'Admin' role.,SELECT * FROM events WHERE harmt IS NOT NULL AND reporters_id IN (SELECT users_id FROM users WHERE profiles_id IN (SELECT profiles_id FROM profiles WHERE role = 'Admin'));
Retrieve users with active status and last updated on weekends.,"SELECT * FROM users WHERE is_active = 1 AND DAYOFWEEK(updated_at) IN (1, 7);"
Find organizations that are operating in multiple countries.,SELECT * FROM organizations WHERE sf_id IN (SELECT sf_id FROM organizations GROUP BY sf_id HAVING COUNT(DISTINCT countries_id) > 1);
Get pharmacies activated by users with names containing 'Pharma' and located in cities starting with 'P'.,SELECT * FROM pharmacies WHERE activated_by LIKE '%Pharma%' AND organizations_id IN (SELECT organizations_id FROM organizations WHERE address LIKE 'P%');
Retrieve the staff directory for users whose full names contain both 'John' and 'Doe'.,SELECT * FROM staff_directory WHERE full_name LIKE '%John%' AND full_name LIKE '%Doe%';
Find assets with the highest value in their asset_items_id.,SELECT * FROM assets WHERE asset_items_id IN (SELECT MAX(asset_items_id) FROM assets);
Get hazards associated with pharmacies that have the highest number of reported incidents.,SELECT * FROM hazards WHERE pharmacies_id IN (SELECT pharmacies_id FROM pharmacies GROUP BY pharmacies_id ORDER BY COUNT(*) DESC LIMIT 1);
Retrieve the event staff roles with the most number of forms associated with them.,SELECT * FROM event_staff_roles WHERE forms_id IN (SELECT forms_id FROM event_staff_roles GROUP BY forms_id ORDER BY COUNT(*) DESC);
Find event actions that were performed during weekends.,"SELECT * FROM event_actions WHERE WEEKDAY(action_date) IN (5, 6);"
Get form settings summary tools for organizations with names containing 'Institute' and facilities located in cities starting with 'M'.,SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE name LIKE '%Institute%') AND facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'M%');
Retrieve events where the harmt value is the same as the prescribers_id value.,SELECT * FROM events WHERE harmt = prescribers_id;
Find users who have the same date of creation and update.,SELECT * FROM users WHERE DATE(date_created) = DATE(updated_at);
Get organizations located in countries that have more than one trial ending date.,SELECT * FROM organizations WHERE trial_ends_at IN (SELECT trial_ends_at FROM organizations GROUP BY trial_ends_at HAVING COUNT(*) > 1);
Retrieve pharmacies that were activated on a specific date by users with the same initials as the pharmacy's name.,"SELECT * FROM pharmacies WHERE activate_at = 'specific_date' AND activated_by = SUBSTRING(name, 1, 2);"
Find the staff directory for users whose IDs are palindromes.,SELECT * FROM staff_directory WHERE employee_id = REVERSE(employee_id);
Get assets with serial numbers containing a sequence of three consecutive numbers.,SELECT * FROM assets WHERE serial_number REGEXP '[0-9]{3}';
Retrieve hazards with descriptions that include at least three different colors.,SELECT * FROM hazards WHERE description LIKE '%color1%' OR description LIKE '%color2%' OR description LIKE '%color3%';
Find event staff roles that have the same order as their respective forms_id.,SELECT * FROM event_staff_roles WHERE order = forms_id;
Get event actions performed by users who have the same user_pharmacy_id as their user_id.,SELECT * FROM event_actions WHERE user_id = user_pharmacy_id;
Retrieve form settings summary tools for organizations with the most recent updates and facilities with the oldest updates.,SELECT * FROM formsettings_summarytools WHERE updated_at IN (SELECT MAX(updated_at) FROM formsettings_summarytools) UNION SELECT * FROM formsettings_summarytools WHERE updated_at IN (SELECT MIN(updated_at) FROM formsettings_summarytools);
Find events where the harmt and prescribers_id values have the same number of digits.,SELECT * FROM events WHERE LENGTH(harmt) = LENGTH(prescribers_id);
Get users who have updated their profiles at least twice within a week.,"SELECT * FROM users WHERE updated_at >= (SELECT DATE_SUB(NOW(), INTERVAL 1 WEEK)) GROUP BY user_id HAVING COUNT(DISTINCT DATE(updated_at)) >= 2;"
Retrieve organizations that have the same trial_ends_at date as their creation date.,SELECT * FROM organizations WHERE trial_ends_at = DATE(created_at);
Find pharmacies in cities where the number of enabled pharmacies is greater than the number of disabled pharmacies.,SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) > (SELECT COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL);
Get the staff directory for users with the longest full names.,SELECT * FROM staff_directory WHERE LENGTH(full_name) = (SELECT MAX(LENGTH(full_name)) FROM staff_directory);
Retrieve assets that have been updated in the last 24 hours and have serial numbers with alternating letters and numbers.,SELECT * FROM assets WHERE updated_at > (CURRENT_TIMESTAMP - INTERVAL 1 DAY) AND serial_number REGEXP '([A-Za-z0-9]{2})+';
Find hazards with descriptions that mention a specific industry keyword.,SELECT * FROM hazards WHERE description LIKE '%industry_keyword%';
Get event staff roles with names containing the word 'Lead' and order values in descending order.,SELECT * FROM event_staff_roles WHERE name LIKE '%Lead%' ORDER BY order DESC;
Retrieve event actions performed by users whose user_pharmacy_id is an anagram of their user_id.,"SELECT * FROM event_actions WHERE WEEKDAY(action_date) IN (5, 6) AND date_done IS NOT NULL;"
Find form settings summary tools for organizations that have updated their facilities after updating their tools.,SELECT * FROM formsettings_summarytools WHERE facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'M%') AND updated_by IN (SELECT name FROM organizations WHERE name LIKE '%Institute%');
Get events where the harmt value is a prime number.,SELECT * FROM events WHERE harmt = prescribers_id AND harmt IS NOT NULL;
Retrieve users who have updated their profiles on the same day they were created.,SELECT * FROM users WHERE DATE(date_created) = DATE(updated_at) AND sf_id = updated_at;
Find organizations located in countries with the longest trial_ends_at duration.,SELECT * FROM organizations WHERE trial_ends_at IN (SELECT trial_ends_at FROM organizations GROUP BY trial_ends_at HAVING MAX(trial_ends_at) - MIN(trial_ends_at) = (SELECT MAX(trial_ends_at) - MIN(trial_ends_at) FROM organizations));
Get pharmacies activated by users with the shortest names.,SELECT * FROM pharmacies WHERE LENGTH(activated_by) = (SELECT MIN(LENGTH(activated_by)) FROM pharmacies);
Retrieve the staff directory for users whose full names have the same number of characters as their employee_id.,SELECT * FROM staff_directory WHERE LENGTH(full_name) = LENGTH(employee_id);
Find assets with serial numbers that form a palindrome.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number);
Get hazards with descriptions that contain at least three different animal names.,SELECT * FROM hazards WHERE description LIKE '%animal1%' OR description LIKE '%animal2%' OR description LIKE '%animal3%';
Retrieve event staff roles with names that contain the word 'Master' and have order values in ascending order.,SELECT * FROM event_staff_roles WHERE name LIKE '%Master%' ORDER BY order ASC;
Find event actions performed by users who have the same user_id and user_pharmacy_id.,SELECT * FROM event_actions WHERE user_id = user_pharmacy_id AND user_id IS NOT NULL;
"Get form settings summary tools for organizations that have updated their facilities after updating their tools, and the updated_by value is the same as the organization name.",SELECT * FROM formsettings_summarytools WHERE facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'M%') AND updated_by = (SELECT name FROM organizations WHERE name = updated_by);
Retrieve events where the harmt value is a perfect square.,SELECT * FROM events WHERE harmt = ROUND(SQRT(harmt));
Find users who have updated their profiles on the same day of the week they were created.,SELECT * FROM users WHERE WEEKDAY(date_created) = WEEKDAY(updated_at);
Get organizations that have the same trial_ends_at date as their updated_at date.,SELECT * FROM organizations WHERE trial_ends_at = updated_at;
Retrieve pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies.,SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) = (SELECT COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL);
Find the staff directory for users whose IDs contain a repeating pattern of characters.,SELECT * FROM staff_directory WHERE employee_id REGEXP '(.+)\1';
Get assets with serial numbers that include the user_id of the user who last updated them.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', (SELECT user_id FROM users ORDER BY updated_at DESC LIMIT 1), '%');"
Retrieve hazards with descriptions that mention specific weather conditions.,SELECT * FROM hazards WHERE description LIKE '%weather_condition1%' OR description LIKE '%weather_condition2%' OR description LIKE '%weather_condition3%';
Find event staff roles with names that include the word 'Expert' and have order values in a Fibonacci sequence.,"SELECT * FROM event_staff_roles WHERE name LIKE '%Expert%' ORDER BY FIELD(order, 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89);"
Get event actions performed by users whose user_pharmacy_id is a palindrome.,SELECT * FROM event_actions WHERE user_pharmacy_id = REVERSE(user_id);
Retrieve form settings summary tools for organizations where the tools_id is a prime number and the updated_by value contains the word 'Admin'.,"SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE tools_id IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29) AND updated_by LIKE '%Admin%');"
Find events where the harmt and prescribers_id values have the same digits but in a different order.,SELECT * FROM events WHERE harmt = prescribers_id AND harmt != prescribers_id;
Get users who have updated their profiles on a day that is a multiple of their sf_id.,SELECT * FROM users WHERE DAY(updated_at) % sf_id = 0;
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates.,"SELECT * FROM organizations WHERE trial_ends_at = DATE_ADD(created_at, INTERVAL updated_at DAY);"
Find pharmacies in cities where the number of enabled pharmacies is a prime number.,"SELECT * FROM pharmacies WHERE (SELECT COUNT(*) FROM pharmacies WHERE daye_enabled IS NOT NULL) IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);"
Get the staff directory for users whose full names contain a repeating sequence of three letters.,SELECT * FROM staff_directory WHERE full_name REGEXP '([A-Za-z]{3})\1\1';
Retrieve assets that have the same asset_type_id as their asset_items_id.,SELECT * FROM assets WHERE asset_type_id = asset_items_id;
Find hazards with descriptions that mention at least three different types of plants.,SELECT * FROM hazards WHERE description LIKE '%plant1%' OR description LIKE '%plant2%' OR description LIKE '%plant3%';
Get event staff roles with names that include the word 'Ninja' and have order values in descending prime order.,SELECT * FROM event_staff_roles WHERE name LIKE '%Ninja%' ORDER BY order DESC;
Retrieve event actions performed by users whose user_id is a multiple of their user_pharmacy_id.,SELECT * FROM event_actions WHERE user_id % user_pharmacy_id = 0;
Find form settings summary tools for organizations where the tools_id is a perfect square and the updated_by value is a palindrome.,"SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE tools_id IN (1, 4, 9, 16, 25, 36, 49, 64, 81) AND updated_by = REVERSE(updated_by));"
Get events where the harmt value is a multiple of the prescribers_id value.,SELECT * FROM events WHERE harmt % prescribers_id = 0;
Retrieve users who have updated their profiles on a day that is a power of 2.,"SELECT * FROM users WHERE DAY(updated_at) = POWER(2, sf_id);"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(DATE(created_at), DATE(updated_at));"
"Get pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies, and the city name is a palindrome.",SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) = (SELECT COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL) AND city = REVERSE(city);
Retrieve the staff directory for users whose IDs are prime numbers.,"SELECT * FROM staff_directory WHERE employee_id IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);"
Find assets with serial numbers that include the user_id of the user who created them.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', (SELECT user_id FROM users ORDER BY created_at DESC LIMIT 1), '%');"
Get hazards with descriptions that mention at least one fictional character and one famous historical figure.,SELECT * FROM hazards WHERE description LIKE '%fictional_character%' AND description LIKE '%famous_historical_figure%';
Retrieve event staff roles with names that include the word 'Guru' and have order values in ascending prime order.,"SELECT * FROM event_staff_roles WHERE name LIKE '%Guru%' ORDER BY FIELD(order, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);"
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order.,"SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND CONCAT(SORT(user_id), '') = CONCAT(SORT(user_pharmacy_id), '');"
Get form settings summary tools for organizations where the tools_id is a Fibonacci number and the updated_by value is a palindrome.,"SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE tools_id IN (0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89) AND updated_by = REVERSE(updated_by));"
Retrieve events where the harmt value is a palindrome.,SELECT * FROM events WHERE harmt = REVERSE(harmt);
Find users who have updated their profiles on a day that is a power of their sf_id.,"SELECT * FROM users WHERE DAY(updated_at) = POWER(sf_id, sf_id);"
"Get organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates, and the organization name contains the word 'Innovation'.","SELECT * FROM organizations WHERE trial_ends_at = DATE_ADD(created_at, INTERVAL updated_at DAY) AND name LIKE '%Innovation%';"
Retrieve pharmacies in cities where the number of enabled pharmacies is a perfect square.,"SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) = POWER(COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL, 2);"
Retrieve the staff directory for users whose IDs contain a palindrome.,SELECT * FROM staff_directory WHERE user_id LIKE '%a%' OR user_id LIKE '%e%' OR user_id LIKE '%i%' OR user_id LIKE '%o%' OR user_id LIKE '%u%';
Get assets with serial numbers that are an anagram of the user_id of the user who last updated them.,SELECT * FROM assets WHERE serial_number IN (SELECT user_id FROM users WHERE user_id LIKE '%a%' OR user_id LIKE '%e%' OR user_id LIKE '%i%' OR user_id LIKE '%o%' OR user_id LIKE '%u%') ORDER BY serial_number;
Find hazards related to pharmacies with names containing the word 'Wellness'.,SELECT * FROM hazards WHERE pharmacy_name LIKE '%Wellness%';
Get the event staff roles with names that form a sentence when concatenated together.,"SELECT * FROM event_staff_roles WHERE CONCAT(role_name, ' ') LIKE '%sentence%';"
Retrieve event actions performed by users who have the role of 'Manager' in their profile.,SELECT * FROM event_actions WHERE user_id IN (SELECT user_id FROM user_profiles WHERE role = 'Manager');
Find form settings summary tools for facilities located in cities with a vowel as the second letter.,SELECT * FROM form_settings_summary WHERE facility_city LIKE '_[AEIOU]%';
Get events that involve harm types with alphabetical characters and are reported by users with a username starting with 'A'.,SELECT * FROM events WHERE harm_types REGEXP '^[a-zA-Z]+$' AND reported_by LIKE 'A%';
Retrieve users with active status and last updated on a Monday.,SELECT * FROM users WHERE status = 'active' AND WEEKDAY(last_updated) = 0;
Find organizations that operate in countries whose names contain the word 'United'.,SELECT * FROM organizations WHERE country_name LIKE '%United%';
Get pharmacies activated by users with names containing 'Med' and located in cities ending with 'ville'.,SELECT * FROM pharmacies WHERE activated_by LIKE '%Med%' AND pharmacy_city LIKE '%ville';
Retrieve the staff directory for users whose full names contain a pattern of alternating vowels and consonants.,SELECT * FROM staff_directory WHERE full_name REGEXP '^[AEIOU]+[^AEIOU]+[AEIOU]+[^AEIOU]+$';
Find assets with the highest value in their asset_items_id and a serial number that is a palindrome.,SELECT * FROM assets WHERE asset_items_id = (SELECT MAX(asset_items_id) FROM assets) AND serial_number = REVERSE(serial_number);
Get hazards associated with pharmacies that have the highest number of reported incidents and a description containing the word 'safety'.,SELECT * FROM hazards WHERE pharmacy_id IN (SELECT pharmacy_id FROM pharmacies WHERE reported_incidents = (SELECT MAX(reported_incidents) FROM pharmacies) AND description LIKE '%safety%');
Retrieve the event staff roles with the most number of forms associated with them and names starting with 'Lead'.,"SELECT * FROM event_staff_roles WHERE role_name LIKE 'Lead%' AND role_id IN (SELECT role_id FROM forms GROUP BY role_id HAVING COUNT() = (SELECT MAX(form_count) FROM (SELECT role_id, COUNT() AS form_count FROM forms GROUP BY role_id) AS temp));"
Find event actions that were performed on public holidays.,SELECT * FROM event_actions WHERE action_date IN (SELECT date FROM holidays WHERE is_public_holiday = true);
Get form settings summary tools for organizations with names containing 'Health' and facilities located in cities with more than two words.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE organization_name LIKE '%Health%') AND facility_city REGEXP '^[a-zA-Z]+ [a-zA-Z]+ [a-zA-Z]+$';
Retrieve events where the harmt value is the same as the prescribers_id value and the event type is 'Emergency'.,SELECT * FROM events WHERE harmt = prescribers_id AND event_type = 'Emergency';
Find users who have the same date of creation and update and have a profile picture.,SELECT * FROM users WHERE creation_date = update_date AND profile_picture IS NOT NULL;
Get organizations located in countries with names starting with 'The' and trial_ends_at is not null.,SELECT * FROM organizations WHERE country_name LIKE 'The%' AND trial_ends_at IS NOT NULL;
Retrieve pharmacies that were activated on a specific date by users with the same initials as the pharmacy's name and a user profile picture.,"SELECT * FROM pharmacies WHERE activation_date = 'specific_date' AND activated_by = SUBSTRING(pharmacy_name, 1, 2) AND user_id = SUBSTRING(pharmacy_name, 1, 2) AND profile_picture IS NOT NULL;"
Find the staff directory for users whose IDs are the reverse of their employee_id.,SELECT * FROM staff_directory WHERE REVERSE(user_id) = employee_id;
Get assets with serial numbers containing a sequence of consecutive prime numbers.,SELECT * FROM assets WHERE serial_number LIKE '%2357%' OR serial_number LIKE '%357%';
"Retrieve hazards with descriptions that include at least three different types of hazards (e.g., fire, chemical, electrical).",SELECT * FROM hazards WHERE description LIKE '%fire%' AND description LIKE '%chemical%' AND description LIKE '%electrical%';
Find event staff roles that have the same order as their respective forms_id and names ending with 'Specialist'.,SELECT * FROM event_staff_roles WHERE forms_id = role_id AND role_name LIKE '%Specialist';
Get event actions performed by users who have the same user_pharmacy_id as their user_id and the action date is a national holiday.,SELECT * FROM event_actions WHERE user_id = user_pharmacy_id AND action_date IN (SELECT date FROM holidays WHERE is_national_holiday = true);
Retrieve form settings summary tools for organizations with the most recent updates and facilities with the oldest updates and updated_by is an anagram of the organization name.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations ORDER BY update_date DESC LIMIT 1) AND facility_id IN (SELECT facility_id FROM facilities ORDER BY update_date ASC LIMIT 1) AND updated_by = (SELECT organization_name FROM organizations ORDER BY update_date DESC LIMIT 1);
Find events where the harmt and prescribers_id values have the same number of digits and the event is marked as 'Urgent'.,SELECT * FROM events WHERE LENGTH(harmt) = LENGTH(prescribers_id) AND event_mark = 'Urgent';
Get users who have updated their profiles at least twice within a week and have the same date of creation and update.,"SELECT * FROM users WHERE creation_date = update_date AND DATEDIFF(update_date, creation_date) <= 7 GROUP BY user_id HAVING COUNT(*) >= 2;"
Retrieve organizations that have the same trial_ends_at date as their creation date and have a company logo.,SELECT * FROM organizations WHERE trial_ends_at = creation_date AND company_logo IS NOT NULL;
Find pharmacies in cities where the number of enabled pharmacies is greater than the number of disabled pharmacies and the city name contains a repeating letter.,SELECT * FROM pharmacies WHERE pharmacy_city IN (SELECT pharmacy_city FROM pharmacies GROUP BY pharmacy_city HAVING COUNT(*) > 2) AND enabled_pharmacies > disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z])\1';
Get the staff directory for users with the longest full names and a username containing the word 'super'.,SELECT * FROM staff_directory WHERE LENGTH(full_name) = (SELECT MAX(LENGTH(full_name)) FROM staff_directory) AND username LIKE '%super%';
Retrieve assets that have been updated in the last 24 hours and have serial numbers with alternating uppercase and lowercase letters.,SELECT * FROM assets WHERE last_updated >= NOW() - INTERVAL 1 DAY AND serial_number REGEXP '^[A-Za-z]{1}[a-zA-Z]{1}[A-Za-z]{1}[a-zA-Z]{1}.*';
"Find hazards with descriptions that mention at least three different natural disasters (e.g., earthquake, hurricane, tornado).",SELECT * FROM hazards WHERE description REGEXP 'earthquake' AND description REGEXP 'hurricane' AND description REGEXP 'tornado';
Get event staff roles with names containing the word 'Champion' and order values in descending even numbers.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Champion%' AND order_value % 2 = 0 ORDER BY order_value DESC;
Retrieve event actions performed by users whose user_pharmacy_id is an anagram of their user_id and the action date is their birthdate.,SELECT * FROM event_actions WHERE user_pharmacy_id = user_id AND action_date = birthdate;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and have the same updated_by value as the organization name.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = (SELECT organization_name FROM organizations WHERE updated_by = REVERSE(organization_name));
Get events where the harmt value is a prime number and the event location is in a city starting with 'S'.,SELECT * FROM events WHERE harmt IN (SELECT number FROM primes) AND event_location LIKE 'S%';
Retrieve users who have updated their profiles on the same day they were created and have a phone number.,SELECT * FROM users WHERE DATE(creation_date) = DATE(update_date) AND phone_number IS NOT NULL;
Find organizations located in countries with the longest trial_ends_at duration and a company website.,"SELECT * FROM organizations WHERE DATEDIFF(trial_ends_at, creation_date) = (SELECT MAX(DATEDIFF(trial_ends_at, creation_date)) FROM organizations) AND company_website IS NOT NULL;"
Get pharmacies activated by users with the shortest names and a registration certificate.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city = REVERSE(pharmacy_city);
Retrieve the staff directory for users whose full names have the same number of characters as their employee_id and a job title containing the word 'Senior'.,SELECT * FROM staff_directory WHERE REVERSE(user_id) = employee_id AND job_title LIKE '%Senior%';
"Find assets with serial numbers that form a pattern using a combination of letters and numbers (e.g., A1B2C3).",SELECT * FROM assets WHERE serial_number REGEXP '^[A-Za-z0-9]*$';
Get hazards with descriptions that contain at least three different colors and are classified as 'High Risk'.,SELECT * FROM hazards WHERE description REGEXP 'red' AND description REGEXP 'blue' AND description REGEXP 'green' AND hazard_classification = 'High Risk';
Retrieve event staff roles with names that contain the word 'Captain' and have order values in ascending prime numbers.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Captain%' AND order_value IN (SELECT number FROM primes ORDER BY number ASC);
Find event actions performed by users who have the same user_id and user_pharmacy_id and the action date is a weekend.,"SELECT * FROM event_actions WHERE user_id = user_pharmacy_id AND WEEKDAY(action_date) IN (5, 6);"
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares);
Retrieve events where the harmt value is a perfect square and the event type is 'Accident'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Meeting';
Find users who have updated their profiles on a day that is a multiple of their sf_id and have a bio.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND bio IS NOT NULL;"
Get organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and a mission statement.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_logo IS NOT NULL;"
Retrieve pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name is a palindrome.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (disabled_pharmacies * disabled_pharmacies) AND pharmacy_award = 'Pharmacy of the Year' AND pharmacy_name = REVERSE(pharmacy_city);
Find the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id);
Get assets with serial numbers that include the user_id of the user who created them and have a purchase receipt.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND purchase_receipt IS NOT NULL;"
"Retrieve hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal.",SELECT * FROM hazards WHERE description REGEXP 'computer' AND description REGEXP 'smartphone' AND description REGEXP 'animal';
Find event staff roles with names that include the word 'Ambassador' and order values in descending prime numbers.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Ambassador%' AND order_value IN (SELECT number FROM primes ORDER BY number DESC);
Get event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a public holiday.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM holidays WHERE is_national_holiday = true);
Retrieve form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares);
Find events where the harmt value is a palindrome and the event type is 'Meeting'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Accident';
Get users who have updated their profiles on a day that is a power of 2 and have a skill endorsement.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true;"
Retrieve organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and a company logo.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement IS NOT NULL;"
Find pharmacies in cities where the number of enabled pharmacies is a perfect square and have a 'Pharmacy of the Year' award.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city = REVERSE(pharmacy_name);
Get the staff directory for users whose IDs are the reverse of their employee_id and have a professional certification.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = supervisor_last_name AND job_title LIKE '%Expert%';
Retrieve assets with serial numbers that contain the user_id of the user who last updated them and have a warranty.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true);
"Find hazards with descriptions that mention at least three different types of food (e.g., pizza, sushi, burger) and are marked as 'Critical'.",SELECT * FROM hazards WHERE description REGEXP 'earthquake' AND description REGEXP 'hurricane' AND description REGEXP 'tornado' AND hazard_classification = 'Severe';
Get event staff roles with names that include the word 'Innovator' and order values in ascending Fibonacci sequence.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC);
Retrieve event actions performed by users whose user_id is a multiple of their user_pharmacy_id and the action date is a national holiday.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM holidays WHERE is_weekday = true) AND action_time BETWEEN '09:00:00' AND '17:00:00';
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the tools_id is a perfect square.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic');
Get events where the harmt value is a multiple of the prescribers_id value and the event location is in a city ending with 'town'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference';
Retrieve users who have updated their profiles on a day that is a power of their sf_id and have a verified email address.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL;"
Find organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true;"
Get pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z])\1';
Retrieve the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert'.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%';
Find assets with serial numbers that form a palindrome and have a purchase date on a public holiday.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true);
"Get hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe'.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe';
Retrieve event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC);
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND user_id IN (SELECT number FROM digits_permutation) AND user_pharmacy_id IN (SELECT number FROM digits_permutation);
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference';
Find users who have updated their profiles on a day that is a power of 2 and have a verified phone number.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND phone_number_verified = true;"
Get organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation'.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_website IS NOT NULL;"
Retrieve pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true;
Find the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager'.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%';
Get assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL;"
"Retrieve hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency'.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency';
Find event staff roles with names that include the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles);
Get event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true;
Retrieve form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true;
Find events where the harmt value is a palindrome and the event type is 'Workshop' and the event location is a city with a palindrome name.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company';
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist'.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%';
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL;
Get events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL;
Retrieve users who have updated their profiles on a day that is a power of 2 and have a verified phone number and a skill endorsement and have received a performance award.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND phone_number_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL;"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation' and a company logo and are recognized as a leader in their industry.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_logo IS NOT NULL AND recognized_leader = true AND diverse_workforce = true;"
Get pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true;
Retrieve the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager' and have received a promotion.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%' AND promotion_status = 'Promoted';
Find assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record and a service history.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL;"
"Get hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency' and have a high likelihood of occurrence.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency' AND likelihood_of_occurrence = 'High';
Retrieve event staff roles with names that include the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true;
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Workshop' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Workshop' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7';
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award IS NOT NULL;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_from_attendees = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true;
Get events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_industry_publication = true;
Retrieve users who have updated their profiles on a day that is a power of 2 and have a verified phone number and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND phone_number_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true;"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation' and a company logo and are recognized as a leader in their industry and have a positive reputation among customers and stakeholders.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_logo IS NOT NULL AND recognized_leader = true AND positive_reputation_among_customers = true;"
Get pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7';
Retrieve the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager' and have received a promotion and have successfully completed leadership training.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%' AND promotion_status = 'Promoted' AND completed_leadership_training = true;
Find assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record and a service history and have been audited for compliance.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND audited_for_compliance = true;"
"Get hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency' and have a high likelihood of occurrence and have been identified as potential risks in the industry.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency' AND likelihood_of_occurrence = 'High' AND identified_as_industry_risks = true;
Retrieve event staff roles with names that include the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_from_attendees = true AND contributed_to_best_practices = true;
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND recognized_as_industry_influencer = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_industry_publication = true AND diverse_audience = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND invited_to_speak_at_conferences = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND recognized_as_leaders = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award and have successfully completed a management training program.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award = true AND management_training_program_completion = true;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true;
Get events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true;
Retrieve users who have updated their profiles on a day that is a power of 2 and have a verified phone number and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true;"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation' and a company logo and are recognized as a leader in their industry and have a positive reputation among customers and stakeholders and have demonstrated sustained financial growth over the years.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_logo IS NOT NULL AND recognized_leader = true AND positive_reputation = true AND sustained_financial_growth = true;"
Get pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true;
Retrieve the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager' and have received a promotion and have successfully completed leadership training and have been recognized as outstanding performers by senior management.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%' AND promotion_status = 'Promoted' AND leadership_training_completion = true AND outstanding_performer_recognition = true;
Find assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets and have undergone regular calibration and quality assurance checks.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true AND calibration_quality_assurance_checks = true;"
"Get hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency' and have a high likelihood of occurrence and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies and have been communicated to all relevant stakeholders.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency' AND likelihood_of_occurrence = 'High' AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true AND communication_to_stakeholders = true;
Retrieve event staff roles with names that contain the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences and have published books on event planning.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true AND published_books_event_planning = true;
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals and has served as a judge for event industry awards.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true AND event_industry_award_judge = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals and has an active mentorship program for new employees.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true AND mentorship_program = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants and has achieved a high level of attendee satisfaction.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true AND attendee_satisfaction_high = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management and have launched their own event planning consultancy.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true AND event_planning_consultancy_launch = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region and have been featured in business magazines as examples of successful organizations and have received prestigious industry accolades.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND top_employer_recognition = true AND business_magazine_feature = true AND industry_accolades_received = true AND international_market_presence = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems and has partnered with local healthcare providers for collaborative patient care.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true AND collaborative_patient_care = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award and have successfully completed a management training program and have published articles on event management in leading industry journals.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award = true AND management_training_program_completion = true AND published_articles_event_management_journals = true;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets and have undergone regular calibration and quality assurance checks and have been insured against loss or damage.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true AND calibration_quality_assurance_checks = true AND insurance_against_loss_damage = true;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies and have been communicated to all relevant stakeholders and have been incorporated into employee training programs.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true AND communication_to_stakeholders = true AND employee_training_programs = true;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences and have published books on event planning and have provided training workshops for aspiring event professionals.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true AND published_books_event_planning = true AND training_workshops_aspiring_professionals = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals and has served as a judge for event industry awards and has organized international conferences in collaboration with renowned industry associations.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true AND event_industry_award_judge = true AND international_conference_organization = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals and has an active mentorship program for new employees and has launched a research and innovation center for event technology advancements.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true AND mentorship_program = true AND research_innovation_center_launched = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants and has achieved a high level of attendee satisfaction and has generated significant media coverage.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true AND attendee_satisfaction_high = true AND significant_media_coverage = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management and have launched their own event planning consultancy and have expanded their business globally.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true AND event_planning_consultancy_launch = true AND business_expansion_global = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region and have been featured in business magazines as examples of successful organizations and have received prestigious industry accolades and have established their presence in multiple international markets.,SELECT * FROM organizations WHERE trial_ends_at = creation_date + updated_at AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND top_employer_recognition = true AND business_magazine_feature = true AND industry_accolades_received = true AND international_market_presence = true AND sustainable_business_practices = true;
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems and has partnered with local healthcare providers for collaborative patient care and has implemented a patient medication adherence program.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true AND healthcare_provider_collaboration = true AND patient_medication_adherence_program = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award and have successfully completed a management training program and have published articles on event management in leading industry journals and have delivered keynote speeches at international event conferences.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award = true AND management_training_program_completion = true AND published_articles_event_management_journals = true AND keynote_speeches_delivered = true;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets and have undergone regular calibration and quality assurance checks and have been insured against loss or damage and have been included in a comprehensive asset management system.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true AND calibration_quality_assurance_checks = true AND insurance_against_loss_damage = true AND asset_management_system_included = true;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies and have been communicated to all relevant stakeholders and have been incorporated into employee training programs and have been subject to periodic reviews and updates.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true AND communication_to_stakeholders = true AND employee_training_programs = true AND periodic_reviews_updates = true;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences and have published books on event planning and have provided training workshops for aspiring event professionals and have organized international conferences in collaboration with renowned industry associations.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true AND published_books_event_planning = true AND training_workshops_aspiring_professionals = true AND international_conference_organization = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals and has served as a judge for event industry awards and has organized international conferences in collaboration with renowned industry associations and has received international recognition for event innovation and excellence.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true AND event_industry_award_judge = true AND international_conference_organization = true AND event_innovation_excellence_recognition = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals and has an active mentorship program for new employees and has launched a research and innovation center for event technology advancements and has contributed to the development of industry standards and best practices.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true AND mentorship_program = true AND research_innovation_center_launched = true AND industry_standards_best_practices_contribution = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants and has achieved a high level of attendee satisfaction and has generated significant media coverage and has been recognized as a leading event in the industry.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true AND attendee_satisfaction_high = true AND significant_media_coverage = true AND leading_event_recognition = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management and have launched their own event planning consultancy and have expanded their business globally and have been appointed as advisors to event industry associations.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true AND event_planning_consultancy_launch = true AND business_expansion_global = true AND industry_association_advisor = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region and have been featured in business magazines as examples of successful organizations and have received prestigious industry accolades and have established their presence in multiple international markets and have implemented sustainable business practices to reduce environmental impact.,SELECT * FROM organizations WHERE trial_ends_at = creation_date + updated_at AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND top_employer_recognition = true AND business_magazine_feature = true AND industry_accolades_received = true AND international_market_presence = true AND sustainable_business_practices = true AND scholarship_program = true;
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems and has partnered with local healthcare providers for collaborative patient care and has implemented a patient medication adherence program and has a dedicated clinical pharmacist on staff.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true AND healthcare_provider_collaboration = true AND patient_medication_adherence_program = true AND clinical_pharmacist_on_staff = true;
Show all hazards with description containing the word 'safety',SELECT * FROM hazards WHERE description LIKE '%safety%';
List all pharmacies with organization_id 'OrgXYZ' or countries_id 'USA',SELECT * FROM pharmacies WHERE organization_id = 'OrgXYZ' OR countries_id = 'USA';
Get the events with harmt less than 100 and is_open set to FALSE,SELECT * FROM events WHERE harmt < 100 AND is_open = FALSE;
Retrieve all users with type 'Employee' and active set to TRUE,SELECT * FROM users WHERE type = 'Employee' AND active = TRUE;
Find staff members with the full_name 'Jane Doe' or locum_full_name 'John Smith',SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' OR locum_full_name = 'John Smith';
Get the assets with active status and asset_type_id 'AT007',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT007';
Retrieve events with harmt greater than 100 or is_open set to TRUE,SELECT * FROM events WHERE harmt > 100 OR is_open = TRUE;
List all users from organization_id 'Org789' and type 'Employee',SELECT * FROM users WHERE organization_id = 'Org789' AND type = 'Employee';
Get the pharmacies with created_at after '2023-01-01' and updated_at before '2023-06-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND updated_at < '2023-06-01';
Retrieve the organizations with trial_ends_at before '2023-12-31' or date_created after '2023-01-01',SELECT * FROM organizations WHERE trial_ends_at < '2023-12-31' OR date_created > '2023-01-01';
Show all events from users with roles_id 'Role123' and updated_at after '2023-07-01',SELECT * FROM events WHERE users_id IN (SELECT sf_id FROM users WHERE roles_id = 'Role123') AND updated_at > '2023-07-01';
Find the facilities with the oldest event and their corresponding event name,"SELECT facility.*, events.event_name FROM facility JOIN events ON facility.id = events.facility_id WHERE events.date_created = (SELECT MIN(date_created) FROM events);"
Get the users with type 'Admin' and profiles_id 'P789',SELECT * FROM users WHERE type = 'Admin' AND profiles_id = 'P789';
Retrieve all assets with asset_type_id 'AT008' or asset_type_id 'AT009',SELECT * FROM assets WHERE asset_type_id = 'AT008' OR asset_type_id = 'AT009';
List all users with roles_id 'Role789' and official_user_id 'OU002',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU002';
Get the events with harmt less than 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt < 50 AND is_open = TRUE;
Retrieve all staff members with official_user_id 'OU003' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU003' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT010',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT010';
Find events with harmt greater than 200 and is_open set to FALSE,SELECT * FROM events WHERE harmt > 200 AND is_open = FALSE;
Get all users with profiles_id 'P012' or type 'Admin',SELECT * FROM users WHERE profiles_id = 'P012' OR type = 'Admin';
List all assets associated with pharmacy 'Pharma4' or 'Pharma5',SELECT * FROM assets WHERE pharmacies_id = 'Pharma4' OR pharmacies_id = 'Pharma5';
Show all staff members from organization 'Org012' with is_active set to TRUE,SELECT * FROM staff_directory WHERE org_id = 'Org012' AND is_active = TRUE;
Find the facilities with trial_ends_at after '2023-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-06-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-06-01';
Retrieve all assets with asset_type_id 'AT011' or asset_type_id 'AT012',SELECT * FROM assets WHERE asset_type_id = 'AT011' OR asset_type_id = 'AT012';
List all users with roles_id 'Role234' and official_user_id 'OU003',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU003';
Retrieve all staff members with official_user_id 'OU004' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU004' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT013',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT013';
Get all users with profiles_id 'P013' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P013' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma6' or 'Pharma7',SELECT * FROM assets WHERE pharmacies_id = 'Pharma6' OR pharmacies_id = 'Pharma7';
Find the facilities with trial_ends_at after '2023-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-07-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-07-01';
Retrieve all assets with asset_type_id 'AT014' or asset_type_id 'AT015',SELECT * FROM assets WHERE asset_type_id = 'AT014' OR asset_type_id = 'AT015';
List all users with roles_id 'Role345' and official_user_id 'OU004',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU004';
Retrieve all staff members with official_user_id 'OU005' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU005' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT016',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT016';
Get all users with profiles_id 'P014' or type 'Employee',SELECT * FROM users WHERE profiles_id = 'P014' OR type = 'Employee';
List all assets associated with pharmacy 'Pharma8' or 'Pharma9',SELECT * FROM assets WHERE pharmacies_id = 'Pharma8' OR pharmacies_id = 'Pharma9';
Get the names of all users with type 'Manager' or roles_id 'Role345',SELECT full_name FROM users WHERE type = 'Manager' OR roles_id = 'Role345';
Find the facilities with trial_ends_at after '2023-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-08-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-08-01';
Retrieve all assets with asset_type_id 'AT017' or asset_type_id 'AT018',SELECT * FROM assets WHERE asset_type_id = 'AT017' OR asset_type_id = 'AT018';
List all users with roles_id 'Role456' and official_user_id 'OU005',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU005';
Retrieve all staff members with official_user_id 'OU006' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU006' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT019',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT019';
Get all users with profiles_id 'P015' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P015' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma10' or 'Pharma11',SELECT * FROM assets WHERE pharmacies_id = 'Pharma10' OR pharmacies_id = 'Pharma11';
Find the facilities with trial_ends_at after '2023-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-09-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-09-01';
Retrieve all assets with asset_type_id 'AT020' or asset_type_id 'AT021',SELECT * FROM assets WHERE asset_type_id = 'AT020' OR asset_type_id = 'AT021';
Get all users with profiles_id 'P016' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P016' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma12' or 'Pharma13',SELECT * FROM assets WHERE pharmacies_id = 'Pharma12' OR pharmacies_id = 'Pharma13';
Find the facilities with trial_ends_at after '2023-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-10-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-10-01';
Retrieve all assets with asset_type_id 'AT023' or asset_type_id 'AT024',SELECT * FROM assets WHERE asset_type_id = 'AT023' OR asset_type_id = 'AT024';
List all users with roles_id 'Role678' and official_user_id 'OU007',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU007';
Retrieve all staff members with official_user_id 'OU008' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU008' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT025',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT025';
Get all users with profiles_id 'P017' or type 'Employee',SELECT * FROM users WHERE profiles_id = 'P017' OR type = 'Employee';
List all assets associated with pharmacy 'Pharma14' or 'Pharma15',SELECT * FROM assets WHERE pharmacies_id = 'Pharma14' OR pharmacies_id = 'Pharma15';
Get the names of all users with type 'Manager' or roles_id 'Role678',SELECT full_name FROM users WHERE type = 'Manager' OR roles_id = 'Role678';
Find the facilities with trial_ends_at after '2023-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-11-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-11-01';
Retrieve all assets with asset_type_id 'AT026' or asset_type_id 'AT027',SELECT * FROM assets WHERE asset_type_id = 'AT026' OR asset_type_id = 'AT027';
List all users with roles_id 'Role789' and official_user_id 'OU008',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU008';
Retrieve all staff members with official_user_id 'OU009' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU009' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT028',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT028';
Get all users with profiles_id 'P018' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P018' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma16' or 'Pharma17',SELECT * FROM assets WHERE pharmacies_id = 'Pharma16' OR pharmacies_id = 'Pharma17';
Find the facilities with trial_ends_at after '2024-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-01';
Retrieve all assets with asset_type_id 'AT029' or asset_type_id 'AT030',SELECT * FROM assets WHERE asset_type_id = 'AT029' OR asset_type_id = 'AT030';
List all users with roles_id 'Role890' and official_user_id 'OU009',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU009';
Retrieve all staff members with official_user_id 'OU010' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU010' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT031',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT031';
Get all users with profiles_id 'P019' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P019' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma18' or 'Pharma19',SELECT * FROM assets WHERE pharmacies_id = 'Pharma18' OR pharmacies_id = 'Pharma19';
Find the facilities with trial_ends_at after '2024-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-02',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-02';
Retrieve all assets with asset_type_id 'AT032' or asset_type_id 'AT033',SELECT * FROM assets WHERE asset_type_id = 'AT032' OR asset_type_id = 'AT033';
List all users with roles_id 'Role901' and official_user_id 'OU010',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU010';
List all users with roles_id 'Role123' and official_user_id 'OU012',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU012';
Retrieve all staff members with official_user_id 'OU013' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU013' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT040',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT040';
Get all users with profiles_id 'P022' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P022' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma24' or 'Pharma25',SELECT * FROM assets WHERE pharmacies_id = 'Pharma24' OR pharmacies_id = 'Pharma25';
Find the facilities with trial_ends_at after '2024-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-05',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-05';
Retrieve all assets with asset_type_id 'AT041' or asset_type_id 'AT042',SELECT * FROM assets WHERE asset_type_id = 'AT041' OR asset_type_id = 'AT042';
List all users with roles_id 'Role234' and official_user_id 'OU013',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU013';
Retrieve all staff members with official_user_id 'OU014' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU014' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT043',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT043';
Get all users with profiles_id 'P023' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P023' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma26' or 'Pharma27',SELECT * FROM assets WHERE pharmacies_id = 'Pharma26' OR pharmacies_id = 'Pharma27';
Find the facilities with trial_ends_at after '2024-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-06',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-06';
Retrieve all assets with asset_type_id 'AT044' or asset_type_id 'AT045',SELECT * FROM assets WHERE asset_type_id = 'AT044' OR asset_type_id = 'AT045';
List all users with roles_id 'Role345' and official_user_id 'OU014',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU014';
Retrieve all staff members with official_user_id 'OU015' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU015' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT046',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT046';
Get all users with profiles_id 'P024' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P024' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma28' or 'Pharma29',SELECT * FROM assets WHERE pharmacies_id = 'Pharma28' OR pharmacies_id = 'Pharma29';
Find the facilities with trial_ends_at after '2024-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-07',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-07';
Retrieve all assets with asset_type_id 'AT047' or asset_type_id 'AT048',SELECT * FROM assets WHERE asset_type_id = 'AT047' OR asset_type_id = 'AT048';
List all users with roles_id 'Role456' and official_user_id 'OU015',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU015';
Retrieve all staff members with official_user_id 'OU016' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU016' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT049',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT049';
Get all users with profiles_id 'P025' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P025' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma30' or 'Pharma31',SELECT * FROM assets WHERE pharmacies_id = 'Pharma30' OR pharmacies_id = 'Pharma31';
Find the facilities with trial_ends_at after '2024-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-08',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-08';
Retrieve all assets with asset_type_id 'AT050' or asset_type_id 'AT051',SELECT * FROM assets WHERE asset_type_id = 'AT050' OR asset_type_id = 'AT051';
List all users with roles_id 'Role567' and official_user_id 'OU016',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU016';
Retrieve all staff members with official_user_id 'OU017' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU017' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT052',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT052';
Get all users with profiles_id 'P026' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P026' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma32' or 'Pharma33',SELECT * FROM assets WHERE pharmacies_id = 'Pharma32' OR pharmacies_id = 'Pharma33';
Find the facilities with trial_ends_at after '2024-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-09',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-09';
Retrieve all assets with asset_type_id 'AT053' or asset_type_id 'AT054',SELECT * FROM assets WHERE asset_type_id = 'AT053' OR asset_type_id = 'AT054';
List all users with roles_id 'Role678' and official_user_id 'OU017',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU017';
Retrieve all staff members with official_user_id 'OU018' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU018' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT055',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT055';
Get all users with profiles_id 'P027' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P027' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma34' or 'Pharma35',SELECT * FROM assets WHERE pharmacies_id = 'Pharma34' OR pharmacies_id = 'Pharma35';
Find the facilities with trial_ends_at after '2024-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-10',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-10';
Retrieve all assets with asset_type_id 'AT056' or asset_type_id 'AT057',SELECT * FROM assets WHERE asset_type_id = 'AT056' OR asset_type_id = 'AT057';
List all users with roles_id 'Role789' and official_user_id 'OU018',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU018';
Retrieve all staff members with official_user_id 'OU019' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU019' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT058',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT058';
Get all users with profiles_id 'P028' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P028' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma36' or 'Pharma37',SELECT * FROM assets WHERE pharmacies_id = 'Pharma36' OR pharmacies_id = 'Pharma37';
Find the facilities with trial_ends_at after '2024-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-11',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-11';
Retrieve all assets with asset_type_id 'AT059' or asset_type_id 'AT060',SELECT * FROM assets WHERE asset_type_id = 'AT059' OR asset_type_id = 'AT060';
List all users with roles_id 'Role890' and official_user_id 'OU019',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU019';
Retrieve all staff members with official_user_id 'OU020' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU020' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT061',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT061';
Get all users with profiles_id 'P029' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P029' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma38' or 'Pharma39',SELECT * FROM assets WHERE pharmacies_id = 'Pharma38' OR pharmacies_id = 'Pharma39';
Find the facilities with trial_ends_at after '2024-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-12',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-12';
Retrieve all assets with asset_type_id 'AT062' or asset_type_id 'AT063',SELECT * FROM assets WHERE asset_type_id = 'AT062' OR asset_type_id = 'AT063';
List all users with roles_id 'Role901' and official_user_id 'OU020',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU020';
Retrieve all staff members with official_user_id 'OU021' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU021' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT064',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT064';
Get all users with profiles_id 'P030' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P030' OR type = 'Manager';
Retrieve the facilities with organization_id 'Org109' and is_active set to FALSE,SELECT * FROM facilities WHERE organization_id = 'Org109' AND is_active = FALSE;
List all assets associated with pharmacy 'Pharma40' or 'Pharma41',SELECT * FROM assets WHERE pharmacies_id = 'Pharma40' OR pharmacies_id = 'Pharma41';
Show all staff members from organization 'Org109' with is_active set to TRUE,SELECT * FROM staff_directory WHERE org_id = 'Org109' AND is_active = TRUE;
Find the facilities with trial_ends_at after '2025-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-13',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-13';
Retrieve all assets with asset_type_id 'AT065' or asset_type_id 'AT066',SELECT * FROM assets WHERE asset_type_id = 'AT065' OR asset_type_id = 'AT066';
List all users with roles_id 'Role012' and official_user_id 'OU021',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU021';
Retrieve all staff members with official_user_id 'OU022' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU022' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT067',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT067';
Get all users with profiles_id 'P031' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P031' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma42' or 'Pharma43',SELECT * FROM assets WHERE pharmacies_id = 'Pharma42' OR pharmacies_id = 'Pharma43';
Find the facilities with trial_ends_at after '2025-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-14',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-14';
Retrieve all assets with asset_type_id 'AT068' or asset_type_id 'AT069',SELECT * FROM assets WHERE asset_type_id = 'AT068' OR asset_type_id = 'AT069';
List all users with roles_id 'Role123' and official_user_id 'OU022',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU022';
Retrieve all staff members with official_user_id 'OU023' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU023' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT070',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT070';
Get all users with profiles_id 'P032' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P032' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma44' or 'Pharma45',SELECT * FROM assets WHERE pharmacies_id = 'Pharma44' OR pharmacies_id = 'Pharma45';
Find the facilities with trial_ends_at after '2025-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-03-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-15',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-15';
Retrieve all assets with asset_type_id 'AT071' or asset_type_id 'AT072',SELECT * FROM assets WHERE asset_type_id = 'AT071' OR asset_type_id = 'AT072';
List all users with roles_id 'Role234' and official_user_id 'OU023',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU023';
Retrieve all staff members with official_user_id 'OU024' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU024' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT073',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT073';
Get all users with profiles_id 'P033' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P033' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma46' or 'Pharma47',SELECT * FROM assets WHERE pharmacies_id = 'Pharma46' OR pharmacies_id = 'Pharma47';
Find the facilities with trial_ends_at after '2025-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-04-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-16',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-16';
Retrieve all assets with asset_type_id 'AT074' or asset_type_id 'AT075',SELECT * FROM assets WHERE asset_type_id = 'AT074' OR asset_type_id = 'AT075';
List all users with roles_id 'Role345' and official_user_id 'OU024',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU024';
Retrieve all staff members with official_user_id 'OU025' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU025' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT076',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT076';
Get all users with profiles_id 'P034' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P034' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma48' or 'Pharma49',SELECT * FROM assets WHERE pharmacies_id = 'Pharma48' OR pharmacies_id = 'Pharma49';
Find the facilities with trial_ends_at after '2025-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-17',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-17';
Retrieve all assets with asset_type_id 'AT077' or asset_type_id 'AT078',SELECT * FROM assets WHERE asset_type_id = 'AT077' OR asset_type_id = 'AT078';
List all users with roles_id 'Role456' and official_user_id 'OU025',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU025';
Retrieve all staff members with official_user_id 'OU026' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU026' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT079',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT079';
Get all users with profiles_id 'P035' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P035' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma50' or 'Pharma51',SELECT * FROM assets WHERE pharmacies_id = 'Pharma50' OR pharmacies_id = 'Pharma51';
Find the facilities with trial_ends_at after '2025-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-18',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-18';
Retrieve all assets with asset_type_id 'AT080' or asset_type_id 'AT081',SELECT * FROM assets WHERE asset_type_id = 'AT080' OR asset_type_id = 'AT081';
List all users with roles_id 'Role567' and official_user_id 'OU026',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU026';
Retrieve all staff members with official_user_id 'OU027' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU027' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT082',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT082';
Get all users with profiles_id 'P036' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P036' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma52' or 'Pharma53',SELECT * FROM assets WHERE pharmacies_id = 'Pharma52' OR pharmacies_id = 'Pharma53';
Find the facilities with trial_ends_at after '2025-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-19',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-19';
Retrieve all assets with asset_type_id 'AT083' or asset_type_id 'AT084',SELECT * FROM assets WHERE asset_type_id = 'AT083' OR asset_type_id = 'AT084';
List all users with roles_id 'Role678' and official_user_id 'OU027',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU027';
Retrieve all staff members with official_user_id 'OU028' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU028' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT085',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT085';
Get all users with profiles_id 'P037' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P037' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma54' or 'Pharma55',SELECT * FROM assets WHERE pharmacies_id = 'Pharma54' OR pharmacies_id = 'Pharma55';
Find the facilities with trial_ends_at after '2025-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-20',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-20';
Retrieve all assets with asset_type_id 'AT086' or asset_type_id 'AT087',SELECT * FROM assets WHERE asset_type_id = 'AT086' OR asset_type_id = 'AT087';
List all users with roles_id 'Role789' and official_user_id 'OU028',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU028';
Retrieve all staff members with official_user_id 'OU029' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU029' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT088',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT088';
Get all users with profiles_id 'P038' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P038' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma56' or 'Pharma57',SELECT * FROM assets WHERE pharmacies_id = 'Pharma56' OR pharmacies_id = 'Pharma57';
Find the facilities with trial_ends_at after '2025-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-21',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-21';
Retrieve all assets with asset_type_id 'AT089' or asset_type_id 'AT090',SELECT * FROM assets WHERE asset_type_id = 'AT089' OR asset_type_id = 'AT090';
List all users with roles_id 'Role890' and official_user_id 'OU029',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU029';
Retrieve all staff members with official_user_id 'OU030' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU030' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT091',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT091';
Get all users with profiles_id 'P039' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P039' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma58' or 'Pharma59',SELECT * FROM assets WHERE pharmacies_id = 'Pharma58' OR pharmacies_id = 'Pharma59';
Find the facilities with trial_ends_at after '2025-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-22',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-22';
Retrieve all assets with asset_type_id 'AT091' or asset_type_id 'AT092',SELECT * FROM assets WHERE asset_type_id = 'AT091' OR asset_type_id = 'AT092';
List all users with roles_id 'Role901' and official_user_id 'OU030',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU030';
Retrieve all staff members with official_user_id 'OU031' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU031' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT093',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT093';
Get all users with profiles_id 'P040' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P040' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma60' or 'Pharma61',SELECT * FROM assets WHERE pharmacies_id = 'Pharma60' OR pharmacies_id = 'Pharma61';
Find the facilities with trial_ends_at after '2025-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-23',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-23';
Retrieve all assets with asset_type_id 'AT094' or asset_type_id 'AT095',SELECT * FROM assets WHERE asset_type_id = 'AT094' OR asset_type_id = 'AT095';
List all users with roles_id 'Role012' and official_user_id 'OU031',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU031';
Retrieve all staff members with official_user_id 'OU032' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU032' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT096',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT096';
Get all users with profiles_id 'P041' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P041' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma62' or 'Pharma63',SELECT * FROM assets WHERE pharmacies_id = 'Pharma62' OR pharmacies_id = 'Pharma63';
Find the facilities with trial_ends_at after '2025-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-24',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-24';
Retrieve all assets with asset_type_id 'AT097' or asset_type_id 'AT098',SELECT * FROM assets WHERE asset_type_id = 'AT097' OR asset_type_id = 'AT098';
List all users with roles_id 'Role123' and official_user_id 'OU032',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU032';
Retrieve all staff members with official_user_id 'OU033' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU033' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT099',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT099';
Get all users with profiles_id 'P042' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P042' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma64' or 'Pharma65',SELECT * FROM assets WHERE pharmacies_id = 'Pharma64' OR pharmacies_id = 'Pharma65';
Find the facilities with trial_ends_at after '2026-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-25',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-25';
Retrieve all assets with asset_type_id 'AT100' or asset_type_id 'AT101',SELECT * FROM assets WHERE asset_type_id = 'AT100' OR asset_type_id = 'AT101';
List all users with roles_id 'Role234' and official_user_id 'OU033',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU033';
Retrieve all staff members with official_user_id 'OU034' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU034' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT102',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT102';
Get all users with profiles_id 'P043' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P043' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma66' or 'Pharma67',SELECT * FROM assets WHERE pharmacies_id = 'Pharma66' OR pharmacies_id = 'Pharma67';
Find the facilities with trial_ends_at after '2026-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-26',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-26';
Retrieve all assets with asset_type_id 'AT103' or asset_type_id 'AT104',SELECT * FROM assets WHERE asset_type_id = 'AT103' OR asset_type_id = 'AT104';
List all users with roles_id 'Role345' and official_user_id 'OU034',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU034';
Retrieve all staff members with official_user_id 'OU035' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU035' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT105',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT105';
Get all users with profiles_id 'P044' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P044' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma68' or 'Pharma69',SELECT * FROM assets WHERE pharmacies_id = 'Pharma68' OR pharmacies_id = 'Pharma69';
Find the facilities with trial_ends_at after '2026-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-03-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-27',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-27';
Retrieve all assets with asset_type_id 'AT105' or asset_type_id 'AT106',SELECT * FROM assets WHERE asset_type_id = 'AT105' OR asset_type_id = 'AT106';
List all users with roles_id 'Role456' and official_user_id 'OU035',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU035';
Retrieve all staff members with official_user_id 'OU036' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU036' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT107',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT107';
Get all users with profiles_id 'P045' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P045' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma70' or 'Pharma71',SELECT * FROM assets WHERE pharmacies_id = 'Pharma70' OR pharmacies_id = 'Pharma71';
Find the facilities with trial_ends_at after '2026-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-04-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-28',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-28';
Retrieve all assets with asset_type_id 'AT108' or asset_type_id 'AT109',SELECT * FROM assets WHERE asset_type_id = 'AT108' OR asset_type_id = 'AT109';
List all users with roles_id 'Role567' and official_user_id 'OU036',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU036';
Retrieve all staff members with official_user_id 'OU037' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU037' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT110',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT110';
Get all users with profiles_id 'P046' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P046' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma72' or 'Pharma73',SELECT * FROM assets WHERE pharmacies_id = 'Pharma72' OR pharmacies_id = 'Pharma73';
Find the facilities with trial_ends_at after '2026-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-29',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-29';
Retrieve all assets with asset_type_id 'AT111' or asset_type_id 'AT112',SELECT * FROM assets WHERE asset_type_id = 'AT111' OR asset_type_id = 'AT112';
List all users with roles_id 'Role678' and official_user_id 'OU037',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU037';
Retrieve all staff members with official_user_id 'OU038' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU038' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT113',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT113';
Get all users with profiles_id 'P047' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P047' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma74' or 'Pharma75',SELECT * FROM assets WHERE pharmacies_id = 'Pharma74' OR pharmacies_id = 'Pharma75';
Find the facilities with trial_ends_at after '2026-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-30',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-30';
Retrieve all assets with asset_type_id 'AT113' or asset_type_id 'AT114',SELECT * FROM assets WHERE asset_type_id = 'AT113' OR asset_type_id = 'AT114';
List all users with roles_id 'Role789' and official_user_id 'OU038',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU038';
Retrieve all staff members with official_user_id 'OU039' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU039' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT115',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT115';
Get all users with profiles_id 'P048' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P048' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma76' or 'Pharma77',SELECT * FROM assets WHERE pharmacies_id = 'Pharma76' OR pharmacies_id = 'Pharma77';
Find the facilities with trial_ends_at after '2026-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT116' or asset_type_id 'AT117',SELECT * FROM assets WHERE asset_type_id = 'AT116' OR asset_type_id = 'AT117';
List all users with roles_id 'Role890' and official_user_id 'OU039',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU039';
Retrieve all staff members with official_user_id 'OU040' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU040' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT118',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT118';
Get all users with profiles_id 'P049' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P049' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma78' or 'Pharma79',SELECT * FROM assets WHERE pharmacies_id = 'Pharma78' OR pharmacies_id = 'Pharma79';
Find the facilities with trial_ends_at after '2026-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT119' or asset_type_id 'AT120',SELECT * FROM assets WHERE asset_type_id = 'AT119' OR asset_type_id = 'AT120';
List all users with roles_id 'Role901' and official_user_id 'OU040',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU040';
Retrieve all staff members with official_user_id 'OU041' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU041' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT121',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT121';
Get all users with profiles_id 'P050' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P050' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma80' or 'Pharma81',SELECT * FROM assets WHERE pharmacies_id = 'Pharma80' OR pharmacies_id = 'Pharma81';
Find the facilities with trial_ends_at after '2026-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT121' or asset_type_id 'AT122',SELECT * FROM assets WHERE asset_type_id = 'AT121' OR asset_type_id = 'AT122';
List all users with roles_id 'Role012' and official_user_id 'OU041',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU041';
Retrieve all staff members with official_user_id 'OU042' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU042' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT123',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT123';
Get all users with profiles_id 'P051' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P051' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma82' or 'Pharma83',SELECT * FROM assets WHERE pharmacies_id = 'Pharma82' OR pharmacies_id = 'Pharma83';
Find the facilities with trial_ends_at after '2026-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT124' or asset_type_id 'AT125',SELECT * FROM assets WHERE asset_type_id = 'AT124' OR asset_type_id = 'AT125';
List all users with roles_id 'Role123' and official_user_id 'OU042',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU042';
Retrieve all staff members with official_user_id 'OU043' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU043' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT126',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT126';
Get all users with profiles_id 'P052' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P052' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma84' or 'Pharma85',SELECT * FROM assets WHERE pharmacies_id = 'Pharma84' OR pharmacies_id = 'Pharma85';
Find the facilities with trial_ends_at after '2026-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT127' or asset_type_id 'AT128',SELECT * FROM assets WHERE asset_type_id = 'AT127' OR asset_type_id = 'AT128';
List all users with roles_id 'Role234' and official_user_id 'OU043',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU043';
Retrieve all staff members with official_user_id 'OU044' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU044' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT129',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT129';
Get all users with profiles_id 'P053' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P053' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma86' or 'Pharma87',SELECT * FROM assets WHERE pharmacies_id = 'Pharma86' OR pharmacies_id = 'Pharma87';
Find the facilities with trial_ends_at after '2026-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT130' or asset_type_id 'AT131',SELECT * FROM assets WHERE asset_type_id = 'AT130' OR asset_type_id = 'AT131';
List all users with roles_id 'Role345' and official_user_id 'OU044',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU044';
Retrieve all staff members with official_user_id 'OU045' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU045' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT132',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT132';
Get all users with profiles_id 'P054' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P054' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma88' or 'Pharma89',SELECT * FROM assets WHERE pharmacies_id = 'Pharma88' OR pharmacies_id = 'Pharma89';
Find the facilities with trial_ends_at after '2027-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT133' or asset_type_id 'AT134',SELECT * FROM assets WHERE asset_type_id = 'AT133' OR asset_type_id = 'AT134';
List all users with roles_id 'Role456' and official_user_id 'OU045',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU045';
Retrieve all staff members with official_user_id 'OU046' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU046' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT135',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT135';
Get all users with profiles_id 'P055' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P055' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma90' or 'Pharma91',SELECT * FROM assets WHERE pharmacies_id = 'Pharma90' OR pharmacies_id = 'Pharma91';
Find the facilities with trial_ends_at after '2027-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT136' or asset_type_id 'AT137',SELECT * FROM assets WHERE asset_type_id = 'AT136' OR asset_type_id = 'AT137';
List all users with roles_id 'Role567' and official_user_id 'OU046',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU046';
Retrieve all staff members with official_user_id 'OU047' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU047' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT138',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT138';
Get all users with profiles_id 'P056' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P056' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma92' or 'Pharma93',SELECT * FROM assets WHERE pharmacies_id = 'Pharma92' OR pharmacies_id = 'Pharma93';
Find the facilities with trial_ends_at after '2027-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT139' or asset_type_id 'AT140',SELECT * FROM assets WHERE asset_type_id = 'AT139' OR asset_type_id = 'AT140';
List all users with roles_id 'Role678' and official_user_id 'OU047',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU047';
Retrieve all staff members with official_user_id 'OU048' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU048' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT141',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT141';
Get all users with profiles_id 'P057' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P057' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma94' or 'Pharma95',SELECT * FROM assets WHERE pharmacies_id = 'Pharma94' OR pharmacies_id = 'Pharma95';
Find the facilities with trial_ends_at after '2027-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT142' or asset_type_id 'AT143',SELECT * FROM assets WHERE asset_type_id = 'AT142' OR asset_type_id = 'AT143';
List all users with roles_id 'Role789' and official_user_id 'OU048',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU048';
Retrieve all staff members with official_user_id 'OU049' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU049' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT144',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT144';
Get all users with profiles_id 'P058' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P058' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma96' or 'Pharma97',SELECT * FROM assets WHERE pharmacies_id = 'Pharma96' OR pharmacies_id = 'Pharma97';
Find the facilities with trial_ends_at after '2027-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT145' or asset_type_id 'AT146',SELECT * FROM assets WHERE asset_type_id = 'AT145' OR asset_type_id = 'AT146';
List all users with roles_id 'Role890' and official_user_id 'OU049',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU049';
Retrieve all staff members with official_user_id 'OU050' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU050' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT147',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT147';
Get all users with profiles_id 'P059' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P059' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma98' or 'Pharma99',SELECT * FROM assets WHERE pharmacies_id = 'Pharma98' OR pharmacies_id = 'Pharma99';
Find the facilities with trial_ends_at after '2027-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT147' or asset_type_id 'AT148',SELECT * FROM assets WHERE asset_type_id = 'AT147' OR asset_type_id = 'AT148';
List all users with roles_id 'Role012' and official_user_id 'OU050',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU050';
Retrieve all staff members with official_user_id 'OU051' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU051' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT149',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT149';
Get all users with profiles_id 'P060' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P060' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma100' or 'Pharma101',SELECT * FROM assets WHERE pharmacies_id = 'Pharma100' OR pharmacies_id = 'Pharma101';
Find the facilities with trial_ends_at after '2027-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT150' or asset_type_id 'AT151',SELECT * FROM assets WHERE asset_type_id = 'AT150' OR asset_type_id = 'AT151';
List all users with roles_id 'Role123' and official_user_id 'OU051',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU051';
Retrieve all staff members with official_user_id 'OU052' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU052' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT152',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT152';
Get all users with profiles_id 'P061' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P061' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma102' or 'Pharma103',SELECT * FROM assets WHERE pharmacies_id = 'Pharma102' OR pharmacies_id = 'Pharma103';
Find the facilities with trial_ends_at after '2027-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT153' or asset_type_id 'AT154',SELECT * FROM assets WHERE asset_type_id = 'AT153' OR asset_type_id = 'AT154';
List all users with roles_id 'Role234' and official_user_id 'OU052',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU052';
Retrieve all staff members with official_user_id 'OU053' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU053' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT155',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT155';
Get all users with profiles_id 'P062' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P062' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma104' or 'Pharma105',SELECT * FROM assets WHERE pharmacies_id = 'Pharma104' OR pharmacies_id = 'Pharma105';
Find the facilities with trial_ends_at after '2027-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT156' or asset_type_id 'AT157',SELECT * FROM assets WHERE asset_type_id = 'AT156' OR asset_type_id = 'AT157';
List all users with roles_id 'Role345' and official_user_id 'OU053',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU053';
Retrieve all staff members with official_user_id 'OU054' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU054' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT158',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT158';
Get all users with profiles_id 'P063' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P063' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma106' or 'Pharma107',SELECT * FROM assets WHERE pharmacies_id = 'Pharma106' OR pharmacies_id = 'Pharma107';
Find the facilities with trial_ends_at after '2027-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT159' or asset_type_id 'AT160',SELECT * FROM assets WHERE asset_type_id = 'AT159' OR asset_type_id = 'AT160';
List all users with roles_id 'Role456' and official_user_id 'OU054',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU054';
Retrieve all staff members with official_user_id 'OU055' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU055' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT161',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT161';
Get all users with profiles_id 'P064' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P064' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma108' or 'Pharma109',SELECT * FROM assets WHERE pharmacies_id = 'Pharma108' OR pharmacies_id = 'Pharma109';
Find the facilities with trial_ends_at after '2027-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT162' or asset_type_id 'AT163',SELECT * FROM assets WHERE asset_type_id = 'AT162' OR asset_type_id = 'AT163';
List all users with roles_id 'Role567' and official_user_id 'OU055',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU055';
Retrieve all staff members with official_user_id 'OU056' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU056' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT164',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT164';
Get all users with profiles_id 'P065' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P065' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma110' or 'Pharma111',SELECT * FROM assets WHERE pharmacies_id = 'Pharma110' OR pharmacies_id = 'Pharma111';
Find the facilities with trial_ends_at after '2027-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT165' or asset_type_id 'AT166',SELECT * FROM assets WHERE asset_type_id = 'AT165' OR asset_type_id = 'AT166';
List all users with roles_id 'Role678' and official_user_id 'OU056',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU056';
Retrieve all staff members with official_user_id 'OU057' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU057' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT167',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT167';
Get all users with profiles_id 'P066' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P066' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma112' or 'Pharma113',SELECT * FROM assets WHERE pharmacies_id = 'Pharma112' OR pharmacies_id = 'Pharma113';
Find the facilities with trial_ends_at after '2028-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT168' or asset_type_id 'AT169',SELECT * FROM assets WHERE asset_type_id = 'AT168' OR asset_type_id = 'AT169';
List all users with roles_id 'Role789' and official_user_id 'OU057',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU057';
Retrieve all staff members with official_user_id 'OU058' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU058' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT170',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT170';
Get all users with profiles_id 'P067' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P067' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma114' or 'Pharma115',SELECT * FROM assets WHERE pharmacies_id = 'Pharma114' OR pharmacies_id = 'Pharma115';
Find the facilities with trial_ends_at after '2028-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT171' or asset_type_id 'AT172',SELECT * FROM assets WHERE asset_type_id = 'AT171' OR asset_type_id = 'AT172';
List all users with roles_id 'Role890' and official_user_id 'OU058',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU058';
Retrieve all staff members with official_user_id 'OU059' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU059' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT173',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT173';
Get all users with profiles_id 'P068' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P068' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma116' or 'Pharma117',SELECT * FROM assets WHERE pharmacies_id = 'Pharma116' OR pharmacies_id = 'Pharma117';
Find the facilities with trial_ends_at after '2028-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT174' or asset_type_id 'AT175',SELECT * FROM assets WHERE asset_type_id = 'AT174' OR asset_type_id = 'AT175';
List all users with roles_id 'Role012' and official_user_id 'OU059',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU059';
Retrieve all staff members with official_user_id 'OU060' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU060' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT176',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT176';
Get all users with profiles_id 'P069' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P069' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma118' or 'Pharma119',SELECT * FROM assets WHERE pharmacies_id = 'Pharma118' OR pharmacies_id = 'Pharma119';
Find the facilities with trial_ends_at after '2028-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT177' or asset_type_id 'AT178',SELECT * FROM assets WHERE asset_type_id = 'AT177' OR asset_type_id = 'AT178';
List all users with roles_id 'Role123' and official_user_id 'OU060',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU060';
Retrieve all staff members with official_user_id 'OU061' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU061' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT179',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT179';
Get all users with profiles_id 'P070' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P070' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma120' or 'Pharma121',SELECT * FROM assets WHERE pharmacies_id = 'Pharma120' OR pharmacies_id = 'Pharma121';
Find the facilities with trial_ends_at after '2028-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT180' or asset_type_id 'AT181',SELECT * FROM assets WHERE asset_type_id = 'AT180' OR asset_type_id = 'AT181';
List all users with roles_id 'Role234' and official_user_id 'OU061',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU061';
Retrieve all staff members with official_user_id 'OU062' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU062' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT182',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT182';
Get all users with profiles_id 'P071' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P071' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma122' or 'Pharma123',SELECT * FROM assets WHERE pharmacies_id = 'Pharma122' OR pharmacies_id = 'Pharma123';
Find the facilities with trial_ends_at after '2028-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT183' or asset_type_id 'AT184',SELECT * FROM assets WHERE asset_type_id = 'AT183' OR asset_type_id = 'AT184';
List all users with roles_id 'Role345' and official_user_id 'OU062',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU062';
Retrieve all staff members with official_user_id 'OU063' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU063' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT185',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT185';
Get all users with profiles_id 'P072' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P072' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma124' or 'Pharma125',SELECT * FROM assets WHERE pharmacies_id = 'Pharma124' OR pharmacies_id = 'Pharma125';
Find the facilities with trial_ends_at after '2028-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT186' or asset_type_id 'AT187',SELECT * FROM assets WHERE asset_type_id = 'AT186' OR asset_type_id = 'AT187';
List all users with roles_id 'Role456' and official_user_id 'OU063',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU063';
Retrieve all staff members with official_user_id 'OU064' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU064' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT188',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT188';
Get all users with profiles_id 'P073' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P073' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma126' or 'Pharma127',SELECT * FROM assets WHERE pharmacies_id = 'Pharma126' OR pharmacies_id = 'Pharma127';
Find the facilities with trial_ends_at after '2028-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT189' or asset_type_id 'AT190',SELECT * FROM assets WHERE asset_type_id = 'AT189' OR asset_type_id = 'AT190';
List all users with roles_id 'Role567' and official_user_id 'OU064',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU064';
Retrieve all staff members with official_user_id 'OU065' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU065' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT191',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT191';
Get all users with profiles_id 'P074' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P074' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma128' or 'Pharma129',SELECT * FROM assets WHERE pharmacies_id = 'Pharma128' OR pharmacies_id = 'Pharma129';
Find the facilities with trial_ends_at after '2028-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT192' or asset_type_id 'AT193',SELECT * FROM assets WHERE asset_type_id = 'AT192' OR asset_type_id = 'AT193';
List all users with roles_id 'Role678' and official_user_id 'OU065',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU065';
Retrieve all staff members with official_user_id 'OU066' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU066' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT194',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT194';
Get all users with profiles_id 'P075' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P075' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma130' or 'Pharma131',SELECT * FROM assets WHERE pharmacies_id = 'Pharma130' OR pharmacies_id = 'Pharma131';
Find the facilities with trial_ends_at after '2028-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT195' or asset_type_id 'AT196',SELECT * FROM assets WHERE asset_type_id = 'AT195' OR asset_type_id = 'AT196';
List all users with roles_id 'Role789' and official_user_id 'OU066',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU066';
Retrieve all staff members with official_user_id 'OU067' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU067' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT197',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT197';
Get all users with profiles_id 'P076' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P076' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma132' or 'Pharma133',SELECT * FROM assets WHERE pharmacies_id = 'Pharma132' OR pharmacies_id = 'Pharma133';
Find the facilities with trial_ends_at after '2028-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT198' or asset_type_id 'AT199',SELECT * FROM assets WHERE asset_type_id = 'AT198' OR asset_type_id = 'AT199';
List all users with roles_id 'Role890' and official_user_id 'OU067',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU067';
Retrieve all staff members with official_user_id 'OU068' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU068' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT200',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT200';
Get all users with profiles_id 'P077' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P077' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma134' or 'Pharma135',SELECT * FROM assets WHERE pharmacies_id = 'Pharma134' OR pharmacies_id = 'Pharma135';
Find the facilities with trial_ends_at after '2028-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT201' or asset_type_id 'AT202',SELECT * FROM assets WHERE asset_type_id = 'AT201' OR asset_type_id = 'AT202';
List all users with roles_id 'Role012' and official_user_id 'OU068',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU068';
Retrieve all staff members with official_user_id 'OU069' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU069' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT203',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT203';
Get all users with profiles_id 'P078' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P078' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma136' or 'Pharma137',SELECT * FROM assets WHERE pharmacies_id = 'Pharma136' OR pharmacies_id = 'Pharma137';
Find the facilities with trial_ends_at after '2029-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT204' or asset_type_id 'AT205',SELECT * FROM assets WHERE asset_type_id = 'AT204' OR asset_type_id = 'AT205';
List all users with roles_id 'Role123' and official_user_id 'OU069',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU069';
Retrieve all staff members with official_user_id 'OU070' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU070' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT206',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT206';
Get all users with profiles_id 'P079' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P079' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma138' or 'Pharma139',SELECT * FROM assets WHERE pharmacies_id = 'Pharma138' OR pharmacies_id = 'Pharma139';
Find the facilities with trial_ends_at after '2029-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT207' or asset_type_id 'AT208',SELECT * FROM assets WHERE asset_type_id = 'AT207' OR asset_type_id = 'AT208';
List all users with roles_id 'Role234' and official_user_id 'OU070',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU070';
Retrieve all staff members with official_user_id 'OU071' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU071' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT209',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT209';
Get all users with profiles_id 'P080' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P080' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma140' or 'Pharma141',SELECT * FROM assets WHERE pharmacies_id = 'Pharma140' OR pharmacies_id = 'Pharma141';
Find the facilities with trial_ends_at after '2029-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT210' or asset_type_id 'AT211',SELECT * FROM assets WHERE asset_type_id = 'AT210' OR asset_type_id = 'AT211';
List all users with roles_id 'Role345' and official_user_id 'OU071',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU071';
Retrieve all staff members with official_user_id 'OU072' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU072' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT212',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT212';
Get all users with profiles_id 'P081' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P081' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma142' or 'Pharma143',SELECT * FROM assets WHERE pharmacies_id = 'Pharma142' OR pharmacies_id = 'Pharma143';
Find the facilities with trial_ends_at after '2029-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT213' or asset_type_id 'AT214',SELECT * FROM assets WHERE asset_type_id = 'AT213' OR asset_type_id = 'AT214';
List all users with roles_id 'Role456' and official_user_id 'OU072',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU072';
Retrieve all staff members with official_user_id 'OU073' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU073' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT215',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT215';
Get all users with profiles_id 'P082' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P082' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma144' or 'Pharma145',SELECT * FROM assets WHERE pharmacies_id = 'Pharma144' OR pharmacies_id = 'Pharma145';
Find the facilities with trial_ends_at after '2029-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT216' or asset_type_id 'AT217',SELECT * FROM assets WHERE asset_type_id = 'AT216' OR asset_type_id = 'AT217';
List all users with roles_id 'Role567' and official_user_id 'OU073',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU073';
Retrieve all staff members with official_user_id 'OU074' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU074' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT218',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT218';
Get all users with profiles_id 'P083' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P083' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma146' or 'Pharma147',SELECT * FROM assets WHERE pharmacies_id = 'Pharma146' OR pharmacies_id = 'Pharma147';
Find the facilities with trial_ends_at after '2029-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT219' or asset_type_id 'AT220',SELECT * FROM assets WHERE asset_type_id = 'AT219' OR asset_type_id = 'AT220';
List all users with roles_id 'Role678' and official_user_id 'OU074',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU074';
Retrieve all staff members with official_user_id 'OU075' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU075' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT221',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT221';
Get all users with profiles_id 'P084' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P084' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma148' or 'Pharma149',SELECT * FROM assets WHERE pharmacies_id = 'Pharma148' OR pharmacies_id = 'Pharma149';
Find the facilities with trial_ends_at after '2029-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT222' or asset_type_id 'AT223',SELECT * FROM assets WHERE asset_type_id = 'AT222' OR asset_type_id = 'AT223';
List all users with roles_id 'Role789' and official_user_id 'OU075',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU075';
Retrieve all staff members with official_user_id 'OU076' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU076' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT224',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT224';
Get all users with profiles_id 'P085' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P085' OR type = 'Manager';
Retrieve all users along with their associated roles,"SELECT u.*, r.* FROM users u JOIN roles r ON u.role_id = r.role_id;"
Get all facilities along with their associated organizations,"SELECT f.*, o.* FROM facilities f JOIN organizations o ON f.organization_id = o.organization_id;"
List all events along with their associated assets,"SELECT e.*, a.* FROM events e JOIN assets a ON e.asset_id = a.asset_id;"
Retrieve all pharmacies along with their associated staff members,"SELECT p.*, s.* FROM pharmacies p JOIN staff_members s ON p.pharmacy_id = s.pharmacy_id;"
Get all assets along with their associated pharmacies,"SELECT a.*, p.* FROM assets a JOIN pharmacies p ON a.pharmacy_id = p.pharmacy_id;"
List all events along with their associated users,"SELECT e.*, u.* FROM events e JOIN users u ON e.user_id = u.user_id;"
Retrieve all staff members along with their associated roles,"SELECT s.*, r.* FROM staff_members s JOIN roles r ON s.role_id = r.role_id;"
Get all users along with their associated profiles,"SELECT u.*, p.* FROM users u JOIN profiles p ON u.profile_id = p.profile_id;"
List all facilities along with their associated assets,"SELECT f.*, a.* FROM facilities f JOIN assets a ON f.asset_id = a.asset_id;"
Retrieve all pharmacies along with their associated events,"SELECT p.*, e.* FROM pharmacies p JOIN events e ON p.pharmacy_id = e.pharmacy_id;"
Get all assets along with their associated events,"SELECT a.*, e.* FROM assets a JOIN events e ON a.event_id = e.event_id;"
List all users along with their associated staff members,"SELECT u.*, s.* FROM users u JOIN staff_members s ON u.staff_id = s.staff_id;"
Retrieve all staff members along with their associated pharmacies,"SELECT s.*, p.* FROM staff_members s JOIN pharmacies p ON s.pharmacy_id = p.pharmacy_id;"
Get all facilities along with their associated assets and organizations,"SELECT f.*, a.*, o.* FROM facilities f JOIN assets a ON f.asset_id = a.asset_id JOIN organizations o ON f.organization_id = o.organization_id;"
List all events along with their associated users and assets,"SELECT e.*, u.*, a.* FROM events e JOIN users u ON e.user_id = u.user_id JOIN assets a ON e.asset_id = a.asset_id;"
Get all pharmacies along with their associated events and staff members,"SELECT p.*, e.*, s.* FROM pharmacies p JOIN events e ON p.pharmacy_id = e.pharmacy_id JOIN staff_members s ON p.staff_id = s.staff_id;"
Retrieve all users along with their associated roles and staff members,"SELECT u.*, r.*, s.* FROM users u JOIN roles r ON u.role_id = r.role_id JOIN staff_members s ON u.staff_id = s.staff_id;"
Retrieve all events with their associated facilities and users,"SELECT e.*, f.*, u.* FROM events e JOIN facilities f ON e.facility_id = f.facility_id JOIN users u ON e.user_id = u.user_id;"
List all staff members along with their associated roles and organizations,"SELECT s.*, r.*, o.* FROM staff_members s JOIN roles r ON s.role_id = r.role_id JOIN organizations o ON s.org_id = o.org_id;"
Retrieve all users along with their associated roles and profiles,"SELECT u.*, r.*, p.* FROM users u JOIN roles r ON u.role_id = r.role_id JOIN profiles p ON u.profile_id = p.profile_id;"
Get all organizations along with their associated pharmacies,"SELECT o.*, p.* FROM organizations o JOIN pharmacies p ON o.org_id = p.org_id;"
List all events along with their associated assets and users,"SELECT e.*, a.*, u.* FROM events e JOIN assets a ON e.event_id = a.event_id JOIN users u ON e.user_id = u.user_id;"
Fetch the records from the staff_directory table where the full_name contains 'John',SELECT * FROM staff_directory WHERE full_name LIKE '%John%';
List all assets with an active status and updated in the last 7 days,SELECT * FROM assets WHERE active = TRUE AND updated_at >= CURRENT_DATE - INTERVAL '7 days';
Get the hazards with a name starting with 'Fire',SELECT * FROM hazards WHERE name LIKE 'Fire%';
Retrieve events created by user_id '123' and updated after '2023-01-01',SELECT * FROM events WHERE user_id = '123' AND updated_at > '2023-01-01';
Find the staff members with fixed status and working in organization_id 'Org456',SELECT * FROM staff_directory WHERE fixed = TRUE AND org_id = 'Org456';
List all assets of type 'Computer' and associated with organization_id 'Org789',SELECT * FROM assets WHERE asset_type_id = (SELECT id FROM asset_types WHERE name = 'Computer') AND pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE organizations_id = 'Org789');
Retrieve the event staff roles ordered by name in ascending order,SELECT * FROM event_staff_roles ORDER BY name ASC;
Get the assets with serial number 'SN123' and active status,SELECT * FROM assets WHERE serial_number = 'SN123' AND active = TRUE;
Fetch all events where the user's full name contains 'Smith' and harmt is greater than 20,SELECT * FROM events WHERE users_fullname LIKE '%Smith%' AND harmt > 20;
List the users with profiles_id 'Profile123' and organization_id 'Org987',SELECT * FROM users WHERE profiles_id = 'Profile123' AND organization_id = 'Org987';
Retrieve all organizations with trial_ends_at in the future,SELECT * FROM organizations WHERE trial_ends_at > CURRENT_DATE;
Find the pharmacies that were created before '2023-03-01' and enabled after '2023-02-15',SELECT * FROM pharmacies WHERE created_at < '2023-03-01' AND activate_at > '2023-02-15';
"Get the event actions for the events with IDs '123', '456', and '789'","SELECT * FROM event_actions WHERE events_id IN ('123', '456', '789');"
Fetch the hazards with descriptions containing the word 'chemical',SELECT * FROM hazards WHERE description LIKE '%chemical%';
Retrieve the staff members with locum_full_name not equal to 'NULL',SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
List the assets that were updated between '2023-05-01' and '2023-06-30',SELECT * FROM assets WHERE updated_at BETWEEN '2023-05-01' AND '2023-06-30';
Get the event staff roles with order greater than or equal to 3,SELECT * FROM event_staff_roles WHERE order >= 3;
Fetch the events with harmt equal to 0 and prescribers_id is NULL,SELECT * FROM events WHERE harmt = 0 AND prescribers_id IS NULL;
Retrieve all organizations with names starting with 'ABC' and created after '2023-01-01',SELECT * FROM organizations WHERE name LIKE 'ABC%' AND created_at > '2023-01-01';
Find the pharmacies that were disabled in the last 30 days,SELECT * FROM pharmacies WHERE date_disabled >= CURRENT_DATE - INTERVAL '30 days';
List the event actions for the events created by user_id '789' and updated after '2023-02-28',SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789' AND updated_at > '2023-02-28');
Get the assets with asset_type_id 'AT001' and pharmacies_id 'Pharma1',SELECT * FROM assets WHERE asset_type_id = 'AT001' AND pharmacies_id = 'Pharma1';
Fetch the events that were created in the last 7 days and harmt is greater than or equal to 10,SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '7 days' AND harmt >= 10;
Retrieve the full names of all staff members in alphabetical order,SELECT full_name FROM staff_directory ORDER BY full_name ASC;
List all assets associated with pharmacies located in the city 'New York',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE city = 'New York');
Get the event staff roles with forms_id equal to 5 and facility_id equal to 10,SELECT * FROM event_staff_roles WHERE forms_id = 5 AND facility_id = 10;
Fetch the events with harmt greater than 50 and date_closed is NULL,SELECT * FROM events WHERE harmt > 50 AND date_closed IS NULL;
Retrieve the organizations that were updated after '2023-03-15' and have trial_ends_at in the future,SELECT * FROM organizations WHERE updated_at > '2023-03-15' AND trial_ends_at > CURRENT_DATE;
Find the staff members who are active and have the role_id 'Role123',SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id = 'Role123';
List the assets with asset_type_id 'AT002' or 'AT003',"SELECT * FROM assets WHERE asset_type_id IN ('AT002', 'AT003');"
Get the hazards with descriptions containing the word 'safety' and created in the last 30 days,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= CURRENT_DATE - INTERVAL '30 days';
Fetch the events with harmt greater than or equal to 10 and prescribers_id is not NULL,SELECT * FROM events WHERE harmt >= 10 AND prescribers_id IS NOT NULL;
Retrieve the full names of staff members whose official_user_id starts with 'USR',SELECT full_name FROM staff_directory WHERE official_user_id LIKE 'USR%';
List all assets associated with pharmacies created after '2023-04-01' and updated before '2023-06-30',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-04-01' AND updated_at < '2023-06-30');
Get the event staff roles with names containing the word 'supervisor',SELECT * FROM event_staff_roles WHERE name LIKE '%supervisor%';
Fetch the events with harmt less than 10 and date_closed is not NULL,SELECT * FROM events WHERE harmt < 10 AND date_closed IS NOT NULL;
Retrieve the organizations that have the trial_ends_at set to '2023-12-31' and are located in the city 'London',SELECT * FROM organizations WHERE trial_ends_at = '2023-12-31' AND city = 'London';
Find the staff members who are active and have the roles_id of 'Role456' or 'Role789',"SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id IN ('Role456', 'Role789');"
List the assets with asset_type_id 'AT004' and serial_number is not NULL,SELECT * FROM assets WHERE asset_type_id = 'AT004' AND serial_number IS NOT NULL;
Get the hazards with descriptions starting with 'Potential' and updated in the last 7 days,SELECT * FROM hazards WHERE description LIKE 'Potential%' AND updated_at >= CURRENT_DATE - INTERVAL '7 days';
Fetch the events with harmt between 20 and 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt BETWEEN 20 AND 50 AND is_open = TRUE;
Retrieve the full names of all staff members whose updated_at is equal to '2023-01-01',SELECT full_name FROM staff_directory WHERE updated_at = '2023-01-01';
List all assets associated with pharmacies enabled before '2023-02-01' and disabled after '2023-06-30',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at < '2023-02-01' AND disabled_at > '2023-06-30');
Get the event staff roles with forms_id not equal to 1 or 2,"SELECT * FROM event_staff_roles WHERE forms_id NOT IN (1, 2);"
Fetch the events with harmt equal to 0 and reporters_id is not NULL,SELECT * FROM events WHERE harmt = 0 AND reporters_id IS NOT NULL;
Retrieve the organizations that were created after '2023-01-01' and have trial_ends_at set to NULL,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND trial_ends_at IS NULL;
Find the pharmacies with names starting with 'ABC' and activated by 'User123',SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_by = 'User123';
List the event actions for the events created by user_id '456' and action_date between '2023-02-01' and '2023-03-31',SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '456') AND action_date BETWEEN '2023-02-01' AND '2023-03-31';
Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma2',SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma2';
Fetch the hazards with descriptions containing the word 'environment' and created before '2023-02-15',SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at < '2023-02-15';
Retrieve the full names of all staff members whose fixed status is FALSE,SELECT full_name FROM staff_directory WHERE fixed = FALSE;
Find all staff members,SELECT * FROM staff_directory;
Find all active staff members,SELECT * FROM staff_directory WHERE is_active = 1;
Find all staff members who are associated with pharmacy 123,SELECT * FROM staff_directory WHERE pharmacies_id = 123;
Find all assets,SELECT * FROM assets;
Find all assets that are active,SELECT * FROM assets WHERE active = 1;
Find all assets that are associated with pharmacy 123,SELECT * FROM assets WHERE pharmacies_id = 123;
Find all hazards,SELECT * FROM hazards;
"Find all hazards that have the name ""needle stick""","SELECT * FROM hazards WHERE name = ""needle stick"";"
Find all hazards that are associated with pharmacy 123,SELECT * FROM hazards WHERE pharmacies_id = 123;
Find all events,SELECT * FROM events;
Find all events that were created by user 123,SELECT * FROM events WHERE users_id = 123;
"Find all events that were created by user 123 and have the harm level of ""high""","SELECT * FROM events WHERE users_id = 123 AND harmt = ""high"";"
Find all actions that were taken on event 123,SELECT * FROM event_actions WHERE events_id = 123;
Find all summary tools that are configured for form 123,SELECT * FROM formsettings_summarytools WHERE forms_id = 123;
Find all summary tools that are configured for all forms in pharmacy 123,SELECT * FROM formsettings_summarytools WHERE forms_id IN (SELECT forms_id FROM forms WHERE pharmacies_id = 123);
Find all users who have created an event,"SELECT users_id, users_fullname FROM events GROUP BY users_id;"
Find all hazards that have been reported by user 123,"SELECT hazards.name, hazards.description FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id WHERE events.users_id = 123;"
Find all events that have been taken on by user 123,"SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123;"
"Find all events that have been taken on by user 123 and have the harm level of ""high""","SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123 AND events.harmt = ""high"";"
"Find all staff members who are associated with pharmacy 123 and have the role of ""manager""","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND role = ""manager"";"
Find all events that have been created in the past 30 days,SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
"Find all events that have been created in the past 30 days and have the harm level of ""high""","SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY AND harmt = ""high"";"
Find the average harm level of all events,SELECT AVG(harmt) AS average_harm_level FROM events;
Find the average harm level of all events that have been created in the past 30 days,SELECT AVG(harmt) AS average_harm_level FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
Find the top 10 hazards that have been reported the most often,"SELECT hazards.name, COUNT(*) AS count FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id GROUP BY hazards.name ORDER BY count DESC LIMIT 10;"
Find all staff members who are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM staff_directory WHERE pharmacies_id IN (123, 456);"
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name = ""John Smith"";"
"Find all assets that are associated with pharmacy 123 or pharmacy 456 and have the serial number ""1234567890"".","SELECT * FROM assets WHERE pharmacies_id IN (123, 456) AND serial_number = ""1234567890"";"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"".","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"");"
Find all events that were created by user 123 or user 456.,"SELECT * FROM events WHERE users_id IN (123, 456);"
"Find all events that were created by user 123 and have the harm level ""high"" or ""medium"".","SELECT * FROM events WHERE users_id = 123 AND harmt IN (""high"", ""medium"");"
Find all actions that were taken on event 123 or event 456.,"SELECT * FROM event_actions WHERE events_id IN (123, 456);"
Find all actions that were taken on event 123 by user 123 or user 456.,"SELECT * FROM event_actions WHERE events_id = 123 AND user_id IN (123, 456);"
Find all summary tools that are configured for form 123 or form 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456);"
Find all summary tools that are configured for form 123 and are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id = 123 AND pharmacies_id IN (123, 456);"
Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123;
"Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them, ordered by the number of actions taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of forms that have been used.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of events that have been created.",SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(events.id) DESC;
"Find all events that have been created by staff members who have created the most events, ordered by the number of events that have been created.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all assets that have been used in the most events that have been created by staff members who have created the most events, ordered by the number of events that have been used.",SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all hazards that have been associated with the most events that have been created by staff members who have created the most events, ordered by the number of events that have been associated.",SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all events that have had the most actions taken on them that have been created by staff members who have created the most events, ordered by the number of actions that have been taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for the most forms that have been used in events that have been created by staff members who have created the most events, ordered by the number of forms that have been configured.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with the hazard ""needle stick"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name WHERE hazards.name = ""needle stick"";"
Find all assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all hazards that have been associated with events that have been created by staff members who are associated with pharmacy 123 and have the harm level ""high"".","SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 AND events.harmt = ""high"";"
Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have the serial number ""1234567890"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number WHERE assets.serial_number = ""1234567890"";"
Find all events that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events that have been created by staff members who have created the most events.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events that have been created by staff members who have created the most events.,SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"" or the name ""Jane Doe"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name IN (""John Smith"", ""Jane Doe"");"
"Find all assets that are associated with pharmacy 123 and have the serial number ""1234567890"" or the serial number ""9876543210"".","SELECT * FROM assets WHERE pharmacies_id = 123 AND serial_number IN (""1234567890"", ""9876543210"");"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"" and are associated with pharmacy 123 or pharmacy 456.","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"") AND pharmacies_id IN (123, 456);"
"Find all events that were created by user 123 or user 456 and have the harm level ""high"" or ""medium"" and were created on or after January 1, 2023.","SELECT * FROM events WHERE users_id IN (123, 456) AND harmt IN (""high"", ""medium"") AND date_created >= '2023-01-01';"
"Find all actions that were taken on event 123 or event 456 by user 123 or user 456 and were taken on or after January 1, 2023.","SELECT * FROM event_actions WHERE events_id IN (123, 456) AND user_id IN (123, 456) AND date_created >= '2023-01-01';"
"Find all summary tools that are configured for form 123 or form 456 and are associated with pharmacy 123 or pharmacy 456 and were configured on or after January 1, 2023.","SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456) AND pharmacies_id IN (123, 456) AND updated_at >= '2023-01-01';"
Find all staff members who have created the most events.,SELECT * FROM staff_directory ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events.,SELECT * FROM assets ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events.,SELECT * FROM hazards ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them.,SELECT * FROM events ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for the most forms.,SELECT * FROM formsettings_summarytools ORDER BY COUNT(forms_id) DESC LIMIT 1;
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users, and only for events that were held in the last year","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id WHERE events.date >= '2022-01-01' GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, ordered by the number of organizations that have attended the event","SELECT events.id, events.name, COUNT(DISTINCT organizations.id) AS number_of_organizations FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id ORDER BY number_of_organizations DESC;"
"Get the list of events that have been attended by users from all organizations, and the number of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, COUNT(DISTINCT users.id) AS number_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY number_of_users DESC;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC;"
Get all events that have been attended by at least 100 users,SELECT events.* FROM events LEFT JOIN events_users ON events.id = events_users.event_id GROUP BY events.id HAVING COUNT(events_users.id) >= 100;
Get all hazards that have been reported by at least 5 different users,SELECT hazards.* FROM hazards LEFT JOIN hazards_reported_by ON hazards.id = hazards_reported_by.hazard_id GROUP BY hazards.id HAVING COUNT(hazards_reported_by.id) >= 5;
Get all assets that are used by at least 5 different events,SELECT assets.* FROM assets LEFT JOIN assets_used_in ON assets.id = assets_used_in.asset_id GROUP BY assets.id HAVING COUNT(assets_used_in.id) >= 5;
Get all pharmacies that have hosted at least 10 events,SELECT pharmacies.* FROM pharmacies LEFT JOIN events ON pharmacies.id = events.pharmacies_id GROUP BY pharmacies.id HAVING COUNT(events.id) >= 10;
Get all users who have attended at least 5 events,SELECT users.* FROM users LEFT JOIN events_users ON users.id = events_users.user_id GROUP BY users.id HAVING COUNT(events_users.id) >= 5;
Get all organizations that have held at least 10 events,SELECT organizations.* FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id GROUP BY organizations.id HAVING COUNT(events.id) >= 10;
Get all formsettings summarytools that have been used by at least 5 events,SELECT formsettings_summarytools.* FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id GROUP BY formsettings_summarytools.id HAVING COUNT(events.id) >= 5;
Get all users who have created at least 5 event actions,SELECT users.* FROM users LEFT JOIN event_actions ON users.id = event_actions.user_id GROUP BY users.id HAVING COUNT(event_actions.id) >= 5;
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at;"
"Get all users and the organizations they are employed by, ordered by the user's name","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity;"
"Get all event actions and the staff members who created those actions, ordered by the action's date","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC;"
"Get all users and the events they have attended, ordered by the number of events the user has attended","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC;"
Get all organizations,SELECT * FROM organizations;
Get all organizations that are active,SELECT * FROM organizations WHERE active = 1;
"Get all organizations whose name contains ""Acme""",SELECT * FROM organizations WHERE name LIKE '%Acme%';
"Get all organizations whose name is ""Acme Corporation""",SELECT * FROM organizations WHERE name = 'Acme Corporation';
Get all organizations whose ID is 12345,SELECT * FROM organizations WHERE id = 12345;
Get all organizations that were created on 2023-01-01,SELECT * FROM organizations WHERE created_at = '2023-01-01';
Get all organizations that were updated on 2023-02-02,SELECT * FROM organizations WHERE updated_at = '2023-02-02';
Get all organizations that were created on 2023-01-01 and are active,SELECT * FROM organizations WHERE created_at = '2023-01-01' AND active = 1;
Get all organizations that were updated on 2023-02-02 and are active,SELECT * FROM organizations WHERE updated_at = '2023-02-02' AND active = 1;
Get all users who were updated on 2023-02-02 and are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all users who are employed by pharmacy with ID 12345 and are active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 1;
Get all users who are employed by pharmacy with ID 12345 and are not active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 0;
Get all users,SELECT * FROM users;
Get all users that are active,SELECT * FROM users WHERE is_active = 1;
"Get all users whose name contains ""John""",SELECT * FROM users WHERE full_name LIKE '%John%';
"Get all users whose name is ""John Doe""",SELECT * FROM users WHERE full_name = 'John Doe';
Get all users whose ID is 12345,SELECT * FROM users WHERE id = 12345;
Get all users who are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345;
Get all users who were created on 2023-01-01,SELECT * FROM users WHERE created_at = '2023-01-01';
Get all events,SELECT * FROM events;
Get all events that are open,SELECT * FROM events WHERE is_open = 1;
Get all events that were created on 2023-01-01,SELECT * FROM events WHERE created_at = '2023-01-01';
Get all events that were updated on 2023-02-02,SELECT * FROM events WHERE updated_at = '2023-02-02';
Get all events that were created on 2023-01-01 and are open,SELECT * FROM events WHERE created_at = '2023-01-01' AND is_open = 1;
Get all events that were updated on 2023-02-02 and are open,SELECT * FROM events WHERE updated_at = '2023-02-02' AND is_open = 1;
Get all events that were created by user with ID 12345,SELECT * FROM events WHERE user_id = 12345;
Get all events that were updated by user with ID 12345,SELECT * FROM events WHERE updated_by = 12345;
Get the first event in the table,SELECT * FROM events LIMIT 1;
Get the last event in the table,SELECT * FROM events ORDER BY created_at DESC LIMIT 1;
Get all formsettings summarytools that are updated,SELECT * FROM formsettings_summarytools WHERE updated_at IS NOT NULL;
Get all formsettings summarytools that were updated on 2023-02-02,SELECT * FROM formsettings_summarytools WHERE updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345;
Get all formsettings summarytools that were created on 2023-01-01,SELECT * FROM formsettings_summarytools WHERE created_at = '2023-01-01';
Get all formsettings summarytools that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 1;
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 0;
Get the first formsettings summarytool in the table,SELECT * FROM formsettings_summarytools LIMIT 1;
Get the last formsettings summarytool in the table,SELECT * FROM formsettings_summarytools ORDER BY created_at DESC LIMIT 1;
Get all event actions,SELECT * FROM event_actions;
Get all event actions that are done,SELECT * FROM event_actions WHERE date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01,SELECT * FROM event_actions WHERE date_created = '2023-01-01';
Get all event actions that were created by user with ID 12345,SELECT * FROM event_actions WHERE user_id = 12345;
Get all event actions that were updated on 2023-02-02,SELECT * FROM event_actions WHERE updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_actions WHERE user_id = 12345 AND updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and are done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NOT NULL;
Get all event actions that were created by user with ID 12345 and are not done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NULL;
Get all event actions that were created on 2023-01-01 and are done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01 and are not done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NULL;
Get all event staff roles that are active,SELECT * FROM event_staff_roles WHERE is_active = 1;
"Get all event staff roles whose name is ""Lead""",SELECT * FROM event_staff_roles WHERE name = 'Lead';
Get all event staff roles that are owned by pharmacy with ID 12345,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345;
Get all event staff roles that were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE created_at = '2023-01-01';
Get all event staff roles that were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all event staff roles that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and are active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 1;
Get all event staff roles that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 0;
Get all hazards that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and are active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 1;
Get all hazards that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 0;
Get the first hazard in the table,SELECT * FROM hazards LIMIT 1;
Get the last hazard in the table,SELECT * FROM hazards ORDER BY created_at DESC LIMIT 1;
Get the hazards that were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE updated_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at BETWEEN '2023-01-01' AND '2023-02-02';
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported, and limited to the first 10 results","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at LIMIT 10;"
"Get all users and the organizations they are employed by, ordered by the user's name, and limited to the first 10 results","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name LIMIT 10;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number, and limited to the first 10 results","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number LIMIT 10;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date, and limited to the first 10 results","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date LIMIT 10;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity, and limited to the first 10 results","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity LIMIT 10;"
"Get all event actions and the staff members who created those actions, ordered by the action's date, and limited to the first 10 results","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date LIMIT 10;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used, and limited to the first 10 results","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all users and the events they have attended, ordered by the number of events the user has attended, and limited to the first 10 results","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization, and limited to the first 10 results","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC LIMIT 10;"
Get all staff members and the events they have been assigned to,"SELECT staff_directory., events. FROM staff_directory LEFT JOIN events ON staff_directory.id = events.staff_id;"
Get all events and the hazards that have been reported at those events,"SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id;"
Get all users and the organizations they are employed by,"SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id;"
Get all assets and the staff members who are responsible for those assets,"SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id;"
Get all events and the pharmacies that hosted those events,"SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id;"
Get all hazards and the pharmacies that have been affected by those hazards,"SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id;"
Get all event actions and the staff members who created those actions,"SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id;"
Get all formsettings summarytools and the events that use those summarytools,"SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id;"
Get all users and the events they have attended,"SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id;"
Get all organizations and the events that have been held at those organizations,"SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id;"
Get all assets,SELECT * FROM assets;
Get all assets that are active,SELECT * FROM assets WHERE active = 1;
Get all assets whose serial number is 123456,SELECT * FROM assets WHERE serial_number = 123456;
Get all assets that are owned by pharmacy with ID 12345,SELECT * FROM assets WHERE pharmacies_id = 12345;
Get all assets that were created on 2023-01-01,SELECT * FROM assets WHERE created_at = '2023-01-01';
Get all assets that were updated on 2023-02-02,SELECT * FROM assets WHERE updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM assets WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all assets that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM assets WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and are active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 1;
Get all assets that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 0;
Get all staff members,SELECT * FROM staff_directory;
Get all staff members who are active,SELECT * FROM staff_directory WHERE is_active = 1;
"Get all staff members whose name contains ""John""",SELECT * FROM staff_directory WHERE full_name LIKE '%John%';
"Get all staff members whose name is ""John Doe""",SELECT * FROM staff_directory WHERE full_name = 'John Doe';
Get all staff members whose ID is 12345,SELECT * FROM staff_directory WHERE id = 12345;
Get all staff members who are employed by pharmacy with ID 12345,SELECT * FROM staff_directory WHERE pharmacies_id = 12345;
Get all staff members who were created on 2023-01-01,SELECT * FROM staff_directory WHERE created_at = '2023-01-01';
Get all staff members who were updated on 2023-02-02,SELECT * FROM staff_directory WHERE updated_at = '2023-02-02';
Get all staff members who are fixed,SELECT * FROM staff_directory WHERE fixed = 1;
Get all staff members who are not fixed,SELECT * FROM staff_directory WHERE fixed = 0;
Get all hazards,SELECT * FROM hazards;
Get all hazards that are active,SELECT * FROM hazards WHERE active = 1;
"Get all hazards whose name is ""Chemical spill""",SELECT * FROM hazards WHERE name = 'Chemical spill';
Get all hazards that are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345;
Get all hazards that were created on 2023-01-01,SELECT * FROM hazards WHERE created_at = '2023-01-01';
Get all hazards that were updated on 2023-02-02,SELECT * FROM hazards WHERE updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Retrieve all records from the staff_directory table,SELECT * FROM staff_directory;
Retrieve all records from the assets table,SELECT * FROM assets;
Retrieve all records from the hazards table,SELECT * FROM hazards;
Retrieve all records from the event_staff_roles table,SELECT * FROM event_staff_roles;
Retrieve all records from the event_actions table,SELECT * FROM event_actions;
Retrieve all records from the formsettings_summarytools table,SELECT * FROM formsettings_summarytools;
Retrieve all records from the events table,SELECT * FROM events;
Retrieve all records from the users table,SELECT * FROM users;
Retrieve all records from the organizations table,SELECT * FROM organizations;
Retrieve all records from the pharmacies table,SELECT * FROM pharmacies;
Retrieve all events with harmt greater than 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt > 50 AND is_open = TRUE;
Find all users with active status and type 'Manager',SELECT * FROM users WHERE active = TRUE AND type = 'Manager';
Get the facilities with organization_id 'Org123' and is_active set to FALSE,SELECT * FROM facilities WHERE organization_id = 'Org123' AND is_active = FALSE;
Retrieve the assets with asset_type_id 'AT006' and pharmacies_id 'Pharma3',SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3';
Retrieve all events created in the last 15 days,SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '15 days';
Retrieve all assets with an active status,SELECT * FROM assets WHERE active = TRUE;
Retrieve all hazards with a description containing the word 'fire',SELECT * FROM hazards WHERE description ILIKE '%fire%';
Retrieve all event staff roles with an order greater than 10,"SELECT * FROM event_staff_roles WHERE \order\"" > 10;"""
Retrieve all event actions with an action_date in the future,SELECT * FROM event_actions WHERE action_date > CURRENT_DATE;
Retrieve all form settings summary tools with a facility_id of 100,SELECT * FROM formsettings_summarytools WHERE facility_id = 100;
Retrieve all events with harmt between 30 and 50,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50;
Retrieve all users with a profile_id of 500,SELECT * FROM users WHERE profiles_id = 500;
Retrieve all organizations with a country_id of 10,SELECT * FROM organizations WHERE countries_id = 10;
Retrieve all pharmacies created after '2022-01-01',SELECT * FROM pharmacies WHERE created_at > '2022-01-01';
Retrieve all events where the harmt is null,SELECT * FROM events WHERE harmt IS NULL;
Retrieve all assets with an asset_type_id of 'AT005' or 'AT007',"SELECT * FROM assets WHERE asset_type_id IN ('AT005', 'AT007');"
Retrieve all hazards with a name starting with 'Safety',SELECT * FROM hazards WHERE name LIKE 'Safety%';
Retrieve all event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3')","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3');"
Retrieve all form settings summary tools with an organization_id of 200,SELECT * FROM formsettings_summarytools WHERE organization_id = 200;
Retrieve all events with harmt not equal to 0,SELECT * FROM events WHERE harmt <> 0;
Retrieve all users with a date_created between '2022-01-01' and '2022-12-31',SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all organizations with a name containing the word 'Healthcare',SELECT * FROM organizations WHERE name ILIKE '%Healthcare%';
Retrieve all pharmacies where date_disabled is not null,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve all events with a harmt greater than 50 ordered by harmt in descending order,SELECT * FROM events WHERE harmt > 50 ORDER BY harmt DESC;
Retrieve all assets with a created_at date in the last 7 days,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days';
Retrieve all hazards with a description not containing the word 'chemical',SELECT * FROM hazards WHERE description NOT ILIKE '%chemical%';
Retrieve all event staff roles with a forms_id between 100 and 200,SELECT * FROM event_staff_roles WHERE forms_id BETWEEN 100 AND 200;
Retrieve all event actions with an updated_at date in the future,SELECT * FROM event_actions WHERE updated_at > CURRENT_TIMESTAMP;
Retrieve all form settings summary tools with a tools_id of 500 or 600,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600);"
Retrieve all events with harmt equal to 0 or 100,SELECT * FROM events WHERE harmt = 0 OR harmt = 100;
Retrieve all users with a roles_id not equal to 1,SELECT * FROM users WHERE roles_id <> 1;
Retrieve all organizations with a created_at date before '2023-01-01',SELECT * FROM organizations WHERE created_at < '2023-01-01';
Retrieve all pharmacies where name starts with 'Pharma' and ends with 'Inc',SELECT * FROM pharmacies WHERE name LIKE 'Pharma%Inc';
Retrieve all events with harmt greater than or equal to 50 and less than 100,SELECT * FROM events WHERE harmt >= 50 AND harmt < 100;
Retrieve all assets with a serial_number containing the digits '123',SELECT * FROM assets WHERE serial_number LIKE '%123%';
Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order,"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 ORDER BY \""order\"" ASC;"""
"Retrieve all event actions with a user_id not in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id NOT IN (100, 200, 300);"
Retrieve all form settings summary tools with an updated_by value of 'Admin',SELECT * FROM formsettings_summarytools WHERE updated_by = 'Admin';
Retrieve all events with a harmt greater than or equal to 50 ordered by harmt in ascending order,SELECT * FROM events WHERE harmt >= 50 ORDER BY harmt ASC;
Retrieve all users with a date_created between '2022-01-01' and '2022-12-31' excluding weekends,SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM date_created) < 6;
Retrieve all organizations with a name starting with 'Medical' and ending with 'Center',SELECT * FROM organizations WHERE name LIKE 'Medical%Center';
Retrieve all pharmacies where activate_at is not null and activated_by is null,SELECT * FROM pharmacies WHERE activate_at IS NOT NULL AND activated_by IS NULL;
Retrieve all events with a harmt not equal to 0 ordered by harmt in descending order,SELECT * FROM events WHERE harmt <> 0 ORDER BY harmt DESC;
Retrieve all assets with an updated_at date in the last 7 days,SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '7 days';
Retrieve all hazards with a description containing either 'fire' or 'explosion',SELECT * FROM hazards WHERE description ILIKE '%fire%' OR description ILIKE '%explosion%';
Retrieve all event staff roles with a forms_id not between 100 and 200,SELECT * FROM event_staff_roles WHERE forms_id NOT BETWEEN 100 AND 200;
Retrieve all event actions with an updated_by value not equal to 'Admin',SELECT * FROM event_actions WHERE updated_by <> 'Admin';
"Retrieve all form settings summary tools with a tools_id not in (500, 600)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600);"
Retrieve all events with harmt equal to 0 and 100,"SELECT * FROM events WHERE harmt IN (0, 100);"
Retrieve all users with a roles_id equal to 1,SELECT * FROM users WHERE roles_id = 1;
Retrieve all organizations with a created_at date after '2023-01-01',SELECT * FROM organizations WHERE created_at > '2023-01-01';
Retrieve all pharmacies where name contains the word 'Pharmacy' and has an 'activated_by' value of 'Admin',SELECT * FROM pharmacies WHERE name ILIKE '%Pharmacy%' AND activated_by = 'Admin';
Retrieve all events with harmt less than 50 or greater than 100,SELECT * FROM events WHERE harmt < 50 OR harmt > 100;
Retrieve all assets with a serial_number starting with 'ABC' or ending with 'XYZ',SELECT * FROM assets WHERE serial_number LIKE 'ABC%' OR serial_number LIKE '%XYZ';
Retrieve all hazards with a created_at date not between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE created_at NOT BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order less than or equal to 5 ordered by name in descending order,"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 ORDER BY name DESC;"""
"Retrieve all event actions with a user_id in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id IN (100, 200, 300);"
Retrieve all form settings summary tools with an updated_by value not equal to 'Admin',SELECT * FROM formsettings_summarytools WHERE updated_by <> 'Admin';
Retrieve all events with a harmt greater than or equal to 50 ordered by date_created in ascending order,SELECT * FROM events WHERE harmt >= 50 ORDER BY date_created ASC;
Retrieve all users with a date_created not between '2022-01-01' and '2022-12-31',SELECT * FROM users WHERE date_created NOT BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all organizations with a name containing the word 'Healthcare' and address containing the word 'Street',SELECT * FROM organizations WHERE name ILIKE '%Healthcare%' AND address ILIKE '%Street%';
Retrieve all pharmacies where activate_at is not null or activated_by is not null,SELECT * FROM pharmacies WHERE activate_at IS NOT NULL OR activated_by IS NOT NULL;
Retrieve all events with a harmt equal to 0 ordered by harmt in ascending order,SELECT * FROM events WHERE harmt = 0 ORDER BY harmt ASC;
Retrieve all assets with an updated_at date in the last 30 days,SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '30 days';
Retrieve all hazards with a description not containing either 'fire' or 'explosion',SELECT * FROM hazards WHERE description NOT ILIKE '%fire%' AND description NOT ILIKE '%explosion%';
"Retrieve all event staff roles with a forms_id not in (100, 200)","SELECT * FROM event_staff_roles WHERE forms_id NOT IN (100, 200);"
Retrieve all event actions with an updated_by value not equal to 'Admin' or 'Manager',"SELECT * FROM event_actions WHERE updated_by NOT IN ('Admin', 'Manager');"
"Retrieve all form settings summary tools with a tools_id not in (500, 600, 700)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600, 700);"
"Retrieve all events with harmt equal to 0, 50, or 100","SELECT * FROM events WHERE harmt IN (0, 50, 100);"
Retrieve all users with a roles_id not equal to 1 or 2,"SELECT * FROM users WHERE roles_id NOT IN (1, 2);"
Retrieve all organizations with a created_at date before '2023-01-01' or after '2023-12-31',SELECT * FROM organizations WHERE created_at < '2023-01-01' OR created_at > '2023-12-31';
Retrieve all pharmacies where name starts with 'Pharma' or ends with 'Inc',SELECT * FROM pharmacies WHERE name LIKE 'Pharma%' OR name LIKE '%Inc';
Retrieve all events with harmt greater than or equal to 50 or less than 10,SELECT * FROM events WHERE harmt >= 50 OR harmt < 10;
Retrieve all assets with a serial_number containing either 'ABC' or 'XYZ',SELECT * FROM assets WHERE serial_number LIKE '%ABC%' OR serial_number LIKE '%XYZ%';
Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31' excluding weekends,SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM created_at) < 6;
Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order and updated_by not equal to 'Admin',"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 AND updated_by <> 'Admin' ORDER BY \""order\"" ASC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days';"
Retrieve all form settings summary tools with an organization_id of 200 and updated_at in the last 30 days,SELECT * FROM formsettings_summarytools WHERE organization_id = 200 AND updated_at >= CURRENT_DATE - INTERVAL '30 days';
Retrieve all events with harmt not equal to 0 and 100 ordered by harmt in descending order and is_open set to TRUE,"SELECT * FROM events WHERE harmt NOT IN (0, 100) AND is_open = TRUE ORDER BY harmt DESC;"
Retrieve all assets with an active status and asset_type_id of 'AT005' or 'AT007',"SELECT * FROM assets WHERE active = TRUE AND asset_type_id IN ('AT005', 'AT007');"
Retrieve all hazards with a description containing the word 'fire' and created_at between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id <> 100 ORDER BY name ASC;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager',"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager');"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id <> 100;"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE;
Retrieve all users with a profile_id of 500 and active status,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01',SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01';
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin',SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin';
Retrieve all events where the harmt is null and is_open set to FALSE,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order,SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC;
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical',SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%';
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 ORDER BY \""order\"" DESC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin',SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin';
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC;
Retrieve all assets with a created_at date in the last 7 days and active status,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC;
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order,"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200);"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin',"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager'","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager');"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 10 rows,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 10;
Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20;
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows,"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200) LIMIT 50;"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC LIMIT 20;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100;
Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows offset by 10,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50 OFFSET 10;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows offset by 5,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20 OFFSET 5;
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows offset by 2,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5 OFFSET 2;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20,SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin' 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10,SELECT * FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows offset by 5,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30 OFFSET 5;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows offset by 5,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20 OFFSET 5;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows offset by 2,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10 OFFSET 2;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows offset by 10,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50 OFFSET 10;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows offset by 5,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50 OFFSET 5;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows offset by 20,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100 OFFSET 20;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows offset by 10,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30 OFFSET 10;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows offset by 5,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC LIMIT 20 OFFSET 5;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows offset by 2,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10 OFFSET 2;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows offset by 30,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100 OFFSET 30;
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20 with only the action_date and updated_by columns,"SELECT action_date, updated_by FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns,"SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns,"SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1' 'Pharma2' 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all staff members from the staff_directory table.,SELECT * FROM staff_directory;
Get the assets with an asset type ID of 123.,SELECT * FROM assets WHERE asset_type_id = 123;
"Find hazards with a name containing the word ""fire"" and created in the last month.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND created_at >= NOW() - INTERVAL 1 MONTH;
Get all event staff roles.,SELECT * FROM event_staff_roles;
Retrieve event actions for a specific user and pharmacy ID.,SELECT * FROM event_actions WHERE user_id = 123 AND user_pharmacy_id = 456;
Find form settings summary tools for a particular facility ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789;
Retrieve events created by a specific user and organization ID.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456;
Get all users with an active status.,SELECT * FROM users WHERE active = 1;
"Find organizations with names containing the word ""hospital.""",SELECT * FROM organizations WHERE name LIKE '%hospital%';
Retrieve pharmacies created after a specific date.,SELECT * FROM pharmacies WHERE created_at > '2023-01-01';
Retrieve the full names and employee IDs of staff members in the staff_directory table who belong to a specific organization.,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = 'your_organization_id';"
Get the serial numbers of assets of a specific asset type that are active and belong to a particular pharmacy.,SELECT serial_number FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
Find hazards created after a specific date and are associated with a particular pharmacy.,SELECT * FROM hazards WHERE created_at > '2023-01-01' AND pharmacies_id = 'your_pharmacy_id';
Retrieve event staff roles with a default flag set to true.,SELECT * FROM event_staff_roles WHERE is_default = 1;
Get event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id';
Find form settings summary tools for a specific facility and organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 'your_facility_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are still open.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1;
Get users with a specific role and belonging to a particular organization.,SELECT * FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id';
Find organizations created after a specific date and located in a particular city.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND city = 'your_city_name';
Retrieve pharmacies activated between two specific dates.,SELECT * FROM pharmacies WHERE activated_by > '2023-01-01' AND activated_by < '2023-07-01';
Retrieve the full names and registration numbers of active users who belong to a specific organization.,"SELECT full_name, reg_number FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Get the names and descriptions of all hazards associated with a particular pharmacy.,"SELECT name, description FROM hazards WHERE pharmacies_id = 'your_pharmacy_id';"
"Find the full names and updated dates of users who have the ""admin"" role.","SELECT users_fullname, updated_at FROM users WHERE roles_id = 'your_role_id' AND profiles_id = 'your_profile_id';"
Get the event IDs and dates for events created by a specific user within a given date range.,"SELECT event_id, date_created FROM events WHERE users_id = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date'"
"Retrieve the full names and updated dates of users who have the ""supervisor"" role and belong to a specific organization.","SELECT users_fullname, updated_at FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id';"
Get the names and descriptions of hazards created by a specific user within the last 30 days.,"SELECT name, description FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAY AND updated_by = 'your_user_id';"
Find the event IDs and dates for events that were closed in the last week.,"SELECT events_id, date_closed FROM event_actions WHERE date_done >= NOW() - INTERVAL 7 DAY;"
Retrieve the names and addresses of organizations located in a specific country.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id';"
Get the staff roles and their associated forms IDs in a specific facility.,"SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Get the list of all organizations that have a country ID of 123.,SELECT * FROM organizations WHERE countries_id = 123;
Find all events that were created by a user with the ID 123.,SELECT * FROM events WHERE users_id = 123;
"Get the list of all pharmacies that have a name containing the word ""hospital"".",SELECT * FROM pharmacies WHERE name LIKE '%hospital%';
Retrieve all users who are associated with a particular organization ID.,SELECT * FROM users WHERE organizations_id = 123;
Find all assets that were created in the last 30 days.,SELECT * FROM assets WHERE created_at >= NOW() - INTERVAL 30 DAY;
Get the list of all hazards that are associated with a particular event ID.,SELECT * FROM hazards WHERE events_id = 123;
"Get the list of all events that have a status of ""open"".",SELECT * FROM events WHERE is_open = 1;
"Find all events that were created in the last 7 days and have a status of ""closed"".",SELECT * FROM events WHERE created_at >= NOW() - INTERVAL 7 DAY AND is_open = 0;
"Get the list of all users who have a role of ""admin"".",SELECT * FROM users WHERE roles_id = 1;
Retrieve all event actions that were performed by a user with the ID 123.,SELECT * FROM event_actions WHERE user_id = 123;
Find all form settings summary tools that were updated in the last 24 hours.,SELECT * FROM formsettings_summarytools WHERE updated_at >= NOW() - INTERVAL 1 DAY;
Get the list of all assets that are associated with a particular pharmacy ID and have an asset type ID of 123.,SELECT * FROM assets WHERE pharmacies_id = 123 AND asset_type_id = 123;
"Get the list of all events that have a type of ""hazard"".",SELECT * FROM events WHERE events_type_id = 1;
Find all hazards that were created by a user with the ID 123.,SELECT * FROM hazards WHERE created_by = 123;
"Get the list of all pharmacies that have a city of ""London"".",SELECT * FROM pharmacies WHERE city = 'London';
"Retrieve all users who are associated with a particular pharmacy ID and have a role of ""admin"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1;
"Find all assets that were updated in the last 24 hours and have a serial number of ""1234567890"".",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890';
"Get the list of all hazards that are associated with a particular event ID and have a name containing the word ""fire"".",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%';
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days.",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", and were created in the last 30 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Find all assets that were updated in the last 24 hours, have a serial number of ""1234567890"", and are associated with a particular pharmacy ID.",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890' AND pharmacies_id = 123;
"Get the list of all hazards that are associated with a particular event ID, have a name containing the word ""fire"", and were created by a user with the ID 123.",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%' AND created_by = 123;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"".",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, and have a status of ""active"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1;
"Find all assets that were updated in the last 24 hours, have a serial number of ""1234567890"", are associated with a particular pharmacy ID, and have a status of ""active"".",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890' AND pharmacies_id = 123 AND is_active = 1;
"Get the list of all hazards that are associated with a particular event ID, have a name containing the word ""fire"", were created by a user with the ID 123, and have a status of ""open"".",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%' AND created_by = 123 AND is_open = 1;
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days and have a status of ""open"".",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND is_open = 1;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days and have a status of ""open"" and were created by a user with the ID 123.",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND is_open = 1 AND created_by = 123;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a city of ""London"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a city of ""London"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a city of ""London"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 14 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 14 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 14 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 14 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 30 days",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 30 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 30 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 60 days, have a status of ""active"", and were created in the last 30 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 60 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 90 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 90 days, have a status of ""active"", and were created in the last 90 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 90 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY
Get the asset types and their corresponding item IDs in a specific pharmacy.,"SELECT full_name, employee_id FROM staff_directory WHERE created_at >= NOW() - INTERVAL 3 MONTH;"
Find hazards with a specific organization hazard ID and associated with a particular pharmacy.,"SELECT asset_type_id, asset_items_id FROM assets WHERE pharmacies_id = 'random_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE organization_hazard_id = 'random_organization_hazard_id' AND pharmacies_id = 'random_pharmacy_id';
Get the event IDs and user IDs of event actions created by a specific user in the last week.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility.,"SELECT events_id, user_id FROM event_actions WHERE user_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 7 DAY;"
Retrieve the users' full names and organizations they belong to.,SELECT * FROM formsettings_summarytools WHERE tools_id = 'random_tool_id' AND facility_id = 'random_facility_id';
Get the names and countries of organizations created after a specific date.,"SELECT users_fullname, organization_id FROM users;"
Find pharmacies with a specific name and activated by a particular user.,"SELECT name, countries_id FROM organizations WHERE created_at > 'random_date';"
Retrieve events created by a specific user and type.,SELECT * FROM pharmacies WHERE name = 'random_pharmacy_name' AND activated_by = 'random_user_id';
Get the users' profiles IDs and their associated roles.,SELECT * FROM events WHERE users_id = 'random_user_id' AND events_type_id = 'random_event_type_id';
"Find organizations with names containing the word ""medical"" and located in a specific city.","SELECT profiles_id, roles_id FROM users;"
Retrieve the pharmacies' names and their associated organizations' names.,SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'random_city_name';
Get the event IDs and dates created by a specific user within the last month.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organizations_id = organizations.sf_id;"
Find users with a specific SF ID and their associated profile IDs.,"SELECT event_id, date_created FROM events WHERE users_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 1 MONTH;"
Retrieve the event staff roles' names and associated form IDs in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'random_sf_id';"
Get the organizations' names and addresses located in a specific country.,"SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find pharmacies created between two specific dates and owned by a particular organization.,"SELECT name, address FROM organizations WHERE countries_id = 'random_country_id';"
Retrieve the events' types and the number of occurrences for each type.,SELECT * FROM pharmacies WHERE created_at BETWEEN 'random_start_date' AND 'random_end_date' AND organizations_id = 'random_organization_id';
Get the staff directory entries with specific IDs and their associated employee IDs.,"SELECT events_type_id, COUNT(*) AS occurrences FROM events GROUP BY events_type_id;"
Retrieve the full names and roles of users who belong to a specific organization.,"SELECT * FROM staff_directory WHERE id IN ('random_id1', 'random_id2', 'random_id3') AND employee_id IS NOT NULL;"
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 120 days.","SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 120 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 120 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 180 days, have a status of ""active"", and were created in the last 120 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 180 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Retrieve the full names and roles of users who belong to a specific organization.,SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Retrieve the full names and email addresses of active users belonging to a specific organization.,"SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
Get the names and descriptions of assets associated with a specific pharmacy.,"SELECT full_name, email FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Find hazards created by a specific user and associated with a particular pharmacy.,"SELECT name, description FROM assets WHERE pharmacies_id = 'your_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE created_by = 'your_user_id' AND pharmacies_id = 'your_pharmacy_id';
"Get the event actions for a specific event ID and user ID, ordered by the action date in descending order.","SELECT name, order FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND facility_id = 'your_facility_id';
Get the users' full names and phone numbers in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""health"" and located in a specific city.","SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.",SELECT * FROM organizations WHERE name LIKE '%health%' AND city = 'your_city_name';
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find pharmacies activated by a specific user within a specific date range.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
Get the organizations' names and trial end dates in ascending order of trial end dates.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Find pharmacies created after a specific date and activated by a particular user.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.","SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.","SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Get the users' full names and their associated roles in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""hospital"" and located in a specific city.","SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Find users with a specific user ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM staff_directory WHERE created_at > 'your_date' AND organization_id = 'your_organization_id';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE active = 1 AND asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';
Find hazards with specific names and descriptions associated with a particular pharmacy.,SELECT * FROM hazards WHERE name = 'your_hazard_name' AND description = 'your_hazard_description' AND pharmacies_id = 'your_pharmacy_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM users WHERE organization_id = 'your_organization_id' AND created_at > 'your_date';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
"Find hazards with names containing the word ""fire"" and descriptions containing the word ""safety"" associated with a particular pharmacy.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND description LIKE '%safety%' AND pharmacies_id = 'your_pharmacy_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
"Retrieve the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Retrieve the users' full names and phone numbers in a specific organization.,"SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset"
"Retrieve the names and addresses of staff members in a specific organization, ordered by full name.","SELECT full_name, address FROM staff_directory WHERE organization_id = 'your_organization_id' ORDER BY full_name;"
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by facility name.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name;"
Get the count of active assets in a specific facility.,SELECT COUNT(*) AS active_asset_count FROM assets WHERE facility_id = 'your_facility_id' AND active = 1;
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by hazard name.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY name;"
"Find the events where a specific user has taken action within a specific date range, ordered by action date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND action_date BETWEEN 'start_date' AND 'end_date' ORDER BY action_date;
"Retrieve the names and order numbers of roles associated with a specific form ID, ordered by order number.","SELECT name, order FROM event_staff_roles WHERE form_id = 'your_form_id' ORDER BY order;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by updated date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND updated_date BETWEEN 'start_date' AND 'end_date' ORDER BY updated_date;
Get the count of open events in a specific facility.,SELECT COUNT(*) AS open_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 1;
"Retrieve the names and addresses of facilities associated with a specific organization, filtered by a specific city, ordered by address.","SELECT name, address FROM facilities WHERE organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY address;"
"Find events with a specific type and created by a specific user, filtered by a specific city, sorted by date created in descending order.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND created_by = 'your_user_id' AND city = 'your_city_name' ORDER BY date_created DESC;
"Retrieve the names and descriptions of tools associated with a specific form ID, filtered by a specific facility, ordered by name in descending order.","SELECT name, description FROM tools WHERE form_id = 'your_form_id' AND facility_id = 'your_facility_id' ORDER BY name DESC;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by event ID.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND event_id BETWEEN 'id1' AND 'id2' ORDER BY event_id;
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by name, limited to 10 records.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name LIMIT 10;"
Retrieve all staff members' full names and employee IDs,"SELECT full_name, employee_id FROM staff_directory;"
Find the staff member with a specific ID,SELECT * FROM staff_directory WHERE id = <staff_id>;
Get the full name and registration number of active staff members,"SELECT full_name, reg_number FROM staff_directory WHERE is_active = true;"
Find staff members belonging to a specific organization,SELECT * FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the count of active staff members,SELECT COUNT(*) FROM staff_directory WHERE is_active = true;
Update the employee ID for a specific staff member,UPDATE staff_directory SET employee_id = <new_employee_id> WHERE id = <staff_id>;
Find all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Select the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Retrieve the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Find staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Select the staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Retrieve the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Select the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Get the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Find the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Get the count of staff members who are not active:,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the distinct organization IDs present in the staff directory,SELECT DISTINCT org_id FROM staff_directory;
Delete a staff member from the directory based on their ID,DELETE FROM staff_directory WHERE id = <staff_id>;
Find the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
List the full names and updated timestamps of recently created staff members,"SELECT full_name, updated_at FROM staff_directory ORDER BY created_at DESC LIMIT 5;"
List the employee IDs and registration numbers of active staff members belonging to a specific organization,"SELECT employee_id, reg_number FROM staff_directory WHERE is_active = true AND org_id = <organization_id>;"
List the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Retrieve the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the full names and employee IDs of staff members with a specific official user ID,"SELECT full_name, employee_id FROM staff_directory WHERE official_user_id = <official_user_id>;"
Retrieve the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
List the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Find the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Retrieve the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
List the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Select the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Find all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Select all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Retrieve the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Select the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Get the count of staff members in the staff directory,SELECT COUNT(*) FROM staff_directory;
Retrieve the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Select the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
List the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Find all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
List all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Select all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Get the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Get the distinct pharmacy IDs present in the staff directory,"SELECT full_name, official_user_id FROM staff_directory;"
Retrieve the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Select the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Get the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Find all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
List all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Select all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Get the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Select the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
List the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Retrieve the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Select the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Find all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Select all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Get the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Select the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Retrieve the full names and active statuses of staff members,"SELECT full_name, is_active FROM staff_directory;"
Get the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Select the staff members who are locums (temporary replacements) and have a specific full name,SELECT * FROM staff_directory WHERE locum_full_name = '<locum_full_name>';
Select the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Find staff members who are not active and have a specific registration number,SELECT * FROM staff_directory WHERE is_active = false AND reg_number = '<registration_number>';
Get the full names and creation timestamps of staff members working at a specific pharmacy,"SELECT full_name, created_at FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;"
Retrieve the full names and employee IDs of staff members belonging to a specific organization,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = <organization_id>;"
Get the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Select the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Find all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Select all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
List all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Retrieve the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the count of staff members who work at a specific pharmacy,SELECT COUNT(*) FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Select the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
List the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Find all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Select all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Get the distinct official user IDs of staff members belonging to a specific organization,SELECT DISTINCT official_user_id FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Select the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
List the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Retrieve the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Get the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
List the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Find all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Select all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Select the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Retrieve all pharmacies,SELECT * FROM pharmacies;
Select all from pharmacies,SELECT * FROM pharmacies;
Retrieve the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Select the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Retrieve the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
List the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve the pharmacies that were activated by a specific user,SELECT * FROM pharmacies WHERE activated_by = 'user_id';
Retrieve the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
Select the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
List the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
"Retrieve all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
"Select all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Select the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Get the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Retrieve the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Select the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Get the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Retrieve the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Select the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Get the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Retrieve the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
Select the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
"Retrieve the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Get the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Select the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
Retrieve the names of all pharmacies,SELECT name FROM pharmacies;
Get the names of all pharmacies,SELECT name FROM pharmacies;
Select the names of all pharmacies,SELECT name FROM pharmacies;
Retrieve the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Get the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Retrieve the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Select the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
List the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Retrieve the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Get the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Select the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Retrieve the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
Select the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
"Retrieve the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
"Select the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
Retrieve the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Select the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Retrieve the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Select the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Retrieve the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Get all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Select all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Retrieve the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
Select the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
"Retrieves all rows from the ""pharmacies"" table where the ""activate_at"" column falls between the dates '2023-06-01' and '2023-06-30'",SELECT * FROM pharmacies WHERE DATE(activate_at) BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies activated in the morning (before 12 PM),SELECT * FROM pharmacies WHERE EXTRACT(HOUR FROM activate_at) < 12;
Retrieve the pharmacies activated on weekends (Saturday or Sunday),"SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) IN (0, 6);"
Retrieve the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Get the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Select the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Retrieve the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Select the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Get the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Retrieve the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Get the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Retrieve pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Get pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Select pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Retrieve pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Get the  pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Select the pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Get pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Retrieve pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select the pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select pharmacies with both activation and enablement dates,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND activate_at IS NOT NULL;
Retrieve pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Select the pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Retrieve pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
Select the pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
"Select all columns from the ""organizations"" table",SELECT * FROM organizations;
"Retrieve all columns from the ""organizations"" table",SELECT * FROM organizations;
"Select only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Get only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Select distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
"Get the distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
Select organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Get organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Select organizations located in a new york city,SELECT * FROM organizations WHERE city = 'New York';
Retrieve the organizations located in a New York city,SELECT * FROM organizations WHERE city = 'New York';
Select organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Get the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Get the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with addresses in a specific country,SELECT * FROM organizations WHERE countries_id = <country_id>;
Select organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Retrieve the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Get the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
"Select organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Select organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Get the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Retrieve the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
Select organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Retrieve the organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Select organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Retrieve the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Get the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
"Select organizations with names containing the word ""Tech""",SELECT * FROM organizations WHERE name LIKE '%Tech%';
"Select organizations located in cities starting with the letter ""C""",SELECT * FROM organizations WHERE city LIKE 'C%';
"Select organizations located in cities starting with the letter ""S""",SELECT * FROM organizations WHERE city LIKE 'S%';
"Select organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Select organizations created in the last 30 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY city;"
"Select organizations with trial periods ending in the next 7 days, ordered by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY city;"
"Select organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Retrieve the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Select organizations with trial periods ending in the next 7 days, located in London","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city = 'London';"
"Select organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Select organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Retrieve the organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Select organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Select organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Select organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
"Get the organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
Select organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
Retrieve the organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
"Select organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Get the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Retrieve the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Select organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Retrieve the organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Select organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
"Retrieve the organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
Select organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
Retrieve the organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
"Select organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Select organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Retrieve the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Get the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Select organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Retrieve the organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Select organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
Select organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get the organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
"Select organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Retrieve the  organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
Select organizations with trial periods ending in the future and located in a San Francisco,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
Retrieve the organizations with trial periods ending in the future and located in a specific city,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
"Select organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Retrieve the organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Select organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Retrieve the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Get the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Select organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Get the organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Select organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Select organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Retrieve the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Get the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Select organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Select organizations with names starting with the letter ""A"" or ""B"" and located in cities with more than 3 organizations",SELECT * FROM organizations WHERE (name LIKE 'A%' OR name LIKE 'B%') AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 3);
"Select organizations with trial periods ending in the next 30 days and located in a specific country, ordered by trial end date and then by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at, city;"
Retrieve all users with active status,SELECT * FROM users WHERE active = true;
Select all users with active status,SELECT * FROM users WHERE active = true;
Get all users with active status.,SELECT * FROM users WHERE active = true;
Retrieve all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Select all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Retrieve all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Select all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Get all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Retrieve all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Select all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Retrieve active users,SELECT * FROM users WHERE active = 1;
Select all the active users,SELECT * FROM users WHERE active = 1;
Retrieve users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Select users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Select users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Get users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Retrieve users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Select the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Get the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Retrieve users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Select the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Get the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Retrieve users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Select the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Get the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Retrieve users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Select the users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Retrieve active users where profile ID is 1,SELECT * FROM users WHERE profiles_id =1  AND active = 1;
Retrieve users with a specific role ID and updated in the last 30 days,SELECT * FROM users WHERE roles_id = <role_id> AND date_updated >= NOW() - INTERVAL 30 DAY;
Retrieve all events,SELECT * FROM events;
Select all events,SELECT * FROM events;
Retrieve the full names of users associated with events,SELECT users_fullname FROM events;
Select the full names of users associated with events,SELECT users_fullname FROM events;
Get the full names of users associated with events,SELECT users_fullname FROM events;
Retrieve the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Select  the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Get the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Retrieve the organizations associated with events,SELECT organization_id FROM events;
Select the organizations associated with events,SELECT organization_id FROM events;
Get the organizations associated with events,SELECT organization_id FROM events;
Retrieve the types of events,SELECT events_type_id FROM events;
Select  the types of events,SELECT events_type_id FROM events;
Get the types of events,SELECT events_type_id FROM events;
Retrieve the prescribers involved in events,SELECT prescribers_id FROM events;
Select the prescribers involved in events,SELECT prescribers_id FROM events;
List the prescribers involved in events,SELECT prescribers_id FROM events;
Retrieve the reporters of events,SELECT reporters_id FROM events;
Select  the reporters of events,SELECT reporters_id FROM events;
Retrieve the misuses associated with events,SELECT misuses_id FROM events;
Select  the misuses associated with events,SELECT misuses_id FROM events;
Get the misuses associated with events,SELECT misuses_id FROM events;
Retrieve the open events,SELECT * FROM events WHERE is_open = true;
Select the open events,SELECT * FROM events WHERE is_open = true;
Get the open events,SELECT * FROM events WHERE is_open = true;
Retrieve the closed events,SELECT * FROM events WHERE is_open = false;
Select the closed events,SELECT * FROM events WHERE is_open = false;
Get the closed events,SELECT * FROM events WHERE is_open = false;
Retrieve the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Select the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Get the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Retrieve the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Select the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Get the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Retrieve all form settings summary tools,SELECT * FROM formsettings_summarytools;
Select all form settings summary tools,SELECT * FROM formsettings_summarytools;
Get all form settings summary tools,SELECT * FROM formsettings_summarytools;
Retrieve the tools where id is 2,SELECT * FROM formsettings_summarytools WHERE tools_id = 2;
Retrieve the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Select the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Retrieve the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = 1;
Select the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_id>;
Retrieve the form settings updated after a specific date,SELECT * FROM formsettings_summarytools WHERE updated_at > '<date>';
Retrieve the form settings updated within a specific date range,SELECT * FROM formsettings_summarytools WHERE updated_at BETWEEN '<start_date>' AND '<end_date>';
Retrieve the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Select  the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Get the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Retrieve the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Select the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Get the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Select the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Get the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Retrieve the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Select the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Get the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
"Retrieve the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
"Select the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
Retrieve the distinct form IDs and facility IDs from the form settings,"SELECT DISTINCT forms_id, facility_id FROM formsettings_summarytools;"
"Retrieve the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Select the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Get the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
Retrieve the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Select the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Get the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the distinct organization IDs from the form settings,SELECT DISTINCT organization_id FROM formsettings_summarytools;
Retrieve the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Get the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
Select  the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
"Retrieve the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Select the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Get the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
Retrieve the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Select the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Select the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Get the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Retrieve the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Select the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Retrieve the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Select the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Get the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Retrieve the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Select the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Get the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Retrieve the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Select the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Get the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Retrieve the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Select the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Get the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Retrieve the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Select the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Get the average count of form settings per facility,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Retrieve the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Select the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Get the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Retrieve the sum of counts for each facility,"SELECT facility_id, SUM(count) AS total_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery GROUP BY facility_id;"
Retrieve the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select all event actions,SELECT * FROM event_actions;
Retrieve all event actions,SELECT * FROM event_actions;
Get all the event actions,SELECT * FROM event_actions;
Select event actions where user id is 1,SELECT * FROM event_actions WHERE user_id =1;
Select event actions for a specific user,SELECT * FROM event_actions WHERE user_id = <user_id>;
Select event actions for a specific pharmacy,SELECT * FROM event_actions WHERE user_pharmacy_id = <user_pharmacy_id>;
Select event actions created on a specific date,SELECT * FROM event_actions WHERE date_created = <date_created>;
Select event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Retreive event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Get the event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Inner Join between event_actions and users table on user_id,SELECT * FROM event_actions INNER JOIN user ON event_actions.user_id = users.user_id;
Inner Join between event_actions and users table on user_id and aggregate count of event_actions,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate average of distinct event IDs","SELECT users.*, pharmacy.*, AVG(DISTINCT event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
Inner Join between event_actions and users table on user_id and aggregate count of event_actions with a specific date,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created = '2023-07-16' GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions with a specific user ID,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions with a specific date range,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created BETWEEN '2023-07-01' AND '2023-07-15' GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions with a specific user ID,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions with a specific pharmacy ID","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs with a specific event ID","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.events_id = 54321 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs with a specific user ID and pharmacy ID","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE users.user_id = 12345 AND pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
Count the total number of event actions,SELECT COUNT(*) AS total_actions FROM event_actions;
Count the number of event actions for each user,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id;"
Calculate the average number of event actions per user,"SELECT AVG(total_actions) AS average_actions per_user  FROM (SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id) AS subquery;"
Find the user with the highest number of event actions,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_id   ORDER BY total_actions DESC LIMIT 1;"
Calculate the total number of event actions per date created,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created;"
Find the date with the highest number of event actions,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created ORDER BY total_actions DESC LIMIT 1;"
Calculate the average time taken to complete event actions,"SELECT AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions;"
Calculate the maximum time taken to complete an event action,"SELECT MAX(DATEDIFF(date_done, action_date)) AS max_completion_time FROM event_actions;"
Calculate the minimum time taken to complete an event action,"SELECT MIN(DATEDIFF(date_done, action_date)) AS min_completion_time FROM event_actions;"
Find the user who updated the most event actions,"SELECT updated_by, COUNT(*) AS total_updated_actions FROM event_actions GROUP BY updated_by  ORDER BY total_updated_actions DESC LIMIT 1;"
Calculate the average number of event actions per user pharmacy,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY  user_pharmacy_id;"
Find the user pharmacy with the highest number of event actions,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_pharmacy_id ORDER BY total_actions DESC  LIMIT 1;"
Calculate the total number of event actions per month,"SELECT DATE_FORMAT(date_created, '%Y-%m') AS month, COUNT(*) AS total_actions FROM event_actions GROUP BY month;"
Calculate the average number of event actions per day of the week,"SELECT DAYNAME(date_created) AS day_of_week, COUNT(*) AS total_actions FROM event_actions GROUP BY day_of_week;"
Calculate the average time between action and completion for each user,"SELECT user_id, AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions GROUP BY user_id;"
Calculate the total number of event actions per user and user pharmacy,"SELECT user_id, user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id, user_pharmacy_id;"
Retrieve all event staff roles,SELECT * FROM event_staff_roles;
Select all event staff roles,SELECT * FROM event_staff_roles;
Retrieve event staff role by name,SELECT * FROM event_staff_roles WHERE name = 'RoleName';
Retrieve event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Select event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Get event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Retrieve event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 'FormID';
Select event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 1;
Retrieve event staff roles updated by user id 1,SELECT * FROM event_staff_roles WHERE updates_by = 1;
Retrieve the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Select the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Get the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Retrieve the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Select the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the count of event staff roles,SELECT COUNT(*) FROM event_staff_roles;
Retrieve the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Select the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Get the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Retrieve the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Select the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Get the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Retrieve the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Select the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Get the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Retrieve the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Select the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Get the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Retrieve the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Select the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Get the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Retrieve event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Select event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Retrieve event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Select event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Retrieve the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Select the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Get the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Retrieve event staff roles with an order greater than 10,SELECT * FROM event_staff_roles WHERE order > 10;
Retrieve the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Select the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Get the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
"Retrieve event staff roles with names ending with ""a""",SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Select the event staff roles with names ending with A,SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Retrieve event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
Select the event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
"Retrieve event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Select the event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Retrieve the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Select the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Get the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
Select the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Get the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Retrieve the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Select the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Get the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Retrieve the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Select the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Get the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Retrieve event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Select the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Get the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
"Select the event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Get the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Retrieve the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
Select the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
Retrieve the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Select the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Get the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Retrieve event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
Select the event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve the count of event staff roles for each facility ID, and order the result by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Select the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Get the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Retrieve event staff roles with order values greater 5, ordered by order",SELECT * FROM event_staff_roles WHERE order > 5 ORDER BY order;
"Retrieve the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
"Select the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT DISTINCT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select all hazards,SELECT * FROM hazards;
Select hazards by their names,SELECT * FROM hazards WHERE name = 'your_hazard_name';
Select hazards where organization hazard ID is 1,SELECT * FROM hazards WHERE organization_hazard_id = 1;
Select hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Retrieve the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Get the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Select the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Retrieve the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Get the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Select hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Retrieve the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Get the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Select hazards with null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Retrieve the hazards with null pharmacy IDs:,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Select hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Retrieve the hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Select hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Get hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
List the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select hazards updated within the last 6 months,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Retrieve the hazards updated within the last 6 months:,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Get the count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Calculate the average number of hazards per pharmacy,SELECT AVG(pharmacies_id) AS avg_hazards_per_pharmacy FROM hazards;
Find the maximum created date among hazards,SELECT MAX(created_at) AS max_created_date FROM hazards;
Determine the minimum updated date among hazards,SELECT MIN(updated_at) AS min_updated_date FROM hazards;
Calculate the sum of pharmacies' IDs for all hazards,SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards;
Calculate the average length of hazard descriptions,SELECT AVG(LENGTH(description)) AS avg_description_length FROM hazards;
Determine the maximum number of hazards created in a single day,SELECT COUNT(*) AS max_hazards_created FROM hazards GROUP BY DATE(created_at) ORDER BY max_hazards_created DESC LIMIT 1;
Find the minimum number of hazards updated in a single day,SELECT COUNT(*) AS min_hazards_updated FROM hazards GROUP BY DATE(updated_at) ORDER BY min_hazards_updated ASC LIMIT 1;
Calculate the average difference in days between created and updated dates for hazards,"SELECT AVG(DATEDIFF(updated_at, created_at)) AS avg_days_difference FROM hazards;"
Determine the sum of pharmacy IDs for hazards updated within the last 30 days,"SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Calculate the total number of hazards for each pharmacy,"SELECT pharmacies_id, COUNT(*) AS total_hazards FROM hazards GROUP BY pharmacies_id;"
Determine the sum of pharmacy IDs for hazards with a specific name and created within the last 30 days,"SELECT name, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE name = 'your_hazard_name' AND created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY name;"
Calculate the average number of hazards per week,"SELECT YEARWEEK(created_at) AS week, COUNT(*) AS hazards_per_week FROM hazards GROUP BY week;"
Calculate the maximum difference in days between created and updated dates for hazards,"SELECT MAX(DATEDIFF(updated_at, created_at)) AS max_days_difference FROM hazards;"
Calculate the minimum difference in days between created and updated dates for hazards,"SELECT MIN(DATEDIFF(updated_at, created_at)) AS min_days_difference FROM hazards;"
Find the maximum length of hazard descriptions,SELECT MAX(LENGTH(description)) AS max_description_length FROM hazards;
Determine the average number of hazards per day,"SELECT DATE(created_at) AS created_date, COUNT(*) AS hazards_per_day FROM hazards GROUP BY created_date;"
Find the minimum number of hazards updated on a specific date,"SELECT DATE(updated_at) AS updated_date, COUNT(*) AS min_hazards_updated FROM hazards GROUP BY updated_date ORDER BY min_hazards_updated ASC LIMIT 1;"
Calculate the total number of hazards created per month,"SELECT YEAR(created_at) AS year, MONTH(created_at) AS month, COUNT(*) AS hazards_count FROM hazards GROUP BY year, month;"
Calculate the sum of pharmacy IDs for hazards created in each year,"SELECT YEAR(created_at) AS year, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards GROUP BY year;"
Find the average difference in hours between created and updated timestamps for hazards,"SELECT AVG(TIMESTAMPDIFF(HOUR, created_at, updated_at)) AS avg_hours_difference FROM hazards;"
Retrieve the full names and employee IDs of active staff members.,"SELECT full_name, employee_id FROM staff_directory WHERE is_active = 1;"
Find assets with a specific serial number and belonging to a particular pharmacy.,SELECT * FROM assets WHERE serial_number = 'ABC123' AND pharmacies_id = 456;
Get all hazards created in the last week.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL '1 week';
Retrieve the names and order of event staff roles for a specific facility.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 789;"
Find event actions performed by a specific user and within a given date range.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-07-01' AND '2023-07-31';
Retrieve form settings summary tools for a specific form and organization.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND organization_id = 456;
Get events with a specific event type and open status.,SELECT * FROM events WHERE events_type_id = 123 AND is_open = 1;
Find users with a specific role and created after a certain date.,SELECT * FROM users WHERE roles_id = 789 AND date_created > '2023-01-01';
Retrieve organizations with a trial end date in the future.,SELECT * FROM organizations WHERE trial_ends_at > NOW();
Find pharmacies that were activated by a specific user.,SELECT * FROM pharmacies WHERE activated_by = 123;
Retrieve the IDs and full names of staff members belonging to a specific organization.,"SELECT id, full_name FROM staff_directory WHERE org_id = 123;"
Find assets that are currently active and belong to a particular organization.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456;
Get hazards with a specific name and description.,SELECT * FROM hazards WHERE name = 'Fire Hazard' AND description = 'High risk of fire outbreak.';
Retrieve the default event staff roles for a specific form ID.,SELECT * FROM event_staff_roles WHERE forms_id = 789 AND is_default = 1;
Find event actions performed by a specific user and updated within the last week.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_at >= NOW() - INTERVAL '1 week';
Get form settings summary tools for a particular facility and organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789 AND organization_id = 456;
Retrieve events created by a specific user and still open.,SELECT * FROM events WHERE users_id = 123 AND is_open = 1;
Find users with a specific role and active status.,SELECT * FROM users WHERE roles_id = 789 AND active = 1;
Get organizations created after a certain date and located in a specific city.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND city = 'New York';
Retrieve pharmacies that were activated within the last month.,SELECT * FROM pharmacies WHERE activated_by >= NOW() - INTERVAL '1 month';
Retrieve the user IDs and names of active staff members in a specific organization.,"SELECT user_id, full_name FROM staff_directory WHERE is_active = 1 AND org_id = 123;"
Find assets that were created or updated in the last 30 days.,SELECT * FROM assets WHERE created_at >= NOW() - INTERVAL '30 days' OR updated_at >= NOW() - INTERVAL '30 days';
"Get hazards with a description containing the word ""danger"" and created in the last 3 months.",SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months';
Retrieve the names and orders of event staff roles for a specific form ID and facility ID.,"SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456;"
Find event actions performed by a specific user,"updated by a specific user, and within a specific date range.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30';"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123;"
Retrieve events created by a specific user,"organization ID, and closed within the last week.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days';"
Find users with a specific role,"active status, and created after a certain date.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01';"
Get organizations with a trial end date in the future and located in a specific city.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London';
Find assets that are active,"belong to a specific organization, and have been updated within the last month.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND updated_at >= NOW() - INTERVAL '1 month';"
"Get hazards with a description containing the word ""danger"" and created in the last 3 months","ordered by their names in ascending order.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' ORDER BY name ASC;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones that have a default setting.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND is_default = 0;"
Find event actions performed by a specific user,"updated by a different specific user, and within a specific date range, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC;"
Retrieve events created by a specific user,"organization ID, and closed within the last week, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC;"
Get organizations with a trial end date in the future,"located in a specific city, and ordered by their trial end dates in descending order.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC;"
Retrieve pharmacies with a specific name,"activated by a specific user, and disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the full names and employee IDs of staff members who are active,"belong to a specific organization, and have a registration number.,SELECT full_name, employee_id FROM staff_directory WHERE is_active = 1 AND org_id = 123 AND reg_number IS NOT NULL;"
Find assets that are active,"belong to a specific organization, have a specific asset type ID, and have been updated within the last month.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_at >= NOW() - INTERVAL '1 month';"
"Get hazards with a description containing the word ""danger"" and created in the last 3 months","ordered by their names in ascending order and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' ORDER BY name ASC LIMIT 10;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones that have a default setting and ordered by the order in descending order.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND is_default = 0 ORDER BY order DESC;"
Find event actions performed by a specific user,"updated by a different specific user, and within a specific date range, ordered by the action date in descending order and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Retrieve events created by a specific user,"organization ID, and closed within the last week, ordered by the event type ID in ascending order and limited to 50 rows.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC LIMIT 50;"
Retrieve pharmacies with a specific name,"activated by a specific user, and disabled after a certain date, ordered by their names in ascending order and limited to 15 rows.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC LIMIT 15;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, and ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the names and IDs of staff members who are active,"belong to a specific organization, and have been updated in the last 3 months.,SELECT full_name, id FROM staff_directory WHERE is_active = 1 AND org_id = 123 AND updated_at >= NOW() - INTERVAL '3 months';"
Find assets that are active,"belong to a specific organization, have a specific asset type ID, and have a serial number starting with 'ABC'.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND serial_number LIKE 'ABC%';"
"Get hazards with a description containing the word ""fire"" and created in the last 6 months","ordered by their created dates in descending order.,SELECT * FROM hazards WHERE description LIKE '%fire%' AND created_at >= NOW() - INTERVAL '6 months' ORDER BY created_at DESC;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones with a specific name.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND name NOT LIKE '%Admin%';"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 10 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 10;"
Retrieve events created by a specific user,"organization ID, and closed within the last month, ordered by the event type ID in ascending order, and limited to 20 rows.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '1 month' ORDER BY events_type_id ASC LIMIT 20;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order, and limited to 15 rows.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC LIMIT 15;"
Retrieve the user IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Retrieve the full names of staff members who have an official user ID.,SELECT full_name FROM staff_directory WHERE official_user_id IS NOT NULL;
Find assets that have been updated in the last 7 days.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS;
Get hazards with a description longer than 100 characters.,SELECT * FROM hazards WHERE LENGTH(description) > 100;
Retrieve the names and orders of event staff roles in alphabetical order.,"SELECT name, `order` FROM event_staff_roles ORDER BY name ASC;"
Find event actions that were updated by a specific user.,SELECT * FROM event_actions WHERE updated_by = 123;
Get form settings summary tools for a specific organization ID.,SELECT * FROM formsettings_summarytools WHERE organization_id = 456;
Retrieve events that are still open.,SELECT * FROM events WHERE is_open = 1;
Find users with a specific type and created after a certain date.,SELECT * FROM users WHERE type = 'admin' AND date_created > '2023-01-01';
Get organizations located in a specific city.,SELECT * FROM organizations WHERE city = 'New York';
Retrieve pharmacies that were activated by a specific user.,SELECT * FROM pharmacies WHERE activated_by = 123;
Find assets that are currently active and have a serial number starting with 'ABC'.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE 'ABC%';
Get hazards created in the last 30 days and belong to a specific organization.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAYS AND organizations_id = 789;
Retrieve the names and IDs of staff members ordered by their full names in ascending order.,"SELECT full_name, id FROM staff_directory ORDER BY full_name ASC;"
Find assets with a specific asset item ID and belong to a specific organization.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456;
"Get hazards with a description containing the word ""safety"" and created in the last 6 months.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS;
Retrieve all event staff roles with a specific order.,SELECT * FROM event_staff_roles WHERE `order` = 1;
Find event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456;
Get form settings summary tools for a specific form ID and updated by a specific user.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123;
Retrieve events that have a specific event type ID and created by a specific user.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456;
Find users with a specific profile ID and active status.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1;
Get organizations created after a certain date and located in a specific country.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123;
Retrieve pharmacies with a specific organization ID and created before a certain date.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01';
Find assets that were updated in the last 7 days and belong to a specific organization.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123;
Get hazards with a description shorter than 50 characters and created by a specific pharmacy.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456;
Retrieve the names and orders of event staff roles ordered by their orders in descending order.,"SELECT name, `order` FROM event_staff_roles ORDER BY `order` DESC;"
Find event actions that were updated by a specific user and created after a certain date.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01';
Get form settings summary tools for a specific facility ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456;
Retrieve events that are still open and created by a specific user.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123;
Find users with a specific type and created between two dates.,SELECT * FROM users WHERE type = 'admin' AND date_created BETWEEN '2023-01-01' AND '2023-01-31';
Get organizations located in a specific city and created after a certain date.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01';
Retrieve pharmacies that were activated by a specific user and created before a certain date.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01';
Find assets that are currently active and have a serial number ending with 'XYZ'.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ';
Get hazards created in the last 30 days and have a specific organization ID.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAYS AND organizations_id = 123;
Retrieve the names and IDs of staff members ordered by their IDs in ascending order.,"SELECT full_name, id FROM staff_directory ORDER BY id ASC;"
Find assets with a specific asset item ID,"belong to a specific organization, and have a certain serial number.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ';"
"Get hazards with a description containing the word ""safety"" and created in the last 6 months","ordered by their names in ascending order.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC;"
Retrieve all event staff roles with a specific order and form ID.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123;
Find event actions for a specific event ID,"user ID, and action date within a specific date range.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31';"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW();"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789;"
Retrieve the names and orders of event staff roles ordered by their names in descending order.,"SELECT name, `order` FROM event_staff_roles ORDER BY name DESC;"
Find event actions that were updated by a specific user,"created after a certain date, and belong to a specific event.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01' AND events_id = 456;"
Get form settings summary tools for a specific facility ID,"organization ID, and updated by a specific user.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456 AND updated_by = 789;"
Retrieve events that are still open,"created by a specific user, and closed within the last week.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123 AND date_closed >= NOW() - INTERVAL '7 days';"
Find users with a specific type,"active status, and created between two dates, ordered by their full names in ascending order.,SELECT * FROM users WHERE type = 'admin' AND active = 1 AND date_created BETWEEN '2023-01-01' AND '2023-01-31' ORDER BY full_name ASC;"
Get organizations located in a specific city,"created after a certain date, and have a trial end date in the future.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01' AND trial_ends_at > NOW();"
Retrieve pharmacies that were activated by a specific user,"created before a certain date, and disabled after a certain date.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01' AND date_disabled > '2023-01-01';"
Find assets that are currently active,"have a serial number ending with 'XYZ', and belong to a specific organization.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ' AND organizations_id = 123;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS AND pharmacies_id = 789;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order.,"SELECT full_name, id FROM staff_directory ORDER BY id DESC;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC;"
Retrieve the names and orders of event staff roles ordered by their names in descending order,"and limited to 10 rows.,SELECT name, `order` FROM event_staff_roles ORDER BY name DESC LIMIT 10;"
Find event actions that were updated by a specific user,"created after a certain date, and belong to a specific event, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01' AND events_id = 456 ORDER BY action_date DESC;"
Get form settings summary tools for a specific facility ID,"organization ID, and updated by a specific user, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456 AND updated_by = 789 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that are still open,"created by a specific user, and closed within the last week, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific type,"active status, and created between two dates, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE type = 'admin' AND active = 1 AND date_created BETWEEN '2023-01-01' AND '2023-01-31' ORDER BY full_name ASC LIMIT 30;"
Get organizations located in a specific city,"created after a certain date, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01' AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies that were activated by a specific user,"created before a certain date, and disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01' AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Find assets that are currently active,"have a serial number ending with 'XYZ', and belong to a specific organization, ordered by their asset items ID in ascending order.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ' AND organizations_id = 123 ORDER BY asset_items_id ASC;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, and belong to a specific pharmacy, ordered by their created dates in descending order.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS AND pharmacies_id = 789 ORDER BY created_at DESC;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 20 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 20;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC;"
Retrieve the staff directory for user_id '12345'.,SELECT * FROM staff_directory WHERE user_id = '12345';
Get the assets with an active status.,SELECT * FROM assets WHERE active = true;
Find hazards associated with pharmacies_id '9876'.,SELECT * FROM hazards WHERE pharmacies_id = '9876';
Get the event staff roles with the default flag set.,SELECT * FROM event_staff_roles WHERE is_default = true;
Retrieve event actions performed by user_id '5678'.,SELECT * FROM event_actions WHERE user_id = '5678';
Find form settings summary tools for facility_id '2468' and organization_id '1357'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '2468' AND organization_id = '1357';
Retrieve users with active status and updated after '2023-01-01'.,SELECT * FROM users WHERE active = true AND date_updated > '2023-01-01';
Find organizations located in the city 'New York'.,SELECT * FROM organizations WHERE city = 'New York';
Get pharmacies activated by 'Pharmacist A'.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist A';
Retrieve the staff directory for full_name 'John Smith'.,SELECT * FROM staff_directory WHERE full_name = 'John Smith';
Get hazards with the name 'Fire Hazard'.,SELECT * FROM hazards WHERE name = 'Fire Hazard';
Retrieve the event staff roles with the forms_id '456'.,SELECT * FROM event_staff_roles WHERE forms_id = '456';
Get event actions for events_id '789'.,SELECT * FROM event_actions WHERE events_id = '789';
Find form settings summary tools for organization_id '987' and facility_id '654'.,SELECT * FROM formsettings_summarytools WHERE organization_id = '987' AND facility_id = '654';
Get events reported by user_id '321'.,SELECT * FROM events WHERE reporters_id = '321';
Retrieve users of type 'Admin'.,SELECT * FROM users WHERE type = 'Admin';
Find organizations created after '2023-01-01'.,SELECT * FROM organizations WHERE created_at > '2023-01-01';
Get pharmacies in the city 'Los Angeles'.,SELECT * FROM pharmacies WHERE city = 'Los Angeles';
Retrieve the staff directory for user_id '54321'.,SELECT * FROM staff_directory WHERE user_id = '54321';
Find assets with asset_type_id '123'.,SELECT * FROM assets WHERE asset_type_id = '123';
Get hazards associated with pharmacies_id '65432'.,SELECT * FROM hazards WHERE pharmacies_id = '65432';
Get event actions performed by user_id '87654'.,SELECT * FROM event_actions WHERE user_id = '87654';
Find form settings summary tools for facility_id '23456' and organization_id '54321'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '23456' AND organization_id = '54321';
Retrieve users with active status and updated after '2023-03-01'.,SELECT * FROM users WHERE active = true AND date_updated > '2023-03-01';
Find organizations located in the city 'Seattle'.,SELECT * FROM organizations WHERE city = 'Seattle';
Get pharmacies activated by 'Pharmacist B'.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist B';
Retrieve the staff directory for user_id '98765'.,SELECT * FROM staff_directory WHERE user_id = '98765';
Get hazards associated with pharmacies_id '56789'.,SELECT * FROM hazards WHERE pharmacies_id = '56789';
Get event actions performed by user_id '45678'.,SELECT * FROM event_actions WHERE user_id = '45678';
Find form settings summary tools for facility_id '98765' and organization_id '87654'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '98765' AND organization_id = '87654';
Retrieve users with active status and updated after '2023-06-01'.,SELECT * FROM users WHERE active = true AND date_updated > '2023-06-01';
Find organizations located in the city 'San Francisco'.,SELECT * FROM organizations WHERE city = 'San Francisco';
Get pharmacies activated by 'Pharmacist C'.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist C';
Retrieve the staff directory for employee_id 'ABCDE'.,SELECT * FROM staff_directory WHERE employee_id = 'ABCDE';
Get the assets with asset_items_id '123456'.,SELECT * FROM assets WHERE asset_items_id = '123456';
Find hazards with a description containing the word 'explosive'.,SELECT * FROM hazards WHERE description LIKE '%explosive%';
Get the event staff roles with the order greater than 5.,"SELECT * FROM event_staff_roles WHERE ""order"" > 5;"
Retrieve event actions performed by user_id '98765' and user_pharmacy_id '54321'.,SELECT * FROM event_actions WHERE user_id = '98765' AND user_pharmacy_id = '54321';
Find form settings summary tools for facility_id '2468' or organization_id '1357'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '2468' OR organization_id = '1357';
Get events where the harmt is not null or prescribers_id is not null.,SELECT * FROM events WHERE harmt IS NOT NULL OR prescribers_id IS NOT NULL;
Retrieve users with active status and updated between '2023-01-01' and '2023-06-30'.,SELECT * FROM users WHERE is_active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Find organizations located in countries_id 10 or 15.,"SELECT * FROM organizations WHERE countries_id IN (10, 15);"
Get pharmacies activated after '2023-01-01' and activated_by 'Pharmacist X'.,SELECT * FROM pharmacies WHERE activate_at > '2023-01-01' AND activated_by = 'Pharmacist X';
Retrieve the staff directory for full_name 'Jane Doe' and fixed is true.,SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' AND fixed = true;
Find assets with an active status and updated between '2023-01-01' and '2023-06-30'.,SELECT * FROM assets WHERE active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Get hazards with the name starting with 'Chemical'.,SELECT * FROM hazards WHERE name LIKE 'Chemical%';
Retrieve the event staff roles with the forms_id '789' and facility_id '654'.,SELECT * FROM event_staff_roles WHERE forms_id = '789' AND facility_id = '654';
Get event actions for events_id '987' and updated_by 'John Smith'.,SELECT * FROM event_actions WHERE events_id = '987' AND updated_by = 'John Smith';
Find form settings summary tools for organization_id '543' and updated_by 'Jane Doe'.,SELECT * FROM formsettings_summarytools WHERE organization_id = '543' AND updated_by = 'Jane Doe';
Get events reported by user_id '321' and harmt is not null.,SELECT * FROM events WHERE reporters_id = '321' AND harmt IS NOT NULL;
Retrieve users with type 'Admin' and active status is true.,SELECT * FROM users WHERE type = 'Admin' AND is_active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Find organizations created after '2023-01-01' and updated before '2023-06-30'.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND updated_at < '2023-06-30';
Get pharmacies in the city 'Los Angeles' and daye_enabled is not null.,SELECT * FROM pharmacies WHERE city = 'Los Angeles' AND daye_enabled IS NOT NULL;
Retrieve the staff directory for user_id '54321' and created_at is not null.,SELECT * FROM staff_directory WHERE user_id = '54321' AND created_at IS NOT NULL;
Find assets with asset_type_id '789' and serial_number is not null.,SELECT * FROM assets WHERE asset_type_id = '789' AND serial_number IS NOT NULL;
Get hazards associated with pharmacies_id '65432' and description is not empty.,SELECT * FROM hazards WHERE pharmacies_id = '65432' AND description <> '';
Retrieve the event staff roles with the default flag set and order is not null.,"SELECT * FROM event_staff_roles WHERE is_default = true AND ""order"" IS NOT NULL;"
Get event actions performed by user_id '87654' and updated_at is not null.,SELECT * FROM event_actions WHERE user_id = '87654' AND updated_at IS NOT NULL;
Find form settings summary tools for facility_id '23456' or organization_id '54321'.,SELECT * FROM formsettings_summarytools WHERE (facility_id = '23456' OR organization_id = '54321') AND tools_id IS NOT NULL;
Get events where the harmt is not null or prescribers_id is not null and is_open is true.,SELECT * FROM events WHERE (harmt IS NOT NULL OR prescribers_id IS NOT NULL) AND is_open = true AND date_created IS NOT NULL;
Retrieve users with active status and updated after '2023-03-01' and type is not null.,SELECT * FROM users WHERE is_active = true AND updated_at > '2023-03-01' AND type IS NOT NULL;
Find organizations located in the city 'Seattle' and trial_ends_at is not null.,SELECT * FROM organizations WHERE city = 'Seattle' AND trial_ends_at IS NOT NULL;
Get pharmacies activated by 'Pharmacist B' and activate_at is not null.,SELECT * FROM pharmacies WHERE activate_at > '2023-01-01' AND activated_by = 'Pharmacist B';
Retrieve the staff directory for user_id '98765' and locum_full_name is not empty.,SELECT * FROM staff_directory WHERE user_id = '98765' AND locum_full_name <> '';
Find assets with an active status and created_at is not null.,SELECT * FROM assets WHERE active = true AND created_at IS NOT NULL;
Get hazards with the name 'Chemical Spill' and updated_at is not null.,SELECT * FROM hazards WHERE name = 'Chemical Spill' AND updated_at IS NOT NULL;
Retrieve the event staff roles with the forms_id '654' and updates_by is not null.,SELECT * FROM event_staff_roles WHERE forms_id = '654' AND updates_by IS NOT NULL;
Get event actions for events_id '321' and action_date is not null.,SELECT * FROM event_actions WHERE events_id = '321' AND action_date IS NOT NULL;
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '876' AND facility_id = '543' AND updated_by IS NOT NULL;
Get events reported by user_id '987' and date_created is not null.,SELECT * FROM events WHERE reporters_id = '987' AND date_created IS NOT NULL;
Retrieve users of type 'User' and date_updated is not null.,SELECT * FROM users WHERE type = 'User' AND date_updated IS NOT NULL;
Find organizations created after '2023-02-01' and countries_id is not null.,SELECT * FROM organizations WHERE created_at > '2023-02-01' AND countries_id IS NOT NULL;
Get pharmacies in the city 'Chicago' and created_at is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL;
Retrieve the staff directory for user_id '13579' and official_user_id is not null.,SELECT * FROM staff_directory WHERE user_id = '13579' AND official_user_id IS NOT NULL;
Find assets with an active status and updated_at is not null.,SELECT * FROM assets WHERE active = true AND updated_at IS NOT NULL;
Get hazards associated with pharmacies_id '43210' and created_at is not null.,SELECT * FROM hazards WHERE pharmacies_id = '43210' AND created_at IS NOT NULL;
Retrieve the event staff roles with the default flag set and forms_id is not null.,SELECT * FROM event_staff_roles WHERE is_default = true AND forms_id IS NOT NULL;
Get event actions performed by user_id '65432' and updated_at is not null.,SELECT * FROM event_actions WHERE user_id = '65432' AND updated_at IS NOT NULL;
Find form settings summary tools for facility_id '54321' and organization_id '87654' and tools_id is not null.,SELECT * FROM formsettings_summarytools WHERE facility_id = '54321' AND organization_id = '87654' AND tools_id IS NOT NULL;
Get events where the harmt is not null or prescribers_id is not null and is_open is true and date_created is not null.,SELECT * FROM events WHERE (harmt IS NOT NULL OR prescribers_id IS NOT NULL) AND is_open = true AND date_created IS NOT NULL AND date_closed IS NOT NULL;
Retrieve users with active status and updated after '2023-04-01' and updated_at is not null.,SELECT * FROM users WHERE is_active = true AND updated_at > '2023-04-01' AND updated_at IS NOT NULL;
Find organizations located in the city 'Denver' and trial_ends_at is not null.,SELECT * FROM organizations WHERE city = 'Denver' AND trial_ends_at IS NOT NULL;
Get pharmacies activated by 'Pharmacist D' and activate_at is not null.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist D' AND activate_at IS NOT NULL;
Retrieve the staff directory for user_id '97531' and employee_id is not null.,SELECT * FROM staff_directory WHERE user_id = '97531' AND employee_id IS NOT NULL;
Find assets with an active status and serial_number is not empty.,SELECT * FROM assets WHERE active = true AND serial_number <> '';
Get hazards with the name 'Chemical Spill' and description is not empty.,SELECT * FROM hazards WHERE name = 'Chemical Spill' AND description <> '';
Retrieve the event staff roles with the forms_id '654' and order is not null.,"SELECT * FROM event_staff_roles WHERE forms_id = '654' AND ""order"" IS NOT NULL;"
Get event actions for events_id '321' and action_date is not null and date_done is not null.,SELECT * FROM event_actions WHERE events_id = '321' AND action_date IS NOT NULL AND date_done IS NOT NULL;
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null and updated_at is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '876' AND facility_id = '543' AND updated_by IS NOT NULL AND updated_at IS NOT NULL;
Get events reported by user_id '987' and date_created is not null and updated_by is not null.,SELECT * FROM events WHERE reporters_id = '987' AND date_created IS NOT NULL AND updated_by IS NOT NULL AND harmt IS NOT NULL;
Retrieve users of type 'User' and active status is true and date_created is not null.,SELECT * FROM users WHERE type = 'User' AND is_active = true AND date_created IS NOT NULL AND sf_id IS NOT NULL;
Find organizations created after '2023-02-01' and countries_id is not null and trial_ends_at is not null.,SELECT * FROM organizations WHERE created_at > '2023-02-01' AND countries_id IS NOT NULL AND trial_ends_at IS NOT NULL AND name <> '';
Get pharmacies in the city 'Chicago' and created_at is not null and activated_by is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL AND activated_by IS NOT NULL;
Retrieve the staff directory for user_id '13579' and official_user_id is not null and fixed is true.,SELECT * FROM staff_directory WHERE user_id = '13579' AND official_user_id IS NOT NULL AND fixed = true;
Find assets with an active status and updated_at is not null and asset_type_id is not null.,SELECT * FROM assets WHERE active = true AND updated_at IS NOT NULL AND asset_type_id IS NOT NULL;
Get hazards associated with pharmacies_id '43210' and created_at is not null and pharmacies_id is not null.,SELECT * FROM hazards WHERE pharmacies_id = '43210' AND created_at IS NOT NULL AND pharmacies_id IS NOT NULL;
Retrieve the event staff roles with the default flag set and forms_id is not null and facility_id is not null.,SELECT * FROM event_staff_roles WHERE is_default = true AND forms_id IS NOT NULL AND facility_id IS NOT NULL;
Get event actions performed by user_id '65432' and updated_at is not null and user_pharmacy_id is not null.,SELECT * FROM event_actions WHERE user_id = '65432' AND updated_at IS NOT NULL AND user_pharmacy_id IS NOT NULL;
Find form settings summary tools for facility_id '54321' and organization_id '87654' and tools_id is not null and updated_by is not null.,SELECT * FROM formsettings_summarytools WHERE facility_id = '54321' AND organization_id = '87654' AND tools_id IS NOT NULL AND updated_by IS NOT NULL;
Get events where the harmt is not null or prescribers_id is not null and is_open is true and date_created is not null and date_closed is not null.,SELECT * FROM events WHERE (harmt IS NOT NULL OR prescribers_id IS NOT NULL) AND is_open = true AND date_created IS NOT NULL AND date_closed IS NOT NULL;
Retrieve users with active status and updated after '2023-04-01' and updated_at is not null and date_updated is not null.,SELECT * FROM users WHERE is_active = true AND updated_at > '2023-03-01' AND type IS NOT NULL AND date_updated IS NOT NULL;
Find organizations located in the city 'Denver' and trial_ends_at is not null and countries_id is not null.,SELECT * FROM organizations WHERE city = 'Seattle' AND trial_ends_at IS NOT NULL AND countries_id IS NOT NULL;
Get pharmacies activated by 'Pharmacist D' and activate_at is not null and activated_by is not null.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist B' AND activate_at IS NOT NULL;
Retrieve the staff directory for user_id '97531' and employee_id is not null and full_name is not empty.,SELECT * FROM staff_directory WHERE user_id = '98765' AND created_at IS NOT NULL;
Find assets with an active status and serial_number is not empty and asset_type_id is not null.,SELECT * FROM assets WHERE asset_type_id = '789' AND serial_number IS NOT NULL;
Get hazards with the name 'Chemical Spill' and description is not empty and pharmacies_id is not null.,SELECT * FROM hazards WHERE pharmacies_id = '65432' AND description <> '';
Retrieve the event staff roles with the forms_id '654' and order is not null and name is not empty.,SELECT * FROM event_staff_roles WHERE forms_id = '654' AND order IS NOT NULL;
Get event actions for events_id '321' and action_date is not null and date_done is not null and updated_by is not null.,SELECT * FROM event_actions WHERE events_id = '987' AND updated_by = 'John Smith';
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null and tools_id is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '543' AND updated_by = 'Jane Doe';
Get events reported by user_id '987' and date_created is not null and updated_by is not null and harmt is not null.,SELECT * FROM events WHERE reporters_id = '321' AND harmt IS NOT NULL;
Retrieve users of type 'User' and active status is true and date_created is not null and sf_id is not null.,SELECT * FROM users WHERE type = 'Admin' AND is_active = true;
Find organizations created after '2023-02-01' and countries_id is not null and trial_ends_at is not null and name is not empty.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND updated_at < '2023-06-30';
Get pharmacies in the city 'Chicago' and created_at is not null and activated_by is not null and organizations_id is not null.,SELECT * FROM pharmacies WHERE city = 'Los Angeles' AND daye_enabled IS NOT NULL;
Retrieve the staff directory for user_id '13579' and official_user_id is not null and fixed is true and full_name is not empty.,SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' AND fixed = true;
Find assets with an active status and updated_at is not null and asset_type_id is not null and asset_items_id is not null.,SELECT * FROM assets WHERE active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Get hazards associated with pharmacies_id '43210' and created_at is not null and pharmacies_id is not null and name is not empty.,SELECT * FROM hazards WHERE name LIKE 'Chemical%';
Retrieve the event staff roles with the default flag set and forms_id is not null and facility_id is not null and order is not null.,SELECT * FROM event_staff_roles WHERE forms_id = '789' AND facility_id = '654';
Get event actions performed by user_id '65432' and updated_at is not null and user_pharmacy_id is not null and action_date is not null.,SELECT * FROM event_actions WHERE events_id = '987' AND updated_by = 'John Smith';
Find form settings summary tools for facility_id '54321' and organization_id '87654' and tools_id is not null and updated_by is not null and forms_id is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '543' AND updated_by = 'Jane Doe';
Get events where the harmt is not null or prescribers_id is not null and is_open is true and date_created is not null and date_closed is not null and users_fullname is not empty.,SELECT * FROM events WHERE reporters_id = '321' AND harmt IS NOT NULL;
Retrieve users with active status and updated after '2023-04-01' and updated_at is not null and date_updated is not null and profiles_id is not null.,SELECT * FROM users WHERE type = 'User' AND is_active = true;
Find organizations located in the city 'Denver' and trial_ends_at is not null and countries_id is not null and name is not empty and address is not empty.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND updated_at < '2023-06-30';
Get pharmacies activated by 'Pharmacist D' and activate_at is not null and activated_by is not null and date_disabled is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL;
Retrieve the staff directory for user_id '97531' and employee_id is not null and full_name is not empty and official_user_id is not null.,SELECT * FROM staff_directory WHERE user_id = '13579' AND official_user_id IS NOT NULL;
Find assets with an active status and serial_number is not empty and asset_type_id is not null and created_at is not null.,SELECT * FROM assets WHERE active = true AND updated_at IS NOT NULL;
Get hazards with the name 'Chemical Spill' and description is not empty and pharmacies_id is not null and updated_at is not null.,SELECT * FROM hazards WHERE pharmacies_id = '43210' AND created_at IS NOT NULL;
Retrieve the event staff roles with the forms_id '654' and order is not null and name is not empty and facility_id is not null.,SELECT * FROM event_staff_roles WHERE forms_id = '654' AND updates_by IS NOT NULL;
Get event actions for events_id '321' and action_date is not null and date_done is not null and updated_by is not null and date_created is not null.,SELECT * FROM event_actions WHERE events_id = '321' AND action_date IS NOT NULL;
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null and tools_id is not null and facility_id is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '876' AND facility_id = '543' AND updated_by IS NOT NULL;
Get events reported by user_id '987' and date_created is not null and updated_by is not null and harmt is not null and organization_id is not null.,SELECT * FROM events WHERE reporters_id = '987' AND date_created IS NOT NULL;
Retrieve users of type 'User' and active status is true and date_created is not null and sf_id is not null and roles_id is not null.,SELECT * FROM users WHERE type = 'User' AND date_updated IS NOT NULL;
Find organizations created after '2023-02-01' and countries_id is not null and trial_ends_at is not null and name is not empty and updated_at is not null.,SELECT * FROM organizations WHERE created_at > '2023-02-01' AND countries_id IS NOT NULL;
Get pharmacies in the city 'Chicago' and created_at is not null and activated_by is not null and organizations_id is not null and updated_at is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL;
Retrieve the staff directory for employees with IDs starting with 'EMP-'.,SELECT * FROM staff_directory WHERE employee_id LIKE 'EMP-%';
Get the assets that have been recently updated.,SELECT * FROM assets WHERE updated_at > (CURRENT_TIMESTAMP - INTERVAL 1 DAY);
Find hazards related to pharmacies with names containing the word 'Healthcare'.,SELECT * FROM hazards WHERE pharmacies_id IN (SELECT pharmacies_id FROM pharmacies WHERE name LIKE '%Healthcare%');
Get the event staff roles with names ending in 'Coordinator'.,SELECT * FROM event_staff_roles WHERE name LIKE '%Coordinator';
Retrieve event actions performed by users who have the role of 'Supervisor' in their profile.,SELECT * FROM event_actions WHERE user_id IN (SELECT user_id FROM users WHERE profiles_id IN (SELECT profiles_id FROM profiles WHERE role = 'Supervisor'));
Find form settings summary tools for facilities located in cities starting with 'S'.,SELECT * FROM formsettings_summarytools WHERE facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'S%');
Get events that involve multiple harm types and are reported by users with the 'Admin' role.,SELECT * FROM events WHERE harmt IS NOT NULL AND reporters_id IN (SELECT users_id FROM users WHERE profiles_id IN (SELECT profiles_id FROM profiles WHERE role = 'Admin'));
Retrieve users with active status and last updated on weekends.,"SELECT * FROM users WHERE is_active = 1 AND DAYOFWEEK(updated_at) IN (1, 7);"
Find organizations that are operating in multiple countries.,SELECT * FROM organizations WHERE sf_id IN (SELECT sf_id FROM organizations GROUP BY sf_id HAVING COUNT(DISTINCT countries_id) > 1);
Get pharmacies activated by users with names containing 'Pharma' and located in cities starting with 'P'.,SELECT * FROM pharmacies WHERE activated_by LIKE '%Pharma%' AND organizations_id IN (SELECT organizations_id FROM organizations WHERE address LIKE 'P%');
Retrieve the staff directory for users whose full names contain both 'John' and 'Doe'.,SELECT * FROM staff_directory WHERE full_name LIKE '%John%' AND full_name LIKE '%Doe%';
Find assets with the highest value in their asset_items_id.,SELECT * FROM assets WHERE asset_items_id IN (SELECT MAX(asset_items_id) FROM assets);
Get hazards associated with pharmacies that have the highest number of reported incidents.,SELECT * FROM hazards WHERE pharmacies_id IN (SELECT pharmacies_id FROM pharmacies GROUP BY pharmacies_id ORDER BY COUNT(*) DESC LIMIT 1);
Retrieve the event staff roles with the most number of forms associated with them.,SELECT * FROM event_staff_roles WHERE forms_id IN (SELECT forms_id FROM event_staff_roles GROUP BY forms_id ORDER BY COUNT(*) DESC);
Find event actions that were performed during weekends.,"SELECT * FROM event_actions WHERE WEEKDAY(action_date) IN (5, 6);"
Get form settings summary tools for organizations with names containing 'Institute' and facilities located in cities starting with 'M'.,SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE name LIKE '%Institute%') AND facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'M%');
Retrieve events where the harmt value is the same as the prescribers_id value.,SELECT * FROM events WHERE harmt = prescribers_id;
Find users who have the same date of creation and update.,SELECT * FROM users WHERE DATE(date_created) = DATE(updated_at);
Get organizations located in countries that have more than one trial ending date.,SELECT * FROM organizations WHERE trial_ends_at IN (SELECT trial_ends_at FROM organizations GROUP BY trial_ends_at HAVING COUNT(*) > 1);
Retrieve pharmacies that were activated on a specific date by users with the same initials as the pharmacy's name.,"SELECT * FROM pharmacies WHERE activate_at = 'specific_date' AND activated_by = SUBSTRING(name, 1, 2);"
Find the staff directory for users whose IDs are palindromes.,SELECT * FROM staff_directory WHERE employee_id = REVERSE(employee_id);
Get assets with serial numbers containing a sequence of three consecutive numbers.,SELECT * FROM assets WHERE serial_number REGEXP '[0-9]{3}';
Retrieve hazards with descriptions that include at least three different colors.,SELECT * FROM hazards WHERE description LIKE '%color1%' OR description LIKE '%color2%' OR description LIKE '%color3%';
Find event staff roles that have the same order as their respective forms_id.,SELECT * FROM event_staff_roles WHERE order = forms_id;
Get event actions performed by users who have the same user_pharmacy_id as their user_id.,SELECT * FROM event_actions WHERE user_id = user_pharmacy_id;
Retrieve form settings summary tools for organizations with the most recent updates and facilities with the oldest updates.,SELECT * FROM formsettings_summarytools WHERE updated_at IN (SELECT MAX(updated_at) FROM formsettings_summarytools) UNION SELECT * FROM formsettings_summarytools WHERE updated_at IN (SELECT MIN(updated_at) FROM formsettings_summarytools);
Find events where the harmt and prescribers_id values have the same number of digits.,SELECT * FROM events WHERE LENGTH(harmt) = LENGTH(prescribers_id);
Get users who have updated their profiles at least twice within a week.,"SELECT * FROM users WHERE updated_at >= (SELECT DATE_SUB(NOW(), INTERVAL 1 WEEK)) GROUP BY user_id HAVING COUNT(DISTINCT DATE(updated_at)) >= 2;"
Retrieve organizations that have the same trial_ends_at date as their creation date.,SELECT * FROM organizations WHERE trial_ends_at = DATE(created_at);
Find pharmacies in cities where the number of enabled pharmacies is greater than the number of disabled pharmacies.,SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) > (SELECT COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL);
Get the staff directory for users with the longest full names.,SELECT * FROM staff_directory WHERE LENGTH(full_name) = (SELECT MAX(LENGTH(full_name)) FROM staff_directory);
Retrieve assets that have been updated in the last 24 hours and have serial numbers with alternating letters and numbers.,SELECT * FROM assets WHERE updated_at > (CURRENT_TIMESTAMP - INTERVAL 1 DAY) AND serial_number REGEXP '([A-Za-z0-9]{2})+';
Find hazards with descriptions that mention a specific industry keyword.,SELECT * FROM hazards WHERE description LIKE '%industry_keyword%';
Get event staff roles with names containing the word 'Lead' and order values in descending order.,SELECT * FROM event_staff_roles WHERE name LIKE '%Lead%' ORDER BY order DESC;
Retrieve event actions performed by users whose user_pharmacy_id is an anagram of their user_id.,"SELECT * FROM event_actions WHERE WEEKDAY(action_date) IN (5, 6) AND date_done IS NOT NULL;"
Find form settings summary tools for organizations that have updated their facilities after updating their tools.,SELECT * FROM formsettings_summarytools WHERE facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'M%') AND updated_by IN (SELECT name FROM organizations WHERE name LIKE '%Institute%');
Get events where the harmt value is a prime number.,SELECT * FROM events WHERE harmt = prescribers_id AND harmt IS NOT NULL;
Retrieve users who have updated their profiles on the same day they were created.,SELECT * FROM users WHERE DATE(date_created) = DATE(updated_at) AND sf_id = updated_at;
Find organizations located in countries with the longest trial_ends_at duration.,SELECT * FROM organizations WHERE trial_ends_at IN (SELECT trial_ends_at FROM organizations GROUP BY trial_ends_at HAVING MAX(trial_ends_at) - MIN(trial_ends_at) = (SELECT MAX(trial_ends_at) - MIN(trial_ends_at) FROM organizations));
Get pharmacies activated by users with the shortest names.,SELECT * FROM pharmacies WHERE LENGTH(activated_by) = (SELECT MIN(LENGTH(activated_by)) FROM pharmacies);
Retrieve the staff directory for users whose full names have the same number of characters as their employee_id.,SELECT * FROM staff_directory WHERE LENGTH(full_name) = LENGTH(employee_id);
Find assets with serial numbers that form a palindrome.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number);
Get hazards with descriptions that contain at least three different animal names.,SELECT * FROM hazards WHERE description LIKE '%animal1%' OR description LIKE '%animal2%' OR description LIKE '%animal3%';
Retrieve event staff roles with names that contain the word 'Master' and have order values in ascending order.,SELECT * FROM event_staff_roles WHERE name LIKE '%Master%' ORDER BY order ASC;
Find event actions performed by users who have the same user_id and user_pharmacy_id.,SELECT * FROM event_actions WHERE user_id = user_pharmacy_id AND user_id IS NOT NULL;
"Get form settings summary tools for organizations that have updated their facilities after updating their tools, and the updated_by value is the same as the organization name.",SELECT * FROM formsettings_summarytools WHERE facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'M%') AND updated_by = (SELECT name FROM organizations WHERE name = updated_by);
Retrieve events where the harmt value is a perfect square.,SELECT * FROM events WHERE harmt = ROUND(SQRT(harmt));
Find users who have updated their profiles on the same day of the week they were created.,SELECT * FROM users WHERE WEEKDAY(date_created) = WEEKDAY(updated_at);
Get organizations that have the same trial_ends_at date as their updated_at date.,SELECT * FROM organizations WHERE trial_ends_at = updated_at;
Retrieve pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies.,SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) = (SELECT COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL);
Find the staff directory for users whose IDs contain a repeating pattern of characters.,SELECT * FROM staff_directory WHERE employee_id REGEXP '(.+)\1';
Get assets with serial numbers that include the user_id of the user who last updated them.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', (SELECT user_id FROM users ORDER BY updated_at DESC LIMIT 1), '%');"
Retrieve hazards with descriptions that mention specific weather conditions.,SELECT * FROM hazards WHERE description LIKE '%weather_condition1%' OR description LIKE '%weather_condition2%' OR description LIKE '%weather_condition3%';
Find event staff roles with names that include the word 'Expert' and have order values in a Fibonacci sequence.,"SELECT * FROM event_staff_roles WHERE name LIKE '%Expert%' ORDER BY FIELD(order, 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89);"
Get event actions performed by users whose user_pharmacy_id is a palindrome.,SELECT * FROM event_actions WHERE user_pharmacy_id = REVERSE(user_id);
Retrieve form settings summary tools for organizations where the tools_id is a prime number and the updated_by value contains the word 'Admin'.,"SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE tools_id IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29) AND updated_by LIKE '%Admin%');"
Find events where the harmt and prescribers_id values have the same digits but in a different order.,SELECT * FROM events WHERE harmt = prescribers_id AND harmt != prescribers_id;
Get users who have updated their profiles on a day that is a multiple of their sf_id.,SELECT * FROM users WHERE DAY(updated_at) % sf_id = 0;
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates.,"SELECT * FROM organizations WHERE trial_ends_at = DATE_ADD(created_at, INTERVAL updated_at DAY);"
Find pharmacies in cities where the number of enabled pharmacies is a prime number.,"SELECT * FROM pharmacies WHERE (SELECT COUNT(*) FROM pharmacies WHERE daye_enabled IS NOT NULL) IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);"
Get the staff directory for users whose full names contain a repeating sequence of three letters.,SELECT * FROM staff_directory WHERE full_name REGEXP '([A-Za-z]{3})\1\1';
Retrieve assets that have the same asset_type_id as their asset_items_id.,SELECT * FROM assets WHERE asset_type_id = asset_items_id;
Find hazards with descriptions that mention at least three different types of plants.,SELECT * FROM hazards WHERE description LIKE '%plant1%' OR description LIKE '%plant2%' OR description LIKE '%plant3%';
Get event staff roles with names that include the word 'Ninja' and have order values in descending prime order.,SELECT * FROM event_staff_roles WHERE name LIKE '%Ninja%' ORDER BY order DESC;
Retrieve event actions performed by users whose user_id is a multiple of their user_pharmacy_id.,SELECT * FROM event_actions WHERE user_id % user_pharmacy_id = 0;
Find form settings summary tools for organizations where the tools_id is a perfect square and the updated_by value is a palindrome.,"SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE tools_id IN (1, 4, 9, 16, 25, 36, 49, 64, 81) AND updated_by = REVERSE(updated_by));"
Get events where the harmt value is a multiple of the prescribers_id value.,SELECT * FROM events WHERE harmt % prescribers_id = 0;
Retrieve users who have updated their profiles on a day that is a power of 2.,"SELECT * FROM users WHERE DAY(updated_at) = POWER(2, sf_id);"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(DATE(created_at), DATE(updated_at));"
"Get pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies, and the city name is a palindrome.",SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) = (SELECT COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL) AND city = REVERSE(city);
Retrieve the staff directory for users whose IDs are prime numbers.,"SELECT * FROM staff_directory WHERE employee_id IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);"
Find assets with serial numbers that include the user_id of the user who created them.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', (SELECT user_id FROM users ORDER BY created_at DESC LIMIT 1), '%');"
Get hazards with descriptions that mention at least one fictional character and one famous historical figure.,SELECT * FROM hazards WHERE description LIKE '%fictional_character%' AND description LIKE '%famous_historical_figure%';
Retrieve event staff roles with names that include the word 'Guru' and have order values in ascending prime order.,"SELECT * FROM event_staff_roles WHERE name LIKE '%Guru%' ORDER BY FIELD(order, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);"
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order.,"SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND CONCAT(SORT(user_id), '') = CONCAT(SORT(user_pharmacy_id), '');"
Get form settings summary tools for organizations where the tools_id is a Fibonacci number and the updated_by value is a palindrome.,"SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE tools_id IN (0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89) AND updated_by = REVERSE(updated_by));"
Retrieve events where the harmt value is a palindrome.,SELECT * FROM events WHERE harmt = REVERSE(harmt);
Find users who have updated their profiles on a day that is a power of their sf_id.,"SELECT * FROM users WHERE DAY(updated_at) = POWER(sf_id, sf_id);"
"Get organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates, and the organization name contains the word 'Innovation'.","SELECT * FROM organizations WHERE trial_ends_at = DATE_ADD(created_at, INTERVAL updated_at DAY) AND name LIKE '%Innovation%';"
Retrieve pharmacies in cities where the number of enabled pharmacies is a perfect square.,"SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) = POWER(COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL, 2);"
Retrieve the staff directory for users whose IDs contain a palindrome.,SELECT * FROM staff_directory WHERE user_id LIKE '%a%' OR user_id LIKE '%e%' OR user_id LIKE '%i%' OR user_id LIKE '%o%' OR user_id LIKE '%u%';
Get assets with serial numbers that are an anagram of the user_id of the user who last updated them.,SELECT * FROM assets WHERE serial_number IN (SELECT user_id FROM users WHERE user_id LIKE '%a%' OR user_id LIKE '%e%' OR user_id LIKE '%i%' OR user_id LIKE '%o%' OR user_id LIKE '%u%') ORDER BY serial_number;
Find hazards related to pharmacies with names containing the word 'Wellness'.,SELECT * FROM hazards WHERE pharmacy_name LIKE '%Wellness%';
Get the event staff roles with names that form a sentence when concatenated together.,"SELECT * FROM event_staff_roles WHERE CONCAT(role_name, ' ') LIKE '%sentence%';"
Retrieve event actions performed by users who have the role of 'Manager' in their profile.,SELECT * FROM event_actions WHERE user_id IN (SELECT user_id FROM user_profiles WHERE role = 'Manager');
Find form settings summary tools for facilities located in cities with a vowel as the second letter.,SELECT * FROM form_settings_summary WHERE facility_city LIKE '_[AEIOU]%';
Get events that involve harm types with alphabetical characters and are reported by users with a username starting with 'A'.,SELECT * FROM events WHERE harm_types REGEXP '^[a-zA-Z]+$' AND reported_by LIKE 'A%';
Retrieve users with active status and last updated on a Monday.,SELECT * FROM users WHERE status = 'active' AND WEEKDAY(last_updated) = 0;
Find organizations that operate in countries whose names contain the word 'United'.,SELECT * FROM organizations WHERE country_name LIKE '%United%';
Get pharmacies activated by users with names containing 'Med' and located in cities ending with 'ville'.,SELECT * FROM pharmacies WHERE activated_by LIKE '%Med%' AND pharmacy_city LIKE '%ville';
Retrieve the staff directory for users whose full names contain a pattern of alternating vowels and consonants.,SELECT * FROM staff_directory WHERE full_name REGEXP '^[AEIOU]+[^AEIOU]+[AEIOU]+[^AEIOU]+$';
Find assets with the highest value in their asset_items_id and a serial number that is a palindrome.,SELECT * FROM assets WHERE asset_items_id = (SELECT MAX(asset_items_id) FROM assets) AND serial_number = REVERSE(serial_number);
Get hazards associated with pharmacies that have the highest number of reported incidents and a description containing the word 'safety'.,SELECT * FROM hazards WHERE pharmacy_id IN (SELECT pharmacy_id FROM pharmacies WHERE reported_incidents = (SELECT MAX(reported_incidents) FROM pharmacies) AND description LIKE '%safety%');
Retrieve the event staff roles with the most number of forms associated with them and names starting with 'Lead'.,"SELECT * FROM event_staff_roles WHERE role_name LIKE 'Lead%' AND role_id IN (SELECT role_id FROM forms GROUP BY role_id HAVING COUNT() = (SELECT MAX(form_count) FROM (SELECT role_id, COUNT() AS form_count FROM forms GROUP BY role_id) AS temp));"
Find event actions that were performed on public holidays.,SELECT * FROM event_actions WHERE action_date IN (SELECT date FROM holidays WHERE is_public_holiday = true);
Get form settings summary tools for organizations with names containing 'Health' and facilities located in cities with more than two words.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE organization_name LIKE '%Health%') AND facility_city REGEXP '^[a-zA-Z]+ [a-zA-Z]+ [a-zA-Z]+$';
Retrieve events where the harmt value is the same as the prescribers_id value and the event type is 'Emergency'.,SELECT * FROM events WHERE harmt = prescribers_id AND event_type = 'Emergency';
Find users who have the same date of creation and update and have a profile picture.,SELECT * FROM users WHERE creation_date = update_date AND profile_picture IS NOT NULL;
Get organizations located in countries with names starting with 'The' and trial_ends_at is not null.,SELECT * FROM organizations WHERE country_name LIKE 'The%' AND trial_ends_at IS NOT NULL;
Retrieve pharmacies that were activated on a specific date by users with the same initials as the pharmacy's name and a user profile picture.,"SELECT * FROM pharmacies WHERE activation_date = 'specific_date' AND activated_by = SUBSTRING(pharmacy_name, 1, 2) AND user_id = SUBSTRING(pharmacy_name, 1, 2) AND profile_picture IS NOT NULL;"
Find the staff directory for users whose IDs are the reverse of their employee_id.,SELECT * FROM staff_directory WHERE REVERSE(user_id) = employee_id;
Get assets with serial numbers containing a sequence of consecutive prime numbers.,SELECT * FROM assets WHERE serial_number LIKE '%2357%' OR serial_number LIKE '%357%';
"Retrieve hazards with descriptions that include at least three different types of hazards (e.g., fire, chemical, electrical).",SELECT * FROM hazards WHERE description LIKE '%fire%' AND description LIKE '%chemical%' AND description LIKE '%electrical%';
Find event staff roles that have the same order as their respective forms_id and names ending with 'Specialist'.,SELECT * FROM event_staff_roles WHERE forms_id = role_id AND role_name LIKE '%Specialist';
Get event actions performed by users who have the same user_pharmacy_id as their user_id and the action date is a national holiday.,SELECT * FROM event_actions WHERE user_id = user_pharmacy_id AND action_date IN (SELECT date FROM holidays WHERE is_national_holiday = true);
Retrieve form settings summary tools for organizations with the most recent updates and facilities with the oldest updates and updated_by is an anagram of the organization name.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations ORDER BY update_date DESC LIMIT 1) AND facility_id IN (SELECT facility_id FROM facilities ORDER BY update_date ASC LIMIT 1) AND updated_by = (SELECT organization_name FROM organizations ORDER BY update_date DESC LIMIT 1);
Find events where the harmt and prescribers_id values have the same number of digits and the event is marked as 'Urgent'.,SELECT * FROM events WHERE LENGTH(harmt) = LENGTH(prescribers_id) AND event_mark = 'Urgent';
Get users who have updated their profiles at least twice within a week and have the same date of creation and update.,"SELECT * FROM users WHERE creation_date = update_date AND DATEDIFF(update_date, creation_date) <= 7 GROUP BY user_id HAVING COUNT(*) >= 2;"
Retrieve organizations that have the same trial_ends_at date as their creation date and have a company logo.,SELECT * FROM organizations WHERE trial_ends_at = creation_date AND company_logo IS NOT NULL;
Find pharmacies in cities where the number of enabled pharmacies is greater than the number of disabled pharmacies and the city name contains a repeating letter.,SELECT * FROM pharmacies WHERE pharmacy_city IN (SELECT pharmacy_city FROM pharmacies GROUP BY pharmacy_city HAVING COUNT(*) > 2) AND enabled_pharmacies > disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z])\1';
Get the staff directory for users with the longest full names and a username containing the word 'super'.,SELECT * FROM staff_directory WHERE LENGTH(full_name) = (SELECT MAX(LENGTH(full_name)) FROM staff_directory) AND username LIKE '%super%';
Retrieve assets that have been updated in the last 24 hours and have serial numbers with alternating uppercase and lowercase letters.,SELECT * FROM assets WHERE last_updated >= NOW() - INTERVAL 1 DAY AND serial_number REGEXP '^[A-Za-z]{1}[a-zA-Z]{1}[A-Za-z]{1}[a-zA-Z]{1}.*';
"Find hazards with descriptions that mention at least three different natural disasters (e.g., earthquake, hurricane, tornado).",SELECT * FROM hazards WHERE description REGEXP 'earthquake' AND description REGEXP 'hurricane' AND description REGEXP 'tornado';
Get event staff roles with names containing the word 'Champion' and order values in descending even numbers.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Champion%' AND order_value % 2 = 0 ORDER BY order_value DESC;
Retrieve event actions performed by users whose user_pharmacy_id is an anagram of their user_id and the action date is their birthdate.,SELECT * FROM event_actions WHERE user_pharmacy_id = user_id AND action_date = birthdate;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and have the same updated_by value as the organization name.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = (SELECT organization_name FROM organizations WHERE updated_by = REVERSE(organization_name));
Get events where the harmt value is a prime number and the event location is in a city starting with 'S'.,SELECT * FROM events WHERE harmt IN (SELECT number FROM primes) AND event_location LIKE 'S%';
Retrieve users who have updated their profiles on the same day they were created and have a phone number.,SELECT * FROM users WHERE DATE(creation_date) = DATE(update_date) AND phone_number IS NOT NULL;
Find organizations located in countries with the longest trial_ends_at duration and a company website.,"SELECT * FROM organizations WHERE DATEDIFF(trial_ends_at, creation_date) = (SELECT MAX(DATEDIFF(trial_ends_at, creation_date)) FROM organizations) AND company_website IS NOT NULL;"
Get pharmacies activated by users with the shortest names and a registration certificate.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city = REVERSE(pharmacy_city);
Retrieve the staff directory for users whose full names have the same number of characters as their employee_id and a job title containing the word 'Senior'.,SELECT * FROM staff_directory WHERE REVERSE(user_id) = employee_id AND job_title LIKE '%Senior%';
"Find assets with serial numbers that form a pattern using a combination of letters and numbers (e.g., A1B2C3).",SELECT * FROM assets WHERE serial_number REGEXP '^[A-Za-z0-9]*$';
Get hazards with descriptions that contain at least three different colors and are classified as 'High Risk'.,SELECT * FROM hazards WHERE description REGEXP 'red' AND description REGEXP 'blue' AND description REGEXP 'green' AND hazard_classification = 'High Risk';
Retrieve event staff roles with names that contain the word 'Captain' and have order values in ascending prime numbers.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Captain%' AND order_value IN (SELECT number FROM primes ORDER BY number ASC);
Find event actions performed by users who have the same user_id and user_pharmacy_id and the action date is a weekend.,"SELECT * FROM event_actions WHERE user_id = user_pharmacy_id AND WEEKDAY(action_date) IN (5, 6);"
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares);
Retrieve events where the harmt value is a perfect square and the event type is 'Accident'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Meeting';
Find users who have updated their profiles on a day that is a multiple of their sf_id and have a bio.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND bio IS NOT NULL;"
Get organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and a mission statement.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_logo IS NOT NULL;"
Retrieve pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name is a palindrome.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (disabled_pharmacies * disabled_pharmacies) AND pharmacy_award = 'Pharmacy of the Year' AND pharmacy_name = REVERSE(pharmacy_city);
Find the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id);
Get assets with serial numbers that include the user_id of the user who created them and have a purchase receipt.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND purchase_receipt IS NOT NULL;"
"Retrieve hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal.",SELECT * FROM hazards WHERE description REGEXP 'computer' AND description REGEXP 'smartphone' AND description REGEXP 'animal';
Find event staff roles with names that include the word 'Ambassador' and order values in descending prime numbers.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Ambassador%' AND order_value IN (SELECT number FROM primes ORDER BY number DESC);
Get event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a public holiday.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM holidays WHERE is_national_holiday = true);
Retrieve form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares);
Find events where the harmt value is a palindrome and the event type is 'Meeting'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Accident';
Get users who have updated their profiles on a day that is a power of 2 and have a skill endorsement.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true;"
Retrieve organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and a company logo.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement IS NOT NULL;"
Find pharmacies in cities where the number of enabled pharmacies is a perfect square and have a 'Pharmacy of the Year' award.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city = REVERSE(pharmacy_name);
Get the staff directory for users whose IDs are the reverse of their employee_id and have a professional certification.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = supervisor_last_name AND job_title LIKE '%Expert%';
Retrieve assets with serial numbers that contain the user_id of the user who last updated them and have a warranty.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true);
"Find hazards with descriptions that mention at least three different types of food (e.g., pizza, sushi, burger) and are marked as 'Critical'.",SELECT * FROM hazards WHERE description REGEXP 'earthquake' AND description REGEXP 'hurricane' AND description REGEXP 'tornado' AND hazard_classification = 'Severe';
Get event staff roles with names that include the word 'Innovator' and order values in ascending Fibonacci sequence.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC);
Retrieve event actions performed by users whose user_id is a multiple of their user_pharmacy_id and the action date is a national holiday.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM holidays WHERE is_weekday = true) AND action_time BETWEEN '09:00:00' AND '17:00:00';
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the tools_id is a perfect square.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic');
Get events where the harmt value is a multiple of the prescribers_id value and the event location is in a city ending with 'town'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference';
Retrieve users who have updated their profiles on a day that is a power of their sf_id and have a verified email address.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL;"
Find organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true;"
Get pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z])\1';
Retrieve the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert'.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%';
Find assets with serial numbers that form a palindrome and have a purchase date on a public holiday.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true);
"Get hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe'.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe';
Retrieve event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC);
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND user_id IN (SELECT number FROM digits_permutation) AND user_pharmacy_id IN (SELECT number FROM digits_permutation);
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference';
Find users who have updated their profiles on a day that is a power of 2 and have a verified phone number.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND phone_number_verified = true;"
Get organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation'.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_website IS NOT NULL;"
Retrieve pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true;
Find the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager'.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%';
Get assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL;"
"Retrieve hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency'.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency';
Find event staff roles with names that include the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles);
Get event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true;
Retrieve form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true;
Find events where the harmt value is a palindrome and the event type is 'Workshop' and the event location is a city with a palindrome name.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company';
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist'.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%';
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL;
Get events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL;
Retrieve users who have updated their profiles on a day that is a power of 2 and have a verified phone number and a skill endorsement and have received a performance award.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND phone_number_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL;"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation' and a company logo and are recognized as a leader in their industry.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_logo IS NOT NULL AND recognized_leader = true AND diverse_workforce = true;"
Get pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true;
Retrieve the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager' and have received a promotion.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%' AND promotion_status = 'Promoted';
Find assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record and a service history.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL;"
"Get hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency' and have a high likelihood of occurrence.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency' AND likelihood_of_occurrence = 'High';
Retrieve event staff roles with names that include the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true;
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Workshop' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Workshop' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7';
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award IS NOT NULL;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_from_attendees = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true;
Get events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_industry_publication = true;
Retrieve users who have updated their profiles on a day that is a power of 2 and have a verified phone number and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND phone_number_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true;"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation' and a company logo and are recognized as a leader in their industry and have a positive reputation among customers and stakeholders.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_logo IS NOT NULL AND recognized_leader = true AND positive_reputation_among_customers = true;"
Get pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7';
Retrieve the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager' and have received a promotion and have successfully completed leadership training.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%' AND promotion_status = 'Promoted' AND completed_leadership_training = true;
Find assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record and a service history and have been audited for compliance.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND audited_for_compliance = true;"
"Get hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency' and have a high likelihood of occurrence and have been identified as potential risks in the industry.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency' AND likelihood_of_occurrence = 'High' AND identified_as_industry_risks = true;
Retrieve event staff roles with names that include the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_from_attendees = true AND contributed_to_best_practices = true;
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND recognized_as_industry_influencer = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_industry_publication = true AND diverse_audience = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND invited_to_speak_at_conferences = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND recognized_as_leaders = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award and have successfully completed a management training program.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award = true AND management_training_program_completion = true;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true;
Get events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true;
Retrieve users who have updated their profiles on a day that is a power of 2 and have a verified phone number and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true;"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation' and a company logo and are recognized as a leader in their industry and have a positive reputation among customers and stakeholders and have demonstrated sustained financial growth over the years.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_logo IS NOT NULL AND recognized_leader = true AND positive_reputation = true AND sustained_financial_growth = true;"
Get pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true;
Retrieve the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager' and have received a promotion and have successfully completed leadership training and have been recognized as outstanding performers by senior management.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%' AND promotion_status = 'Promoted' AND leadership_training_completion = true AND outstanding_performer_recognition = true;
Find assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets and have undergone regular calibration and quality assurance checks.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true AND calibration_quality_assurance_checks = true;"
"Get hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency' and have a high likelihood of occurrence and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies and have been communicated to all relevant stakeholders.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency' AND likelihood_of_occurrence = 'High' AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true AND communication_to_stakeholders = true;
Retrieve event staff roles with names that contain the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences and have published books on event planning.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true AND published_books_event_planning = true;
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals and has served as a judge for event industry awards.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true AND event_industry_award_judge = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals and has an active mentorship program for new employees.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true AND mentorship_program = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants and has achieved a high level of attendee satisfaction.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true AND attendee_satisfaction_high = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management and have launched their own event planning consultancy.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true AND event_planning_consultancy_launch = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region and have been featured in business magazines as examples of successful organizations and have received prestigious industry accolades.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND top_employer_recognition = true AND business_magazine_feature = true AND industry_accolades_received = true AND international_market_presence = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems and has partnered with local healthcare providers for collaborative patient care.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true AND collaborative_patient_care = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award and have successfully completed a management training program and have published articles on event management in leading industry journals.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award = true AND management_training_program_completion = true AND published_articles_event_management_journals = true;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets and have undergone regular calibration and quality assurance checks and have been insured against loss or damage.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true AND calibration_quality_assurance_checks = true AND insurance_against_loss_damage = true;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies and have been communicated to all relevant stakeholders and have been incorporated into employee training programs.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true AND communication_to_stakeholders = true AND employee_training_programs = true;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences and have published books on event planning and have provided training workshops for aspiring event professionals.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true AND published_books_event_planning = true AND training_workshops_aspiring_professionals = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals and has served as a judge for event industry awards and has organized international conferences in collaboration with renowned industry associations.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true AND event_industry_award_judge = true AND international_conference_organization = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals and has an active mentorship program for new employees and has launched a research and innovation center for event technology advancements.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true AND mentorship_program = true AND research_innovation_center_launched = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants and has achieved a high level of attendee satisfaction and has generated significant media coverage.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true AND attendee_satisfaction_high = true AND significant_media_coverage = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management and have launched their own event planning consultancy and have expanded their business globally.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true AND event_planning_consultancy_launch = true AND business_expansion_global = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region and have been featured in business magazines as examples of successful organizations and have received prestigious industry accolades and have established their presence in multiple international markets.,SELECT * FROM organizations WHERE trial_ends_at = creation_date + updated_at AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND top_employer_recognition = true AND business_magazine_feature = true AND industry_accolades_received = true AND international_market_presence = true AND sustainable_business_practices = true;
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems and has partnered with local healthcare providers for collaborative patient care and has implemented a patient medication adherence program.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true AND healthcare_provider_collaboration = true AND patient_medication_adherence_program = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award and have successfully completed a management training program and have published articles on event management in leading industry journals and have delivered keynote speeches at international event conferences.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award = true AND management_training_program_completion = true AND published_articles_event_management_journals = true AND keynote_speeches_delivered = true;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets and have undergone regular calibration and quality assurance checks and have been insured against loss or damage and have been included in a comprehensive asset management system.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true AND calibration_quality_assurance_checks = true AND insurance_against_loss_damage = true AND asset_management_system_included = true;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies and have been communicated to all relevant stakeholders and have been incorporated into employee training programs and have been subject to periodic reviews and updates.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true AND communication_to_stakeholders = true AND employee_training_programs = true AND periodic_reviews_updates = true;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences and have published books on event planning and have provided training workshops for aspiring event professionals and have organized international conferences in collaboration with renowned industry associations.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true AND published_books_event_planning = true AND training_workshops_aspiring_professionals = true AND international_conference_organization = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals and has served as a judge for event industry awards and has organized international conferences in collaboration with renowned industry associations and has received international recognition for event innovation and excellence.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true AND event_industry_award_judge = true AND international_conference_organization = true AND event_innovation_excellence_recognition = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals and has an active mentorship program for new employees and has launched a research and innovation center for event technology advancements and has contributed to the development of industry standards and best practices.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true AND mentorship_program = true AND research_innovation_center_launched = true AND industry_standards_best_practices_contribution = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants and has achieved a high level of attendee satisfaction and has generated significant media coverage and has been recognized as a leading event in the industry.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true AND attendee_satisfaction_high = true AND significant_media_coverage = true AND leading_event_recognition = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management and have launched their own event planning consultancy and have expanded their business globally and have been appointed as advisors to event industry associations.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true AND event_planning_consultancy_launch = true AND business_expansion_global = true AND industry_association_advisor = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region and have been featured in business magazines as examples of successful organizations and have received prestigious industry accolades and have established their presence in multiple international markets and have implemented sustainable business practices to reduce environmental impact.,SELECT * FROM organizations WHERE trial_ends_at = creation_date + updated_at AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND top_employer_recognition = true AND business_magazine_feature = true AND industry_accolades_received = true AND international_market_presence = true AND sustainable_business_practices = true AND scholarship_program = true;
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems and has partnered with local healthcare providers for collaborative patient care and has implemented a patient medication adherence program and has a dedicated clinical pharmacist on staff.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true AND healthcare_provider_collaboration = true AND patient_medication_adherence_program = true AND clinical_pharmacist_on_staff = true;
Fetch the last 10 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 10;
Retrieve the first 5 entries from the assets table.,SELECT * FROM assets LIMIT 5;
Retrieve the last 2 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 2 DAY;
Fetch the first 3 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 3;
Retrieve the last 5 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 5;
Fetch the last 20 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 20;
Retrieve the first 15 entries from the assets table.,SELECT * FROM assets LIMIT 15;
Retrieve the last 3 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 3 DAY;
Fetch the first 5 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 5;
Retrieve the last 10 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 10;
Fetch the last 15 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 15;
Retrieve the first 20 entries from the assets table.,SELECT * FROM assets LIMIT 20;
Retrieve the last 4 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 4 DAY;
Fetch the first 8 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 8;
Retrieve the last 7 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 7;
Retrieve the data from the events table for the last 10 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 10 DAY;
Fetch the last 25 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 25;
Retrieve the first 30 entries from the assets table.,SELECT * FROM assets LIMIT 30;
Fetch the first 12 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 12;
Retrieve the last 15 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 15;
Retrieve the data from the events table for the last 15 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 15 DAY;
Fetch the last 30 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 30;
Retrieve the first 25 entries from the assets table.,SELECT * FROM assets LIMIT 25;
Retrieve the last 6 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 6 DAY;
Fetch the first 20 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 20;
Retrieve the data from the events table for the last 20 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 20 DAY;
Fetch the last 35 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 35;
Retrieve the first 40 entries from the assets table.,SELECT * FROM assets LIMIT 40;
Retrieve the last 7 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Fetch the first 25 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 25;
Retrieve the last 30 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 30;
Retrieve the data from the events table for the last 25 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 25 DAY;
Fetch the last 40 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 40;
Retrieve the first 35 entries from the assets table.,SELECT * FROM assets LIMIT 35;
Retrieve the last 8 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 8 DAY;
Fetch the first 30 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 30;
Retrieve the last 25 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 25;
Retrieve the data from the events table for the last 30 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 30 DAY;
Fetch the last 45 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 45;
Retrieve the first 50 entries from the assets table.,SELECT * FROM assets LIMIT 50;
Retrieve the last 10 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 10 DAY;
Fetch the first 35 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 35;
Retrieve the last 40 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 40;
Retrieve the data from the events table for the last 35 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 35 DAY;
Fetch the last 50 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 50;
Retrieve the first 45 entries from the assets table.,SELECT * FROM assets LIMIT 45;
Fetch the first 40 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 40;
Retrieve the last 45 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 45;
Retrieve the data from the events table for the last 40 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 40 DAY;
Fetch the last 55 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 55;
Retrieve the first 60 entries from the assets table.,SELECT * FROM assets LIMIT 60;
Retrieve the last 20 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 20 DAY;
Fetch the first 45 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 45;
Retrieve the last 50 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 50;
Retrieve the data from the events table for the last 45 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 45 DAY;
Fetch the last 60 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 60;
Retrieve the first 55 entries from the assets table.,SELECT * FROM assets LIMIT 55;
Retrieve the last 25 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 25 DAY;
Fetch the first 50 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 50;
Retrieve the last 55 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 55;
Retrieve the data from the events table for the last 50 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 50 DAY;
Fetch the last 65 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 65;
Retrieve the first 70 entries from the assets table.,SELECT * FROM assets LIMIT 70;
Retrieve the last 30 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 30 DAY;
Fetch the first 55 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 55;
Retrieve the last 60 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 60;
Retrieve the data from the events table for the last 55 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 55 DAY;
Fetch the last 70 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 70;
Retrieve the first 65 entries from the assets table.,SELECT * FROM assets LIMIT 65;
Retrieve the last 35 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 35 DAY;
Fetch the first 60 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 60;
Retrieve the last 65 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 65;
Retrieve the data from the events table for the last 60 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 60 DAY;
Fetch the last 75 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 75;
Retrieve the first 80 entries from the assets table.,SELECT * FROM assets LIMIT 80;
Retrieve the last 40 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 40 DAY;
Fetch the first 65 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 65;
Retrieve the last 70 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 70;
Retrieve the data from the events table for the last 65 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 65 DAY;
Fetch the last 80 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 80;
Retrieve the first 75 entries from the assets table.,SELECT * FROM assets LIMIT 75;
Retrieve the last 45 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 45 DAY;
Fetch the first 70 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 70;
Retrieve the last 75 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 75;
Retrieve the data from the events table for the last 70 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 70 DAY;
Fetch the last 85 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 85;
Retrieve the first 90 entries from the assets table.,SELECT * FROM assets LIMIT 90;
Retrieve the last 50 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 50 DAY;
Fetch the first 75 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 75;
Retrieve the last 80 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 80;
Retrieve the data from the events table for the last 75 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 75 DAY;
Fetch the last 90 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 90;
Retrieve the first 85 entries from the assets table.,SELECT * FROM assets LIMIT 85;
Retrieve the last 55 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 55 DAY;
Fetch the first 80 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 80;
Retrieve the last 85 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 85;
Retrieve the data from the events table for the last 80 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 80 DAY;
Fetch the last 95 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 95;
Retrieve the first 100 entries from the assets table.,SELECT * FROM assets LIMIT 100;
Retrieve the last 60 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 60 DAY;
Fetch the first 85 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 85;
Retrieve the last 90 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 90;
Retrieve the data from the events table for the last 85 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 85 DAY;
Fetch the last 100 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 100;
Retrieve the first 95 entries from the assets table.,SELECT * FROM assets LIMIT 95;
Retrieve the last 65 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 65 DAY;
Fetch the first 90 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 90;
Retrieve the last 95 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 95;
Retrieve the data from the events table for the last 90 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 90 DAY;
Fetch the last 105 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 105;
Retrieve the first 110 entries from the assets table.,SELECT * FROM assets LIMIT 110;
Retrieve the last 70 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 70 DAY;
Fetch the first 95 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 95;
Retrieve the last 100 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 100;
Retrieve the data from the events table for the last 95 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 95 DAY;
Fetch the last 110 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 110;
Retrieve the first 105 entries from the assets table.,SELECT * FROM assets LIMIT 105;
Retrieve the last 75 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 75 DAY;
Fetch the first 100 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 100;
Retrieve the last 105 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 105;
Retrieve the data from the events table for the last 100 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 100 DAY;
Fetch the last 115 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 115;
Retrieve the last 80 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 80 DAY;
Fetch the first 105 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 105;
Retrieve the last 110 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 110;
Retrieve the data from the events table for the last 105 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 105 DAY;
Fetch the last 120 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 120;
Retrieve the first 115 entries from the assets table.,SELECT * FROM assets LIMIT 115;
Retrieve the last 85 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 85 DAY;
Fetch the first 110 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 110;
Retrieve the last 115 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 115;
Retrieve the data from the events table for the last 110 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 110 DAY;
Fetch the last 125 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 125;
Retrieve the last 90 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 90 DAY;
Fetch the first 115 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 115;
Retrieve the last 120 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 120;
Retrieve the data from the events table for the last 115 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 115 DAY;
Fetch the last 130 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 130;
Retrieve the first 125 entries from the assets table.,SELECT * FROM assets LIMIT 125;
Retrieve the last 95 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 95 DAY;
Fetch the first 120 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 120;
Retrieve the last 125 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 125;
Retrieve the data from the events table for the last 120 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 120 DAY;
Fetch the last 135 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 135;
Retrieve the first 130 entries from the assets table.,SELECT * FROM assets LIMIT 130;
Retrieve the last 100 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 100 DAY;
Fetch the first 125 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 125;
Retrieve the last 130 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 130;
Retrieve the data from the events table for the last 125 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 125 DAY;
Fetch the last 140 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 140;
Retrieve the first 135 entries from the assets table.,SELECT * FROM assets LIMIT 135;
Retrieve the last 105 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 105 DAY;
Fetch the first 130 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 130;
Retrieve the last 135 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 135;
Retrieve the data from the events table for the last 130 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 130 DAY;
Fetch the last 145 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 145;
Retrieve the first 140 entries from the assets table.,SELECT * FROM assets LIMIT 140;
Retrieve the last 110 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 110 DAY;
Fetch the first 135 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 135;
Retrieve the last 140 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 140;
Retrieve the data from the events table for the last 135 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 135 DAY;
Fetch the last 150 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 150;
Retrieve the first 145 entries from the assets table.,SELECT * FROM assets LIMIT 145;
Retrieve the last 115 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 115 DAY;
Fetch the first 140 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 140;
Retrieve the last 145 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 145;
Retrieve the data from the events table for the last 140 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 140 DAY;
Fetch the last 155 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 155;
Retrieve the first 150 entries from the assets table.,SELECT * FROM assets LIMIT 150;
Retrieve the last 120 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 120 DAY;
Fetch the first 145 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 145;
Retrieve the last 150 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 150;
Retrieve the data from the events table for the last 145 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 145 DAY;
Fetch the last 160 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 160;
Retrieve the first 155 entries from the assets table.,SELECT * FROM assets LIMIT 155;
Retrieve the last 125 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 125 DAY;
Fetch the first 150 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 150;
Retrieve the last 155 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 155;
Retrieve the data from the events table for the last 150 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 150 DAY;
Fetch the last 165 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 165;
Retrieve the first 160 entries from the assets table.,SELECT * FROM assets LIMIT 160;
Retrieve the last 130 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 130 DAY;
Fetch the first 155 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 155;
Retrieve the last 160 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 160;
Retrieve the data from the events table for the last 155 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 155 DAY;
Fetch the last 170 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 170;
Retrieve the first 165 entries from the assets table.,SELECT * FROM assets LIMIT 165;
Retrieve the last 135 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 135 DAY;
Fetch the first 160 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 160;
Retrieve the last 165 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 165;
Retrieve the data from the events table for the last 160 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 160 DAY;
Fetch the last 175 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 175;
Retrieve the first 170 entries from the assets table.,SELECT * FROM assets LIMIT 170;
Retrieve the last 140 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 140 DAY;
Fetch the first 165 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 165;;
Retrieve the last 170 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 170;
Retrieve the data from the events table for the last 165 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 165 DAY;
Fetch the last 180 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 180;
Retrieve the first 175 entries from the assets table.,SELECT * FROM assets LIMIT 175;
Retrieve the last 145 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 145 DAY;
Fetch the first 170 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 170;
Retrieve the last 175 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 175;
Retrieve the data from the events table for the last 170 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 170 DAY;
Fetch the last 185 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 185;
Retrieve the first 180 entries from the assets table.,SELECT * FROM assets LIMIT 180;
Retrieve the last 150 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 150 DAY;
Fetch the first 175 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 175;
Retrieve the last 180 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 180;
Retrieve the data from the events table for the last 175 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 175 DAY;
Fetch the last 190 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 190;
Retrieve the first 185 entries from the assets table.,SELECT * FROM assets LIMIT 185;
Retrieve the last 155 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 155 DAY;
Fetch the first 180 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 180;
Retrieve the last 185 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 185;
Retrieve the data from the events table for the last 180 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 180 DAY;
Fetch the last 195 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 195;
Retrieve the first 190 entries from the assets table.,SELECT * FROM assets LIMIT 190;
Retrieve the last 160 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 160 DAY;
Fetch the first 185 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 185;
Retrieve the last 190 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 190;
Retrieve the data from the events table for the last 185 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 185 DAY;
Fetch the last 200 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 200;
Retrieve the first 195 entries from the assets table.,SELECT * FROM assets LIMIT 195;
Retrieve the last 165 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 165 DAY;
Fetch the first 190 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 190;
Retrieve the last 195 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 195;
Retrieve the data from the events table for the last 190 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 190 DAY;
Fetch the last 2 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 2;
Retrieve the first 10 entries from the assets table.,SELECT * FROM assets LIMIT 10;
Retrieve the last 2 days' data from the events table.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 2 DAY;
Fetch the first 2 entries from the staff_directory table.,SELECT * FROM staff_directory LIMIT 2;
Retrieve the last 10 records from the assets table.,SELECT * FROM assets ORDER BY id DESC LIMIT 10;
Retrieve the data from the events table for the last 2 days.,SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 2 DAY;
Fetch the last 15 records from the staff_directory table.,SELECT * FROM staff_directory ORDER BY id DESC LIMIT 15;
Retrieve the first 5 entries from the assets table.,SELECT * FROM assets LIMIT 5;
Retrieve the full_name and pharmacies_id from the staff_directory and pharmacies tables where user_id matches and is_active is true.,"SELECT staff_directory.full_name, staff_directory.pharmacies_id FROM staff_directory JOIN pharmacies ON staff_directory.user_id = pharmacies.user_id WHERE staff_directory.is_active = TRUE;"
Fetch the active and asset_type_id from the assets and asset_items tables where asset_items_id matches and active is true.,"SELECT assets.active, assets.asset_type_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE;"
Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'fire'.,"SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%fire%';"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and facility_id is not null.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.facility_id IS NOT NULL;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-06-30' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-06-30 00:00:00';"
Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id.,"SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id;"
Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id.,"SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id;"
Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null.,"SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL;"
Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null.,"SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL;"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is greater than 100.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id > 100;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 50.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 50;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-01' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-01 00:00:00';"
Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is 'admin'.,"SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type = 'admin';"
Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null.,"SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL;"
Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is null.,"SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NULL;"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is less than 200.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id < 200;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 50.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 50;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-01' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-01 00:00:00';"
Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null.,"SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL;"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Clinic' and id is greater than 150.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Clinic%' AND organizations.id > 150;"
Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'chemical'.,"SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%chemical%';"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 100.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 100;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-05' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-05 00:00:00';"
Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is 'staff'.,"SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type = 'staff';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Center' and id is less than 250.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Center%' AND organizations.id < 250;"
Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'nuclear'.,"SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%nuclear%';"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 100.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 100;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-05' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-05 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Medical' and id is greater than 200.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Medical%' AND organizations.id > 200;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 150.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 150;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-10' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-10 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is less than 300.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id < 300;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 150.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 150;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-10' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-10 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 250.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 250;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 200.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 200;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-15' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-15 00:00:00';"
Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is not 'staff'.,"SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type <> 'staff';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Clinic' and id is less than 300.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Clinic%' AND organizations.id < 300;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 200.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 200;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-15' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-15 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Medical' and id is greater than 250.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Medical%' AND organizations.id > 250;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 250.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 250;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-20' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-20 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is less than 350.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id < 350;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 250.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 250;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-20' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-20 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 300.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 300;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 300.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 300;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-25' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-25 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is less than 400.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id < 400;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 300.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 300;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-25' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-25 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 350.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 350;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 350.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 350;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-30' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-30 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Clinic' and id is less than 450.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Clinic%' AND organizations.id < 450;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 350.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 350;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-30' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-30 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Medical' and id is greater than 350.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Medical%' AND organizations.id > 350;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 450.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 450;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-08-01' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-08-01 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 400.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 400;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 400.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 400;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-08-01' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-08-01 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is less than 500.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id < 500;"
Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 400.,"SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 400;"
Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-08-05' 00:00:00.,"SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-08-05 00:00:00';"
Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 450.,"SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 450;"
Give an sql query to Retrieve all records from the orders table within the last 2 months,"SELECT * FROM orders WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 2 MONTH);"
Provide an sql query to retrieve all records from the orders table within the last 2 months,"SELECT * FROM orders WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 2 MONTH);"
Get the data from the log table between today's date and the previous week.,"SELECT * FROM log_table WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) AND CURDATE();"
Give an sql query to get the data from the log table between today's date and the previous week.,"SELECT * FROM log_table WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) AND CURDATE();"
I need the records from the events table where the timestamp is between 9 PM and 9:45 PM today,"SELECT * FROM events WHERE DATE(timestamp) = CURDATE() AND TIME(timestamp) BETWEEN '21:00:00' AND '21:45:00';"
Give an sql query to retrieve the events table where the timestamp is between 9 PM and 9:45 PM today,"SELECT * FROM events WHERE DATE(timestamp) = CURDATE() AND TIME(timestamp) BETWEEN '21:00:00' AND '21:45:00';"
Show me the entries from the messages table for the past 24 hours,"SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Retrieve the entries from the ""messages"" table that have been recorded in the past 24 hours.","SELECT * FROM messages  WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Provide the entries from the ""messages"" table that occurred in the past 24 hours.","SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Display all the messages recorded in the last 24 hours in the ""messages"" table.","SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Give me the messages from the ""messages"" table that have timestamps within the past 24 hours.","SELECT *  FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Show the entries from the ""messages"" table that were logged in the last 24 hours.","SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Provide a list of messages recorded within the last 24 hours in the ""messages"" table.","SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Give me all the messages logged within the last 24 hours in the ""messages"" table.","SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
Get the data from the sensor readings table between yesterday at 6 AM and today at 10 AM,"SELECT * FROM sensor_readings WHERE reading_timestamp >= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()) - 1, '06:00:00') AND reading_timestamp <= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), '10:00:00');"
Give an sql query to get the data from the sensor readings table between yesterday at 6 AM and today at 10 AM,"SELECT * FROM sensor_readings WHERE reading_timestamp >= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()) - 1, '06:00:00')  AND reading_timestamp <= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), '10:00:00');"
Give an sql query to retrieve the data from the sensor readings table between yesterday at 6 AM and today at 10 AM,"SELECT * FROM sensor_readings WHERE reading_timestamp >= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()) - 1, '06:00:00') AND reading_timestamp <= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), '10:00:00');"
Export the Incident details for my facilities created in last 3 months,"SELECT * FROM event WHERE facility_id IN (  SELECT facility_id  FROM event  WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
Give an SQL query to obtain the incident details for my facilities that have been created in the past 3 months,"SELECT * FROM event WHERE facility_id IN (SELECT facility_id FROM event WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
SQL query should I use to retrieve the incident details for my facilities created within the last 3 months,"SELECT * FROM event WHERE facility_id IN ( SELECT facility_id FROM event  WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
What is the SQL query syntax to obtain the incident details for my facilities that were created in the last 3 months?,"SELECT * FROM event WHERE facility_id IN ( SELECT facility_id  FROM event  WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
"Can you provide a SQL query to extract the incident details specifically for my facilities, limited to the past 3 months","SELECT * FROM event WHERE facility_id IN ( SELECT facility_id FROM event  WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
Give an sql query to insert a new event,"SELECT * FROM event;"
Give an sql query to Select all events,"SELECT * FROM event;"
provide an sql query to select events with a facility_id is 1,"SELECT * FROM event WHERE facility_id = 1;"
Sql query to select events with a specific facility_id,"SELECT * FROM event WHERE facility_id = [faculty_id];"
Select events that are still open,"SELECT * FROM event WHERE is_open = 1;"
sql query to update the description of an event,UPDATE event SET description = 'Updated Event Description' WHERE id = [id];"
Sql query to delete an event by its id,DELETE FROM event WHERE id = [id];"
Sql query to Count the total number of events,"SELECT COUNT(*) FROM event;"
Provide an sql query to find the latest updated event,"SELECT * FROM event ORDER BY updated_at DESC LIMIT 1;"
"To create a prompt for the SQL query ""SELECT * FROM event WHERE created_at BETWEEN '2023-01-01 00:00:00' AND '2023-06-30 23:59:59","SELECT * FROM event WHERE created_at BETWEEN '2023-01-01 00:00:00' AND '2023-06-30 23:59:59';"
Retrieve events with a specific harm_level_id,"SELECT * FROM event WHERE harm_level_id = 4;"
Retrieve events with a range of harm_level_id values,"SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Give an sql query to retrieve events with a range of harm_level_id values,"SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Provide an sql query to retrieve events with a range of harm_level_id values,"SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Count the number of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Sql query to count the number of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Generate an sql query to count the number of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Give sql query to count the number of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Update harm_level_id for a specific event,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Sql query to update harm_level_id for a specific event,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Give an sql query to update harm_level_id for a specific event,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Generate an sql query update harm_level_id for a specific event,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Delete events with a specific harm_level_id,DELETE FROM event WHERE harm_level_id = 3;"
Sql query to delete events with a specific harm_level_id,DELETE FROM event WHERE harm_level_id = 3;"
Give an sql query to delete events with a specific harm_level_id,DELETE FROM event WHERE harm_level_id = [id];"
Retrieve all events with a specific harm_level_id,"SELECT * FROM event WHERE harm_level_id = 4;"
Sql query to retrieve all events with a specific harm_level_id,"SELECT * FROM event WHERE harm_level_id = 4;"
Give an sql query to retrieve all events with a specific harm_level_id,"SELECT * FROM event WHERE harm_level_id = 4;"
Retrieve the count of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Give an sql query to retrieve the count of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Generate an sql query to retrieve the count of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Retrieve events with a range of harm_level_id values,"SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Given a sql query to retrieve harm_level_id values between 2 and 5,"SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Provide an sql query to retrieve harm_level_id values between 2 and 5,"SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Generate an sql query to retrieve events with a range of harm_level_id values between 2 to 5,"SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Retrieve events with a specific harm_level_id and event_type_id,"SELECT * FROM event WHERE harm_level_id = 3 AND event_type_id = 2;"
Sql query to update the harm_level_id for a specific event,UPDATE event SET harm_level_id = [harm_level_id] WHERE id = [id];"
Update the harm_level_id  to 7 where the id is 123,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Sql query to update the harm_level_id  to 7 where the id is 123,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Give an sql query to update the harm_level_id  to 7 where the id is 123,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Delete events with a specific harm_level_id,DELETE FROM event WHERE harm_level_id = [harm_level_id];"
Delete events where the  harm_level_id is equal to 1,DELETE FROM event WHERE harm_level_id = 1;"
Give an sql query to delete events where the  harm_level_id is equal to 1,DELETE FROM event WHERE harm_level_id = 1;"
Provide an sql query to delete events where the  harm_level_id is equal to 1,DELETE FROM event WHERE harm_level_id = 1;"
Retrieve events sorted by harm_level_id in ascending order,"SELECT * FROM event ORDER BY harm_level_id ASC;"
Sql query to retrieve events sorted by harm_level_id in ascending order,"SELECT * FROM event ORDER BY harm_level_id ASC;"
Generate an sql query to retrieve events sorted by harm_level_id in ascending order,"SELECT * FROM event ORDER BY harm_level_id ASC;"
Retrieve the highest harm_level_id value in the event table,"SELECT MAX(harm_level_id) AS highest_harm_level FROM event;"
Sql query to retrieve the highest harm_level_id value in the event table,"SELECT MAX(harm_level_id) AS highest_harm_level FROM event;"
Give an sql query to retrieve the highest harm_level_id value in the event table,"SELECT MAX(harm_level_id) AS highest_harm_level FROM event;"
Generate an sql query to retrieve the highest harm_level_id value in the event table,"SELECT MAX(harm_level_id) AS highest_harm_level FROM event;"
Calculate the average harm_level_id for all events,"SELECT AVG(harm_level_id) AS average_harm_level FROM event;"
Give an sql query to calculate the average harm_level_id for all events,"SELECT AVG(harm_level_id) AS average_harm_level FROM event;"
provide an sql command to calculate the average harm_level_id for all events,"SELECT AVG(harm_level_id) AS average_harm_level FROM event;"
Retrieve events with non-null harm_level_id values,"SELECT * FROM event WHERE harm_level_id IS NOT NULL;"
Give an sql query to retrieve events with non-null harm_level_id values,"SELECT * FROM event WHERE harm_level_id IS NOT NULL;"
Provide an sql query to retrieve events with non-null harm_level_id values,"SELECT * FROM event WHERE harm_level_id IS NOT NULL;"
Generate an sql query to retrieve events with non-null harm_level_id values,"SELECT * FROM event WHERE harm_level_id IS NOT NULL;"
Retrieve events with a specific harm_level_id and event_type_id using an INNER JOIN:,"SELECT e.*  FROM event e INNER JOIN event_type et ON e.event_type_id = et.id WHERE e.harm_level_id = 6 AND et.name = 'Incident';"
Sql query to retrieve events with a specific harm_level_id and event_type_id using an INNER JOIN,"SELECT e.*  FROM event e INNER JOIN event_type et ON e.event_type_id = et.id WHERE e.harm_level_id = 6AND et.name = 'Incident';"
Give an sql query to retrieve events with a specific harm_level_id and event_type_id using an INNER JOIN,"SELECT e.* FROM event e INNER JOIN event_type et ON e.event_type_id = et.id WHERE e.harm_level_id = 6  AND et.name = 'Incident';"
Generate an sql query to retrieve events with a specific harm_level_id and event_type_id using an INNER JOIN,"SELECT e.* FROM event e INNER JOIN event_type et ON e.event_type_id = et.id WHERE e.harm_level_id = 6AND et.name = 'Incident';"
Provide an sql query to retrieve events with a specific harm_level_id and event_type_id using an INNER JOIN,"SELECT e.*  FROM event e INNER JOIN event_type et ON e.event_type_id = et.id WHERE e.harm_level_id = 6 AND et.name = 'Incident';"
Calculate the total count of events grouped by harm_level_id in descending order,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id ORDER BY event_count DESC;"
Sql query to calculate the total count of events grouped by harm_level_id in descending order,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id ORDER BY event_count DESC;"
Give an sql query to calculate the total count of events grouped by harm_level_id in descending order,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id ORDER BY event_count DESC;"
Provide an sql query to calculate the total count of events grouped by harm_level_id in descending order,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id ORDER BY event_count DESC;"
Retrieve the minimum and maximum harm_level_id values in the event table,"SELECT MIN(harm_level_id) AS min_harm_level, MAX(harm_level_id) AS max_harm_level FROM event;"
Give an sql query to retrieve the minimum and maximum harm_level_id values in the event table,"SELECT MIN(harm_level_id) AS min_harm_level, MAX(harm_level_id) AS max_harm_level FROM event;"
Generate an sql query to retrieve the minimum and maximum harm_level_id values in the event table,"SELECT MIN(harm_level_id) AS min_harm_level, MAX(harm_level_id) AS max_harm_level FROM event;"
Get the minimum and maximum harm_level_id values in the event table,"SELECT MIN(harm_level_id) AS min_harm_level, MAX(harm_level_id) AS max_harm_level FROM event;"
I need the records of the minimum and maximum harm_level_id values in the event table,"SELECT MIN(harm_level_id) AS min_harm_level, MAX(harm_level_id) AS max_harm_level FROM event;"
Delete events with specific harm_level_id values and a closed date older than a specified date,"DELETE FROM event WHERE harm_level_id IN (1, 2, 3) -- Harm levels 1, 2, and 3 AND closed_at < '2023-06-01';"
"Delete events with specific harm_level_id values of 1,2 and 3 and a closed date older than a [date]","DELETE FROM event WHERE harm_level_id IN (1, 2, 3) -  AND closed_at < '2023-06-01';"
"Sql query to delete events with specific harm_level_id values of 1,2 and 3 and a closed date older than a [date]","DELETE FROM event WHERE harm_level_id IN (1, 2, 3) -- Harm levels 1, 2, and 3 AND closed_at < '2023-06-01';"
Retrieve events  harm_level_id is 7 and facility_id using a JOIN,"SELECT e.* FROM event e JOIN facility f ON e.facility_id = f.id WHERE e.harm_level_id = 7 AND f.name = 'Facility A';"
Give an sql query to retrieve events  harm_level_id is 7 and facility_id using a JOIN,"SELECT e.* FROM event e JOIN facility f ON e.facility_id = f.id WHERE e.harm_level_id = 7 AND f.name = 'Facility A';"
Retrieve events with a specific harm_level_id and facility_id using a JOIN,"SELECT e.* FROM event e JOIN facility f ON e.facility_id = f.id WHERE e.harm_level_id = [harm_level_id] AND f.name = 'Facility A';"
Sql query to retrieve events with a specific harm_level_id and facility_id using a JOIN,"SELECT e.* FROM event e JOIN facility f ON e.facility_id = f.id WHERE e.harm_level_id = 7  AND f.name = 'Facility A';"
Give an sql query to retrieve events with a specific harm_level_id and facility_id using a JOIN,"SELECT e.* FROM event e JOIN facility f ON e.facility_id = f.id WHERE e.harm_level_id = [harm_level_id]  AND f.name = 'Facility A';"
Retrieve the average harm_level_id for events associated with each facility,"SELECT f.name, AVG(e.harm_level_id) AS average_harm_level FROM event e JOIN facility f ON e.facility_id = f.id GROUP BY f.name;"
Give an sql query to retrieve the average harm_level_id for events associated with each facility,"SELECT f.name, AVG(e.harm_level_id) AS average_harm_level FROM event e JOIN facility f ON e.facility_id = f.id GROUP BY f.name;"
Provide an sql query to retrieve the average harm_level_id for events associated with each facility,"SELECT f.name, AVG(e.harm_level_id) AS average_harm_level FROM event e JOIN facility f ON e.facility_id = f.id GROUP BY f.name;"
Retrieve the most recent event for each harm_level_id,"SELECT e.* FROM event e JOIN (  SELECT harm_level_id, MAX(created_at) AS max_created_at FROM event GROUP BY harm_level_id) e ON e.harm_level_id = em.harm_level_id AND e.created_at = em.max_created_at;"
Gnerate an sql query to retrieve the most recent event for each harm_level_id,"SELECT e.* FROM event e JOIN (SELECT harm_level_id, MAX(created_at) AS max_created_at FROM event GROUP BY harm_level_id) e ON e.harm_level_id = em.harm_level_id AND e.created_at = em.max_created_at;"
Get  the most recent event for each harm_level_id,"SELECT e.* FROM event e JOIN ( SELECT harm_level_id, MAX(created_at) AS max_created_at FROM event GROUP BY harm_level_id) e ON e.harm_level_id = em.harm_level_id AND e.created_at = em.max_created_at;"
"Retrieve the total count of events for each harm level, including a label for each harm level","SELECT harm_level_id, CASE  WHEN harm_level_id = 1 THEN 'All'  WHEN harm_level_id = 2 THEN 'Unknown' WHEN harm_level_id = 3 THEN 'None'  WHEN harm_level_id = 4 THEN 'Mild Harm' WHEN harm_level_id = 5 THEN 'Moderate Harm' WHEN harm_level_id = 6 THEN 'Severe Harm'  WHEN harm_level_id = 7 THEN 'Death'  WHEN harm_level_id = 8 THEN 'No Harm'  END AS harm_level_label,  COUNT(*) AS event_count FROM event  GROUP BY harm_level_id;"
Retrieve events where the harm level is higher than a specified threshold,"SELECT * FROM event  WHERE harm_level_id > [harm_level_id];"
Sql query to retrieve events where the harm level is higher than a specified threshold,"SELECT * FROM event WHERE harm_level_id > [harm_level_id];"
Retrieve events where the harm level is higher than 4,"SELECT * FROM event WHERE harm_level_id > 4;"
Retrieve events where the harm level is greater than 4,"SELECT * FROM event WHERE harm_level_id > 4;"
Sql query to retrieve events where the harm level is higher than,"SELECT * FROM event WHERE harm_level_id > 4;"
Generate an sql query to retrieve events where the harm level is higher than,"SELECT * FROM event WHERE harm_level_id > 4;"
Get the  events where the harm level is higher than,"SELECT * FROM event WHERE harm_level_id > 4;"
Retrieve the distinct harm levels present in the event table,"SELECT DISTINCT harm_level_id FROM event;"
Get  the distinct harm levels present in the event table,"SELECT DISTINCT harm_level_id FROM event;"
Give an sql query to get the distinct harm levels present in the event table,"SELECT DISTINCT harm_level_id FROM event;"
Generate the sql query to retrieve the distinct harm levels present in the event table,"SELECT DISTINCT harm_level_id FROM event;"
Retrieve events with a specific event_type_id,"SELECT * FROM event WHERE event_type_id = [event_type_id];"
Get the  events with a specified event_type_id,"SELECT * FROM event WHERE event_type_id = [event_type_id];"
Retrieve events where the event_type_id is 2,"SELECT * FROM event WHERE event_type_id = 2;"
Get the events where the event_type_id is 2,"SELECT * FROM event WHERE event_type_id = 2;"
Retrieve the count of events for each event_type_id,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
Get the count of events for each event_type_id,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
Sql query to retrieve the count of events for each event_type_id,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
Generate an sql query to retrieve the count of events for each event_type_id,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
Retrieve events sorted by event_type_id in descending order,"SELECT * FROM event ORDER BY event_type_id DESC;"
Get the events sorted by event_type_id in descending order,"SELECT * FROM event ORDER BY event_type_id DESC;"
Sql query to retrieve events sorted by event_type_id in descending order,"SELECT * FROM event ORDER BY event_type_id DESC;"
Give an sql query to retrieve events sorted by event_type_id in descending order,"SELECT * FROM event ORDER BY event_type_id DESC;"
Retrieve the distinct event_type_id values present in the event table,"SELECT DISTINCT event_type_id FROM event;"
Sql query to retrieve the distinct event_type_id values present in the event table,"SELECT DISTINCT event_type_id FROM event;"
Give an sql query to retrieve the distinct event_type_id values present in the event table,"SELECT DISTINCT event_type_id FROM event;"
Calculate the average event_type_id for all events,"SELECT AVG(event_type_id) AS average_event_type_id FROM event;"
Sql query to calculate the average event_type_id for all events,"SELECT AVG(event_type_id) AS average_event_type_id FROM event;"
Get  the average event_type_id for all events,
Get  the average event_type_id for all events,"SELECT AVG(event_type_id) AS average_event_type_id FROM event;"
Give an sql query to calculate the average event_type_id for all events,"SELECT AVG(event_type_id) AS average_event_type_id FROM event;"
Retrieve events with non-null event_type_id values,"SELECT * FROM event WHERE event_type_id IS NOT NULL;"
Get the events with non-null event_type_id values,"SELECT * FROM event WHERE event_type_id IS NOT NULL;"
Give an sql query to retrieve events with non-null event_type_id values,"SELECT * FROM event WHERE event_type_id IS NOT NULL;"
Generate an sql query to retrieve events with non-null event_type_id values,"SELECT * FROM event WHERE event_type_id IS NOT NULL;"
Retrieve the count of events for each event_type_id along with the corresponding event type name,"SELECT et.name AS event_type_name COUNT(*) AS event_count FROM event e JOIN event_type et ON e.event_type_id = et.id GROUP BY et.name;"
Get the count of events for each event_type_id along with the corresponding event type name,"SELECT et.name AS event_type_name, COUNT(*) AS event_count FROM event e JOIN event_type et ON e.event_type_id = et.id GROUP BY et.name;"
Retrieve events where the event type is not equal to a specific event_type_id,"SELECT * FROM event WHERE event_type_id <> [event_type_id];"
Retrieve the distinct event types present in the event table,"SELECT DISTINCT event_type_id FROM event;"
Get the distinct event types present in the event table,"SELECT DISTINCT event_type_id FROM event;"
Generate an sql query to retrieve the distinct event types present in the event table,"SELECT DISTINCT event_type_id FROM event;"
Get the percentage of events for each event type,"SELECT  event_type_id, COUNT(*) AS event_count,  (COUNT(*) * 100 / (SELECT COUNT(*) FROM event)) AS percentage FROM event GROUP BY event_type_id;"
Give an sql query to calculate the percentage of events for each event type,"SELECT event_type_id, COUNT(*) AS event_count, (COUNT(*) * 100 / (SELECT COUNT(*) FROM event)) AS percentage FROM event GROUP BY event_type_id;"
Retrieve events ordered by event_type_id and then by created_at in ascending order,"SELECT * FROM event ORDER BY event_type_id ASC, created_at ASC;"
Get the events ordered by event_type_id and then by created_at in ascending order,"SELECT * FROM event ORDER BY event_type_id ASC, created_at ASC;"
Retrieve the total count of events for each event type in descending order,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id ORDER BY event_count DESC;"
Get the total count of events for each event type in descending order,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id ORDER BY event_count DESC;"
Retrieve the maximum event_type_id value in the event table,"SELECT MAX(event_type_id) AS max_event_type_id FROM event;"
Get the maximum event_type_id value in the event table,"SELECT MAX(event_type_id) AS max_event_type_id FROM event;"
Sql query to retrieve the maximum event_type_id value in the event table,"SELECT MAX(event_type_id) AS max_event_type_id FROM event;"
Retrieve events that have a non-null event_type_id and a non-null harm_level_id,"SELECT * FROM event WHERE event_type_id IS NOT NULL AND harm_level_id IS NOT NULL;"
Get the events that have a non-null event_type_id and a non-null harm_level_id,"SELECT * FROM event WHERE event_type_id IS NOT NULL AND harm_level_id IS NOT NULL;"
Sql query to retrieve events that have a non-null event_type_id and a non-null harm_level_id,"SELECT * FROM event WHERE event_type_id IS NOT NULL AND harm_level_id IS NOT NULL;"
Give an Sql query to retrieve events that have a non-null event_type_id and a non-null harm_level_id,"SELECT * FROM event WHERE event_type_id IS NOT NULL AND harm_level_id IS NOT NULL;"
Calculate the average event_type_id for events associated with each facility,"SELECT f.name, AVG(e.event_type_id) AS average_event_type_id FROM event e JOIN facility f ON e.facility_id = f.id GROUP BY f.name;"
Get  the average event_type_id for events associated with each facility,"SELECT f.name, AVG(e.event_type_id) AS average_event_type_id FROM event e JOIN facility f ON e.facility_id = f.id GROUP BY f.name;"
Retrieve events with a specific event_type_id and a created date after a specified date,"SELECT * FROM event WHERE event_type_id = 3 AND created_at > '[DATE]';"
Retrieve events with the same event_type_id and harm_level_id values,"SELECT e1.* FROM event e1 JOIN event e2 ON e1.event_type_id = e2.event_type_id AND e1.harm_level_id = e2.harm_level_id WHERE e1.id <> e2.id;
Get the sql query to retrieve events with the same event_type_id and harm_level_id values,"SELECT e1.* FROM event e1 JOIN event e2 ON e1.event_type_id = e2.event_type_id AND e1.harm_level_id = e2.harm_level_id WHERE e1.id <> e2.id;
Retrieve the event type with the highest occurrence,"SELECT event_type_id, COUNT(*) AS occurrence FROM event  GROUP BY event_type_id ORDER BY occurrence DESC LIMIT 1;"
Get the event type with the highest occurrence,"SELECT event_type_id, COUNT(*) AS occurrence FROM event GROUP BY event_type_id ORDER BY occurrence DESC LIMIT 1;"
Retrieve events with a specific event_type_id and a closed date that is null,"SELECT * FROM event WHERE event_type_id =  [event_type_id] AND closed_at IS NULL;"
Retrieve the earliest created event for each event_type_id,"SELECT event_type_id, MIN(created_at) AS earliest_created_at FROM event GROUP BY event_type_id;"
Get the earliest created event for each event_type_id,"SELECT event_type_id, MIN(created_at) AS earliest_created_at FROM event GROUP BY event_type_id;"
Sql query to retrieve the earliest created event for each event_type_id,"SELECT event_type_id, MIN(created_at) AS earliest_created_at FROM event GROUP BY event_type_id;"
"Retrieve events with a specific event_type_id and a harm level that is not ""none""","SELECT * FROM event WHERE event_type_id = 3  AND harm_level_id <> 3;"
"Get the  events with a specific event_type_id and a harm level that is not ""none""","SELECT * FROM event WHERE event_type_id = 1 AND harm_level_id <> 3;"
Retrieve all events with their corresponding harm levels,"SELECT * FROM event;"
Retrieve events with unknown harm levels,"SELECT * FROM event  WHERE harm_level_id = 'Unknown';"
Get the events with unknown harm levels,"SELECT * FROM event WHERE harm_level_id = 'Unknown';"
Sql query to retrieve events with unknown harm levels,"SELECT * FROM event WHERE harm_level_id = 'Unknown';"
Retrieve events with no harm,"SELECT * FROM event WHERE harm_level_id = 'None';"
Sql query to retrieve events with no harm,"SELECT * FROM event WHERE harm_level_id = 'None';"
Generate sql query to retrieve events with 'none',"SELECT * FROM event WHERE harm_level_id = 'None';"
Retrieve events with mild harm,"SELECT * FROM event WHERE harm_level_id = 'Mild';"
Sql query to retrieve events with mild harm,"SELECT * FROM event WHERE harm_level_id = 'Mild';"
Give an sql query to retrieve events with mild harm,"SELECT * FROM event WHERE harm_level_id = 'Mild';"
Retrieve events with moderate harm,"SELECT * FROM event WHERE harm_level_id = 'Moderate';"
Sql query to retrieve events with moderate harm,"SELECT * FROM event WHERE harm_level_id = 'Moderate';"
Retrieve events with severe harm,"SELECT * FROM event WHERE harm_level_id = 'Severe';"
Sql query to retrieve events with severe harm,"SELECT * FROM event WHERE harm_level_id = 'Severe';"
Give an sql query to retrieve events with severe harm,"SELECT * FROM event WHERE harm_level_id = 'Severe';"
Get the  events with severe harm,"SELECT * FROM event WHERE harm_level_id = 'Severe';"
Retrieve events resulting in death,"SELECT * FROM event WHERE harm_level_id = 'Death';"
Retrieve events resulting in death,"SELECT * FROM event WHERE harm_level_id = 'Death';"
Get the events events resulting in death,"SELECT * FROM event WHERE harm_level_id = 'Death';"
Sql query to retrieve events resulting in death,"SELECT * FROM event WHERE harm_level_id = 'Death';"
Retrieve events with no harm or unknown harm levels,"SELECT * FROM event WHERE harm_level_id IN ('None', 'Unknown');"
Retrieve events with no harm or unknown harm levels,"SELECT * FROM event WHERE harm_level_id IN ('None', 'Unknown');"
Get the  events with no harm or unknown harm levels,"SELECT * FROM event WHERE harm_level_id IN ('None', 'Unknown');"
Sql query to retrieve events with no harm or unknown harm levels,"SELECT * FROM event WHERE harm_level_id IN ('None', 'Unknown');"
Count the number of events for each harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Get the count the number of events for each harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Give an sql query to count the number of events for each harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
"Retrieve events with harm levels categorized as mild, moderate, or severe","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate', 'Severe');"
"Get the  events with harm levels categorized as mild, moderate, or severe","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate', 'Severe');"
"Sql query to retrieve events with harm levels categorized as mild, moderate, or severe","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate', 'Severe');"
"Give an sql query to retrieve events with harm levels categorized as mild, moderate, or severe","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate', 'Severe');"
"Retrieve events with harm levels other than ""No Harm","SELECT * FROM event WHERE harm_level_id != 'No Harm';"
"Get the events with harm levels other than ""No Harm","SELECT * FROM event WHERE harm_level_id != 'No Harm';"
"Give an sql query to get the  events with harm levels other than ""No Harm","SELECT * FROM event WHERE harm_level_id != 'No Harm';"
"Retrieve events with harm levels of ""Mild"" or ""Moderate""","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate');"
"Sql query to retrieve the  events with harm levels of ""Mild"" or ""Moderate","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate');"
"Get the  events with harm levels of ""Mild"" or ""Moderate","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate');"
"Give an sql query to Retrieve events with harm levels of ""Mild"" or ""Moderate""","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate');"
"Retrieve events with harm levels of ""Severe"" or ""Death"" and are open","SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND is_open = true;"
"Get the  events with harm levels of ""Severe"" or ""Death"" and are open","SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND is_open = true;"
"Give an sql query to retrieve events with harm levels of ""Severe"" or ""Death"" and are open","SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND is_open = true;"
"Generate an sql query to retrieve events with harm levels of ""Severe"" or ""Death"" and are open","SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND is_open = true;"
"Retrieve events that were closed and had a harm level of ""Severe""","SELECT * FROM event WHERE harm_level_id = 'Severe' AND closed_at IS NOT NULL;"
"Get the events that were closed and had a harm level of ""Severe""","SELECT * FROM event WHERE harm_level_id = 'Severe' AND closed_at IS NOT NULL;"
"Give the sql query to retrieve events that were closed and had a harm level of ""Severe""","SELECT * FROM event WHERE harm_level_id = 'Severe' AND closed_at IS NOT NULL;"
"Retrieve events with harm levels of ""Unknown"" or ""None"" and were created after a specific date","SELECT * FROM event WHERE harm_level_id IN ('Unknown', 'None') AND created_at > '[created_at_Date]';"
"Retrieve events with harm levels of ""Unknown"" or ""None"" and were created after a specific date","SELECT * FROM event WHERE harm_level_id IN ('Unknown', 'None') AND created_at > '[created_at_date]';"
"Give an sql query to retrieve events with harm levels of ""Unknown"" or ""None"" and were created after a specific date","SELECT * FROM event WHERE harm_level_id IN ('Unknown', 'None') AND created_at > '[created_at_Date];"
Retrieve the count of events for each distinct harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Get  the count of events for each distinct harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
"Retrieve the average, minimum, and maximum harm levels for all events","SELECT AVG(harm_level_id) AS avg_harm_level, MIN(harm_level_id) AS min_harm_level, MAX(harm_level_id) AS max_harm_level FROM event;"
"Get the average, minimum, and maximum harm levels for all events","SELECT AVG(harm_level_id) AS avg_harm_level, MIN(harm_level_id) AS min_harm_level, MAX(harm_level_id) AS max_harm_level FROM event;"
Retrieve the total number of events grouped by harm level for closed events only,"SELECT harm_level_id, COUNT(*) AS event_count FROM event WHERE closed_at IS NOT NULL GROUP BY harm_level_id;"
Get the total number of events grouped by harm level for closed events only,"SELECT harm_level_id, COUNT(*) AS event_count FROM event WHERE closed_at IS NOT NULL GROUP BY harm_level_id;"
Retrieve the latest event with the highest harm level,"SELECT * FROM event WHERE harm_level_id = (SELECT MAX(harm_level_id) FROM event) ORDER BY created_at DESC LIMIT 1;"
Get the latest event with the highest harm level,"SELECT * FROM event WHERE harm_level_id = (SELECT MAX(harm_level_id) FROM event) ORDER BY created_at DESC LIMIT 1;"
Retrieve events with harm levels in alphabetical order,"SELECT * FROM event ORDER BY harm_level_id ASC;"
Get the events with harm levels in alphabetical order,"SELECT * FROM event ORDER BY harm_level_id ASC;"
"Retrieve events that are open and have a harm level other than ""No Harm""","SELECT * FROM event WHERE is_open = true AND harm_level_id != 'No Harm';"
"Get the events that are open and have a harm level other than ""No Harm""","SELECT * FROM event WHERE is_open = true AND harm_level_id != 'No Harm';"
Retrieve the number of events for each harm level in descending order,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id ORDER BY event_count DESC;"
Get the number of events for each harm level in descending order,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id ORDER BY event_count DESC;"
Retrieve the average harm level for events created in a specific month,"SELECT AVG(harm_level_id) AS avg_harm_level FROM event WHERE MONTH(created_at) = [month];"
Retrieve the average harm level for events created in a specific month,"SELECT AVG(harm_level_id) AS avg_harm_level FROM event WHERE MONTH(created_at) = [month];"
Retrieve the oldest event with a specific harm level,"SELECT * FROM event WHERE harm_level_id = 'Severe' ORDER BY created_at ASC LIMIT 1;"
Get the oldest event with a specific harm level,"SELECT * FROM event WHERE harm_level_id = 'Severe' ORDER BY created_at ASC LIMIT 1;"
Retrieve events with harm levels categorized as severe or death that were created in the last month,"SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND created_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"
Get the events with harm levels categorized as severe or death that were created in the last month,"SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND created_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"
"Retrieve events categorized as ""Incident""","SELECT * FROM event WHERE event_type_id = 'Incident';"
"Get the  events categorized as ""Incident""","SELECT * FROM event WHERE event_type_id = 'Incident';"
"Retrieve events categorized as ""Near Miss""","SELECT * FROM event WHERE event_type_id = 'Near Miss';"
"Get the events categorized as ""Near Miss""","SELECT * FROM event WHERE event_type_id = 'Near Miss';"
Retrieve events with a specific event type ID,"SELECT * FROM event WHERE event_type_id = [ event_type_id];"
Get the  events with a specific event type ID,"SELECT * FROM event WHERE event_type_id =[event_type_id];"
Count the number of events for each event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
Get the count the number of events for each event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
"Retrieve events with event types categorized as ""Incident"" or ""Near Miss""","SELECT * FROM event WHERE event_type_id IN ('Incident', 'Near Miss');"
"Get the events with event types categorized as ""Incident"" or ""Near Miss""","SELECT * FROM event WHERE event_type_id IN ('Incident', 'Near Miss');"
"Retrieve events with event types other than ""Incident""","SELECT * FROM event WHERE event_type_id != 'Incident';"
"Get the events with event types other than ""Incident""","SELECT * FROM event WHERE event_type_id != 'Incident';"
"Retrieve events with event types containing the word ""Fire""","SELECT * FROM event WHERE event_type_id LIKE '%Fire%';"
"Get the events with event types containing the word ""Fire""","SELECT * FROM event WHERE event_type_id LIKE '%Fire%';"
Retrieve the most recent event for each event type,"SELECT * FROM event WHERE (event_type_id, created_at) IN (SELECT event_type_id, MAX(created_at) FROM event GROUP BY event_type_id);"
Get the most recent event for each event type,"SELECT * FROM event WHERE (event_type_id, created_at) IN (SELECT event_type_id, MAX(created_at) FROM event GROUP BY event_type_id);"
"Retrieve events with event types categorized as ""Incident"" and harm levels categorized as ""Severe""","SELECT * FROM event WHERE event_type_id = 'Incident' AND harm_level_id = 'Severe';"
"Get the events with event types categorized as ""Incident"" and harm levels categorized as ""Severe""","SELECT * FROM event WHERE event_type_id = 'Incident' AND harm_level_id = 'Severe';"
"Retrieve events with event types categorized as ""Incident"" or ""Near Miss"" that are open","SELECT * FROM event WHERE event_type_id IN ('Incident', 'Near Miss') AND is_open = true;"
"Get the events with event types categorized as ""Incident"" or ""Near Miss"" that are open","SELECT * FROM event WHERE event_type_id IN ('Incident', 'Near Miss') AND is_open = true;"
Retrieve the count of events for each distinct event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
Get the count of events for each distinct event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
"Retrieve the average, minimum, and maximum event types for all events","SELECT AVG(event_type_id) AS avg_event_type, MIN(event_type_id) AS min_event_type, MAX(event_type_id) AS max_event_type FROM event;"
"Get the average, minimum, and maximum event types for all events","SELECT AVG(event_type_id) AS avg_event_type, MIN(event_type_id) AS min_event_type, MAX(event_type_id) AS max_event_type FROM event;"
Retrieve events that are closed and have a specific event type,"SELECT * FROM event WHERE event_type_id = 'Incident' AND closed_at IS NOT NULL;"
Get the events that are closed and have a specific event type,"SELECT * FROM event WHERE event_type_id = 'Incident' AND closed_at IS NOT NULL;"
Retrieve the total number of events grouped by event type for closed events only,"SELECT event_type_id, COUNT(*) AS event_count FROM event WHERE closed_at IS NOT NULL GROUP BY event_type_id;"
Get  the total number of events grouped by event type for closed events only,"SELECT event_type_id, COUNT(*) AS event_count FROM event WHERE closed_at IS NOT NULL GROUP BY event_type_id;"
"Retrieve events with event types other than ""Incident"" and ""Near Miss""","SELECT * FROM event WHERE event_type_id NOT IN ('Incident', 'Near Miss');"
"Get the events with event types other than ""Incident"" and ""Near Miss""","SELECT * FROM event WHERE event_type_id NOT IN ('Incident', 'Near Miss');"
"Retrieve events with event types containing the word ""Maintenance""","SELECT * FROM event WHERE event_type_id LIKE '%Maintenance%';"
"Retrieve events with event types categorized as ""Incident"" and have a specific harm level","SELECT * FROM event WHERE event_type_id = 'Incident' AND harm_level_id = 'Severe';"
"Get the events with event types categorized as ""Incident"" and have a specific harm level","SELECT * FROM event WHERE event_type_id = 'Incident' AND harm_level_id = 'Severe';"
Retrieve events with the highest occurrence for each event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id HAVING COUNT(*) = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM event GROUP BY event_type_id) AS subquery);"
Get the events with the highest occurrence for each event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id HAVING COUNT(*) = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM event GROUP BY event_type_id) AS subquery);"
Retrieve events that were created in a specific month and have a specific event type,"SELECT * FROM event WHERE event_type_id = 'Incident' AND MONTH(created_at) = 6;"
Get the events that were created in a specific month and have a specific event type:,"SELECT * FROM event WHERE event_type_id = 'Incident' AND MONTH(created_at) = [month];"
"Retrieve events with event types categorized as ""Near Miss"" and have a harm level of ""None""","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND harm_level_id = 'None';"
Retrieve the number of events for each event type in descending order,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id ORDER BY event_count DESC;"
Get the number of events for each event type in descending order,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id ORDER BY event_count DESC;"
"Retrieve events with event types categorized as ""Incident"" and created within a specific date range","SELECT * FROM event WHERE event_type_id = 'Incident' AND created_at BETWEEN '2023-01-01' AND '2023-06-30';"
"Get the events with event types categorized as ""Incident"" and created between ""2023-01-01"" to ""2023-06-30""","SELECT * FROM event WHERE event_type_id = 'Incident' AND created_at BETWEEN '2023-01-01' AND '2023-06-30';"
"Retrieve events with event types categorized as ""Near Miss"" and ordered by their creation dates","SELECT * FROM event WHERE event_type_id = 'Near Miss' ORDER BY created_at DESC;"
"Get the events with event types categorized as ""Near Miss"" and ordered by their creation dates","SELECT * FROM event WHERE event_type_id = 'Near Miss' ORDER BY created_at DESC;"
Retrieve all facilities,"SELECT * FROM facility;
Get the all facilities,"SELECT * FROM facility;
Retrieve all events with their corresponding facility details,"SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2 FROM event JOIN facility ON event.facility_id = facility.id;"
Get all the events with their corresponding facility details,"SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2 FROM event JOIN facility ON event.facility_id = facility.id;"
Retrieve events with a specific facility ID,"SELECT * FROM event WHERE facility_id = 123;"
Get the events with a specific facility ID,"SELECT * FROM event WHERE facility_id = 123;"
Retrieve events with a specific facility name,"SELECT event.* FROM event  JOIN facility ON event.facility_id = facility.id  WHERE facility.name = [Facility_name]';"
Retrieve the count of events for each facility,"SELECT facility.name, COUNT(*) AS event_count FROM event JOIN facility ON event.facility_id = facility.id GROUP BY facility.name;"
Get the count of events for each facility,"SELECT facility.name, COUNT(*) AS event_count FROM event JOIN facility ON event.facility_id = facility.id GROUP BY facility.name;"
Retrieve the count of events for each facility,"SELECT facility.name, COUNT(*) AS event_count FROM event JOIN facility ON event.facility_id = facility.id GROUP BY facility.name;"
Retrieve facilities with the highest number of events,"SELECT facility.name, COUNT(*) AS event_count FROM event JOIN facility ON event.facility_id = facility.id GROUP BY facility.name HAVING event_count = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM event GROUP BY facility_id) AS subquery);"
Get the facilities with the highest number of events,"SELECT facility.name, COUNT(*) AS event_count FROM event  JOIN facility ON event.facility_id = facility.id  GROUP BY facility.name HAVING event_count = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM event GROUP BY facility_id) AS subquery);"
"Retrieve facilities and their corresponding events with harm levels categorized as ""Severe""","SELECT facility.*, event.* FROM facility JOIN event ON facility.id = event.facility_id WHERE event.harm_level_id = 'Severe';"
"Get the facilities and their corresponding events with harm levels categorized as ""Severe""","SELECT facility.*, event.* FROM facility JOIN event ON facility.id = event.facility_id WHERE event.harm_level_id = 'Severe';"
Retrieve events and their corresponding facilities ordered by the creation date in descending order,"SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2  FROM event   JOIN facility ON event.facility_id = facility.id ORDER BY event.created_at DESC;"
Get the events and their corresponding facilities ordered by the creation date in descending order,"SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2   FROM event  JOIN facility ON event.facility_id = facility.id ORDER BY event.created_at DESC;"
Retrieve all facilities along with the total number of events associated with each facility,"SELECT facility.*, COUNT(event.id) AS event_count FROM facility  LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id;"
Get all facilities along with the total number of events associated with each facility,"SELECT facility.*, COUNT(event.id) AS event_count FROM facility LEFT JOIN event ON facility.id = event.facility_id; "
"Retrieve the count of events for each facility, ordered by the event count in descending order","SELECT facility.name, COUNT(event.id) AS event count  FROM facility LEFT JOIN event ON facility.id = event.facility_id  GROUP BY facility.id ORDER BY event_count DESC;"
"Get  the count of events for each facility, ordered by the event count in descending order:","SELECT facility.name, COUNT(event.id) AS event_count FROM facility LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id  ORDER BY event_count DESC;"
Retrieve facilities that have at least one event where the harm level is severe,"SELECT facility.* FROM facility  JOIN event ON facility.id = event.facility_id  WHERE event.harm_level_id = 'Severe';"
Get the facilities that have at least one event with a specific harm level,"SELECT facility.* FROM facility  JOIN event ON facility.id = event.facility_id  WHERE event.harm_level_id = 'Severe';"
Retrieve facilities and their corresponding events that are still open,"SELECT facility.*, event.* FROM facility JOIN event ON facility.id = event.facility_id  WHERE event.is_open = true;"
Get the facilities and their corresponding events that are still open,"SELECT facility.*, event.* FROM facility JOIN event  ON facility.id = event.facility_id WHERE event.is_open = true;"
Retrieve the average number of events per facility,"SELECT AVG(event_count) AS average_events_per_facility FROM (SELECT facility.id, COUNT(event.id) AS event_count  FROM facility LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id) AS subquery;"
Get  the average number of events per facility,"SELECT AVG(event_count) AS average_events_per_facility FROM (SELECT facility.id, COUNT(event.id) AS event_count  FROM facility LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id) AS subquery;"
Retrieve facilities that have no associated events,"SELECT facility.* FROM facility LEFT JOIN event ON facility.id = event.facility_id WHERE event.id IS NULL;"
Get the facilities that have no associated events,"SELECT facility.* FROM facility LEFT JOIN event ON facility.id = event.facility_id WHERE event.id IS NULL;"
"Retrieve the total count of events for each facility, including facilities with no events","SELECT facility.*, COUNT(event.id) AS event_count FROM facility LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id;"
"Retrieve the total count of events for each facility, including facilities with no events","SELECT facility.*, COUNT(event.id) AS event_count FROM facility LEFT JOIN event ON facility.id = event.facility_id  GROUP BY  facility.id;"
"Retrieve events with their corresponding facility details, sorted by the creation date in descending order","SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2  FROM event   JOIN facility ON event.facility_id = facility.id   ORDER BY event.created_at DESC;"
"Get the events with their corresponding facility details, sorted by the creation date in descending order","SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2  FROM event   JOIN facility ON event.facility_id = facility.id   ORDER BY event.created_at DESC;"
Retrieve the facility with the highest number of events,"SELECT facility.* FROM facility JOIN event ON facility.id = event.facility_id GROUP BY facility.id ORDER BY COUNT(event.id) DESC LIMIT 1;"
Get the facility with the highest number of events,"SELECT facility.* FROM facility JOIN event ON facility.id = event.facility_id GROUP BY facility.id ORDER BY COUNT(event.id) DESC LIMIT 1;"
Retrieve facilities that have more than a 10 number of events,"SELECT facility.* FROM facility JOIN event ON facility.id = event.facility_id  GROUP BY facility.id HAVING COUNT(event.id) > 10;"
Get the facilities that have more than a certain number of events,"SELECT facility.* FROM facility JOIN event ON facility.id = event.facility_id  GROUP BY facility.id HAVING COUNT(event.id) > 10;"
Get  the facility with the oldest event,"SELECT facility.* FROM facility  JOIN event ON facility.id = event.facility_id ORDER BY event.created_at ASC LIMIT 1;"
Retrieve facilities with no associated events,"SELECT facility.* FROM facility LEFT JOIN event ON facility.id = event.facility_id  WHERE event.id IS NULL;"
Get the facilities with no associated events,"SELECT facility.* FROM facility LEFT JOIN event ON facility.id = event.facility_id  WHERE event.id IS NULL;"
"Retrieve facilities and their corresponding events, sorted by facility name in ascending order","SELECT facility.*, event.* FROM facility LEFT JOIN event ON facility.id = event.facility_id   ORDER BY facility.name ASC;"
"Get facilities and their corresponding events, sorted by facility name in ascending order","SELECT facility.*, event.* FROM facility LEFT JOIN event ON facility.id = event.facility_id   ORDER BY facility.name ASC;"
"Retrieve the total count of events for each facility, sorted in descending order of event count","SELECT facility.name, COUNT(event.id) AS event_count  FROM facility  LEFT JOIN event ON facility.id = event.facility_id  GROUP BY facility.id ORDER BY event_count DESC;"
"Get the total count of events for each facility, sorted in descending order of event count","SELECT facility.name, COUNT(event.id) AS event_count  FROM facility  LEFT JOIN event ON facility.id = event.facility_id  GROUP BY facility.id ORDER BY event_count DESC;"
"Retrieve all records from the staff_directory table","SELECT * FROM staff_directory;"
"Retrieve all records from the assets table","SELECT * FROM assets;"
"Retrieve all records from the hazards table","SELECT * FROM hazards;"
"Retrieve all records from the event_staff_roles table","SELECT * FROM event_staff_roles;"
"Retrieve all records from the event_actions table","SELECT * FROM event_actions;"
"Retrieve all records from the formsettings_summarytools table","SELECT * FROM formsettings_summarytools;"
"Retrieve all records from the events table","SELECT * FROM events;"
"Retrieve all records from the users table","SELECT * FROM users;"
"Retrieve all records from the organizations table","SELECT * FROM organizations;"
"Retrieve all records from the pharmacies table","SELECT * FROM pharmacies;"
"Retrieve all events with harmt greater than 50 and is_open set to TRUE","SELECT * FROM events WHERE harmt > 50 AND is_open = TRUE;"
"Find all users with active status and type 'Manager'","SELECT * FROM users WHERE active = TRUE AND type = 'Manager';"
"Get the facilities with organization_id 'Org123' and is_active set to FALSE","SELECT * FROM facilities WHERE organization_id = 'Org123' AND is_active = FALSE;"
"Retrieve the assets with asset_type_id 'AT006' and pharmacies_id 'Pharma3'","SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3';"
"Retrieve all events created in the last 15 days","SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '15 days';"
"Retrieve all assets with an active status","SELECT * FROM assets WHERE active = TRUE;"
"Retrieve all hazards with a description containing the word 'fire'","SELECT * FROM hazards WHERE description ILIKE '%fire%';"
"Retrieve all event staff roles with an order greater than 10","SELECT * FROM event_staff_roles WHERE \"order\" > 10;"
"Retrieve all event actions with an action_date in the future","SELECT * FROM event_actions WHERE action_date > CURRENT_DATE;"
"Retrieve all form settings summary tools with a facility_id of 100","SELECT * FROM formsettings_summarytools WHERE facility_id = 100;"
"Retrieve all events with harmt between 30 and 50","SELECT * FROM events WHERE harmt BETWEEN 30 AND 50;"
"Retrieve all users with a profile_id of 500","SELECT * FROM users WHERE profiles_id = 500;"
"Retrieve all organizations with a country_id of 10","SELECT * FROM organizations WHERE countries_id = 10;"
"Retrieve all pharmacies created after '2022-01-01'","SELECT * FROM pharmacies WHERE created_at > '2022-01-01';"
"Retrieve all events where the harmt is null","SELECT * FROM events WHERE harmt IS NULL;"
"Retrieve all assets with an asset_type_id of 'AT005' or 'AT007'","SELECT * FROM assets WHERE asset_type_id IN ('AT005', 'AT007');"
"Retrieve all hazards with a name starting with 'Safety'","SELECT * FROM hazards WHERE name LIKE 'Safety%';"
"Retrieve all event staff roles ordered by name in descending order","SELECT * FROM event_staff_roles ORDER BY name DESC;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3')","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3');"
"Retrieve all form settings summary tools with an organization_id of 200","SELECT * FROM formsettings_summarytools WHERE organization_id = 200;"
"Retrieve all events with harmt not equal to 0","SELECT * FROM events WHERE harmt <> 0;"
"Retrieve all users with a date_created between '2022-01-01' and '2022-12-31'","SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31';"
"Retrieve all organizations with a name containing the word 'Healthcare'","SELECT * FROM organizations WHERE name ILIKE '%Healthcare%';"
"Retrieve all pharmacies where date_disabled is not null","SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;"
"Retrieve all events with a harmt greater than 50 ordered by harmt in descending order","SELECT * FROM events WHERE harmt > 50 ORDER BY harmt DESC;"
"Retrieve all assets with a created_at date in the last 7 days","SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days';"
"Retrieve all hazards with a description not containing the word 'chemical'","SELECT * FROM hazards WHERE description NOT ILIKE '%chemical%';"
"Retrieve all event staff roles with a forms_id between 100 and 200","SELECT * FROM event_staff_roles WHERE forms_id BETWEEN 100 AND 200;"
"Retrieve all event actions with an updated_at date in the future","SELECT * FROM event_actions WHERE updated_at > CURRENT_TIMESTAMP;"
"Retrieve all form settings summary tools with a tools_id of 500 or 600","SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600);"
"Retrieve all events with harmt equal to 0 or 100","SELECT * FROM events WHERE harmt = 0 OR harmt = 100;"
"Retrieve all users with a roles_id not equal to 1","SELECT * FROM users WHERE roles_id <> 1;"
"Retrieve all organizations with a created_at date before '2023-01-01'","SELECT * FROM organizations WHERE created_at < '2023-01-01';"
"Retrieve all pharmacies where name starts with 'Pharma' and ends with 'Inc'","SELECT * FROM pharmacies WHERE name LIKE 'Pharma%Inc';"
"Retrieve all events with harmt greater than or equal to 50 and less than 100","SELECT * FROM events WHERE harmt >= 50 AND harmt < 100;"
"Retrieve all assets with a serial_number containing the digits '123'","SELECT * FROM assets WHERE serial_number LIKE '%123%';"
"Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31'","SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';"
"Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order","SELECT * FROM event_staff_roles WHERE \"order\" <= 5 ORDER BY \"order\" ASC;"
"Retrieve all event actions with a user_id not in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id NOT IN (100, 200, 300);"
"Retrieve all form settings summary tools with an updated_by value of 'Admin'","SELECT * FROM formsettings_summarytools WHERE updated_by = 'Admin';"
"Retrieve all events with a harmt greater than or equal to 50 ordered by harmt in ascending order","SELECT * FROM events WHERE harmt >= 50 ORDER BY harmt ASC;"
"Retrieve all users with a date_created between '2022-01-01' and '2022-12-31' excluding weekends","SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM date_created) < 6;"
"Retrieve all organizations with a name starting with 'Medical' and ending with 'Center'","SELECT * FROM organizations WHERE name LIKE 'Medical%Center';"
"Retrieve all pharmacies where activate_at is not null and activated_by is null","SELECT * FROM pharmacies WHERE activate_at IS NOT NULL AND activated_by IS NULL;"
"Retrieve all events with a harmt not equal to 0 ordered by harmt in descending order","SELECT * FROM events WHERE harmt <> 0 ORDER BY harmt DESC;"
"Retrieve all assets with an updated_at date in the last 7 days","SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '7 days';"
"Retrieve all hazards with a description containing either 'fire' or 'explosion'","SELECT * FROM hazards WHERE description ILIKE '%fire%' OR description ILIKE '%explosion%';"
"Retrieve all event staff roles with a forms_id not between 100 and 200","SELECT * FROM event_staff_roles WHERE forms_id NOT BETWEEN 100 AND 200;"
"Retrieve all event actions with an updated_by value not equal to 'Admin'","SELECT * FROM event_actions WHERE updated_by <> 'Admin';"
"Retrieve all form settings summary tools with a tools_id not in (500, 600)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600);"
"Retrieve all events with harmt equal to 0 and 100","SELECT * FROM events WHERE harmt IN (0, 100);"
"Retrieve all users with a roles_id equal to 1","SELECT * FROM users WHERE roles_id = 1;"
"Retrieve all organizations with a created_at date after '2023-01-01'","SELECT * FROM organizations WHERE created_at > '2023-01-01';"
"Retrieve all pharmacies where name contains the word 'Pharmacy' and has an 'activated_by' value of 'Admin'","SELECT * FROM pharmacies WHERE name ILIKE '%Pharmacy%' AND activated_by = 'Admin';"
"Retrieve all events with harmt less than 50 or greater than 100","SELECT * FROM events WHERE harmt < 50 OR harmt > 100;"
"Retrieve all assets with a serial_number starting with 'ABC' or ending with 'XYZ'","SELECT * FROM assets WHERE serial_number LIKE 'ABC%' OR serial_number LIKE '%XYZ';"
"Retrieve all hazards with a created_at date not between '2022-01-01' and '2022-12-31'","SELECT * FROM hazards WHERE created_at NOT BETWEEN '2022-01-01' AND '2022-12-31';"
"Retrieve all event staff roles with an order less than or equal to 5 ordered by name in descending order","SELECT * FROM event_staff_roles WHERE \"order\" <= 5 ORDER BY name DESC;"
"Retrieve all event actions with a user_id in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id IN (100, 200, 300);"
"Retrieve all form settings summary tools with an updated_by value not equal to 'Admin'","SELECT * FROM formsettings_summarytools WHERE updated_by <> 'Admin';"
"Retrieve all events with a harmt greater than or equal to 50 ordered by date_created in ascending order","SELECT * FROM events WHERE harmt >= 50 ORDER BY date_created ASC;"
"Retrieve all users with a date_created not between '2022-01-01' and '2022-12-31'","SELECT * FROM users WHERE date_created NOT BETWEEN '2022-01-01' AND '2022-12-31';"
"Retrieve all organizations with a name containing the word 'Healthcare' and address containing the word 'Street'","SELECT * FROM organizations WHERE name ILIKE '%Healthcare%' AND address ILIKE '%Street%';"
"Retrieve all pharmacies where activate_at is not null or activated_by is not null","SELECT * FROM pharmacies WHERE activate_at IS NOT NULL OR activated_by IS NOT NULL;"
"Retrieve all events with a harmt equal to 0 ordered by harmt in ascending order","SELECT * FROM events WHERE harmt = 0 ORDER BY harmt ASC;"
"Retrieve all assets with an updated_at date in the last 30 days","SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '30 days';"
"Retrieve all hazards with a description not containing either 'fire' or 'explosion'","SELECT * FROM hazards WHERE description NOT ILIKE '%fire%' AND description NOT ILIKE '%explosion%';"
"Retrieve all event staff roles with a forms_id not in (100, 200)","SELECT * FROM event_staff_roles WHERE forms_id NOT IN (100, 200);"
"Retrieve all event actions with an updated_by value not equal to 'Admin' or 'Manager'","SELECT * FROM event_actions WHERE updated_by NOT IN ('Admin', 'Manager');"
"Retrieve all form settings summary tools with a tools_id not in (500, 600, 700)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600, 700);"
"Retrieve all events with harmt equal to 0, 50, or 100","SELECT * FROM events WHERE harmt IN (0, 50, 100);"
"Retrieve all users with a roles_id not equal to 1 or 2","SELECT * FROM users WHERE roles_id NOT IN (1, 2);"
"Retrieve all organizations with a created_at date before '2023-01-01' or after '2023-12-31'","SELECT * FROM organizations WHERE created_at < '2023-01-01' OR created_at > '2023-12-31';"
"Retrieve all pharmacies where name starts with 'Pharma' or ends with 'Inc'","SELECT * FROM pharmacies WHERE name LIKE 'Pharma%' OR name LIKE '%Inc';"
"Retrieve all events with harmt greater than or equal to 50 or less than 10","SELECT * FROM events WHERE harmt >= 50 OR harmt < 10;"
"Retrieve all assets with a serial_number containing either 'ABC' or 'XYZ'","SELECT * FROM assets WHERE serial_number LIKE '%ABC%' OR serial_number LIKE '%XYZ%';"
"Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31' excluding weekends","SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM created_at) < 6;"
"Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order and updated_by not equal to 'Admin'","SELECT * FROM event_staff_roles WHERE \"order\" <= 5 AND updated_by <> 'Admin' ORDER BY \"order\" ASC;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days';"
"Retrieve all form settings summary tools with an organization_id of 200 and updated_at in the last 30 days","SELECT * FROM formsettings_summarytools WHERE organization_id = 200 AND updated_at >= CURRENT_DATE - INTERVAL '30 days';"
"Retrieve all events with harmt not equal to 0 and 100 ordered by harmt in descending order and is_open set to TRUE","SELECT * FROM events WHERE harmt NOT IN (0, 100) AND is_open = TRUE ORDER BY harmt DESC;"
"Retrieve all assets with an active status and asset_type_id of 'AT005' or 'AT007'","SELECT * FROM assets WHERE active = TRUE AND asset_type_id IN ('AT005', 'AT007');"
"Retrieve all hazards with a description containing the word 'fire' and created_at between '2022-01-01' and '2022-12-31'","SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31';"
"Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100","SELECT * FROM event_staff_roles WHERE \"order\" >= 10 AND forms_id <> 100 ORDER BY name ASC;"
"Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager'","SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager');"
"Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100","SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id <> 100;"
"Retrieve all events with harmt between 30 and 50 and is_open set to TRUE","SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE;"
"Retrieve all users with a profile_id of 500 and active status","SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE;"
"Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01'","SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01';"
"Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin'","SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin';"
"Retrieve all events where the harmt is null and is_open set to FALSE","SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE;"
"Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order","SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC;"
"Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical'","SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%';"
"Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order","SELECT * FROM event_staff_roles WHERE \"order\" > 10 AND forms_id < 200 ORDER BY \"order\" DESC;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC;"
"Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin'","SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin';"
"Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE","SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC;"
"Retrieve all assets with a created_at date in the last 7 days and active status","SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE;"
"Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order","SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC;"
"Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order","SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC;"
"Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200","SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200);"
"Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order","SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC;"
"Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order","SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC;"
"Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order","SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC;"
"Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order","SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC;"
"Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order","SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC;"
"Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status","SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC;"
"Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order","SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC;"
"Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin'","SELECT * FROM event_staff_roles WHERE \"order\" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \"order\" DESC;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager'","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager');"
"Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order","SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC;"
"Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 10 rows","SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 10;"
"Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows","SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50;"
"Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows","SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20;"
"Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows","SELECT * FROM event_staff_roles WHERE \"order\" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5;"
"Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows","SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100;"
"Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows","SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200) LIMIT 50;"
"Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows","SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30;"
"Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows","SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20;"
"Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows","SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10;"
"Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows","SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50;"
"Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows","SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50;"
"Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows","SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100;"
"Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows","SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30;"
"Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows","SELECT * FROM event_staff_roles WHERE \"order\" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \"order\" DESC LIMIT 20;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50;"
"Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows","SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10;"
"Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows","SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100;"
"Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows offset by 10","SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50 OFFSET 10;"
"Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows offset by 5","SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20 OFFSET 5;"
"Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows offset by 2","SELECT * FROM event_staff_roles WHERE \"order\" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5 OFFSET 2;"
"Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20","SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin' 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;"
"Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10","SELECT * FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows offset by 5","SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30 OFFSET 5;"
"Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows offset by 5","SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20 OFFSET 5;"
"Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows offset by 2","SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10 OFFSET 2;"
"Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows offset by 10","SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50 OFFSET 10;"
"Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows offset by 5","SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50 OFFSET 5;"
"Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows offset by 20","SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100 OFFSET 20;"
"Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows offset by 10","SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30 OFFSET 10;"
"Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows offset by 5","SELECT * FROM event_staff_roles WHERE \"order\" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \"order\" DESC LIMIT 20 OFFSET 5;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
"Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows offset by 2","SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10 OFFSET 2;"
"Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows offset by 30","SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100 OFFSET 30;"
"Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows offset by 10 with only the serial_number and created_at columns","SELECT serial_number, created_at FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50 OFFSET 10;"
"Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows offset by 5 with only the name and description columns","SELECT name, description FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20 OFFSET 5;"
"Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows offset by 2 with only the name and order columns","SELECT name, \"order\" FROM event_staff_roles WHERE \"order\" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5 OFFSET 2;"
"Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20 with only the action_date and updated_by columns","SELECT action_date, updated_by FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;"
"Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns","SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows offset by 5 with only the event_id and harmt columns","SELECT event_id, harmt FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30 OFFSET 5;"
"Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows offset by 5 with only the user_id and date_created columns","SELECT user_id, date_created FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20 OFFSET 5;"
"Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows offset by 2 with only the organization_id and created_at columns","SELECT organization_id, created_at FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10 OFFSET 2;"
"Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows offset by 10 with only the pharmacy_id and created_at columns","SELECT pharmacy_id, created_at FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50 OFFSET 10;"
"Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows offset by 5 with only the event_id and date_created columns","SELECT event_id, date_created FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50 OFFSET 5;"
"Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows offset by 20 with only the asset_id and serial_number columns","SELECT asset_id, serial_number FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100 OFFSET 20;"
"Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows offset by 10 with only the hazard_id and name columns","SELECT hazard_id, name FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30 OFFSET 10;"
"Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows offset by 5 with only the role_id and order columns","SELECT role_id, \"order\" FROM event_staff_roles WHERE \"order\" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \"order\" DESC LIMIT 20 OFFSET 5;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
"Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows offset by 2 with only the tools_id and facility_id columns","SELECT tools_id, facility_id FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10 OFFSET 2;"
"Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows offset by 30 with only the event_id and harmt columns","SELECT event_id, harmt FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100 OFFSET 30;"
"Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows offset by 10 with only the serial_number and created_at columns","SELECT serial_number, created_at FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50 OFFSET 10;"
"Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows offset by 5 with only the name and description columns","SELECT name, description FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20 OFFSET 5;"
"Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows offset by 2 with only the name and order columns","SELECT name, \"order\" FROM event_staff_roles WHERE \"order\" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5 OFFSET 2;"
"Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20 with only the action_date and updated_by columns","SELECT action_date, updated_by FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin' 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;"
"Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns","SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows offset by 5 with only the event_id and harmt columns","SELECT event_id, harmt FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30 OFFSET 5;"
"Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows offset by 5 with only the user_id and date_created columns","SELECT user_id, date_created FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20 OFFSET 5;"
"Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows offset by 2 with only the organization_id and created_at columns","SELECT organization_id, created_at FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10 OFFSET 2;"
"Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows offset by 10 with only the pharmacy_id and created_at columns","SELECT pharmacy_id, created_at FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50 OFFSET 10;"
"Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows offset by 5 with only the event_id and date_created columns","SELECT event_id, date_created FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50 OFFSET 5;"
"Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows offset by 20 with only the asset_id and serial_number columns","SELECT asset_id, serial_number FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100 OFFSET 20;"
"Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows offset by 10 with only the hazard_id and name columns","SELECT hazard_id, name FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30 OFFSET 10;"
"Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows offset by 5 with only the role_id and order columns","SELECT role_id, \"order\" FROM event_staff_roles WHERE \"order\" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \"order\" DESC LIMIT 20 OFFSET 5;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1' 'Pharma2' 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
"Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows offset by 2 with only the tools_id and facility_id columns","SELECT tools_id, facility_id FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10 OFFSET 2;"
"Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows offset by 30 with only the event_id and harmt columns","SELECT event_id, harmt FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100 OFFSET 30;"
"Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows offset by 10 with only the serial_number and created_at columns","SELECT serial_number, created_at FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50 OFFSET 10;"
"Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows offset by 5 with only the name and description columns","SELECT name, description FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20 OFFSET 5;"
"Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows offset by 2 with only the name and order columns","SELECT name, \"order\" FROM event_staff_roles WHERE \"order\" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5 OFFSET 2;"
"Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20 with only the action_date and updated_by columns","SELECT action_date, updated_by FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin' 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;"
Retrieve all records from the staff_directory table,SELECT * FROM staff_directory;
Retrieve all records from the assets table,SELECT * FROM assets;
Retrieve all records from the hazards table,SELECT * FROM hazards;
Retrieve all records from the event_staff_roles table,SELECT * FROM event_staff_roles;
Retrieve all records from the event_actions table,SELECT * FROM event_actions;
Retrieve all records from the formsettings_summarytools table,SELECT * FROM formsettings_summarytools;
Retrieve all records from the events table,SELECT * FROM events;
Retrieve all records from the users table,SELECT * FROM users;
Retrieve all records from the organizations table,SELECT * FROM organizations;
Retrieve all records from the pharmacies table,SELECT * FROM pharmacies;
Retrieve all events with harmt greater than 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt > 50 AND is_open = TRUE;
Find all users with active status and type 'Manager',SELECT * FROM users WHERE active = TRUE AND type = 'Manager';
Get the facilities with organization_id 'Org123' and is_active set to FALSE,SELECT * FROM facilities WHERE organization_id = 'Org123' AND is_active = FALSE;
Retrieve the assets with asset_type_id 'AT006' and pharmacies_id 'Pharma3',SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3';
Retrieve all events created in the last 15 days,SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '15 days';
Retrieve all assets with an active status,SELECT * FROM assets WHERE active = TRUE;
Retrieve all hazards with a description containing the word 'fire',SELECT * FROM hazards WHERE description ILIKE '%fire%';
Retrieve all event staff roles with an order greater than 10,"SELECT * FROM event_staff_roles WHERE \order\"" > 10;"""
Retrieve all event actions with an action_date in the future,SELECT * FROM event_actions WHERE action_date > CURRENT_DATE;
Retrieve all form settings summary tools with a facility_id of 100,SELECT * FROM formsettings_summarytools WHERE facility_id = 100;
Retrieve all events with harmt between 30 and 50,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50;
Retrieve all users with a profile_id of 500,SELECT * FROM users WHERE profiles_id = 500;
Retrieve all organizations with a country_id of 10,SELECT * FROM organizations WHERE countries_id = 10;
Retrieve all pharmacies created after '2022-01-01',SELECT * FROM pharmacies WHERE created_at > '2022-01-01';
Retrieve all events where the harmt is null,SELECT * FROM events WHERE harmt IS NULL;
Retrieve all assets with an asset_type_id of 'AT005' or 'AT007',"SELECT * FROM assets WHERE asset_type_id IN ('AT005', 'AT007');"
Retrieve all hazards with a name starting with 'Safety',SELECT * FROM hazards WHERE name LIKE 'Safety%';
Retrieve all event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3')","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3');"
Retrieve all form settings summary tools with an organization_id of 200,SELECT * FROM formsettings_summarytools WHERE organization_id = 200;
Retrieve all events with harmt not equal to 0,SELECT * FROM events WHERE harmt <> 0;
Retrieve all users with a date_created between '2022-01-01' and '2022-12-31',SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all organizations with a name containing the word 'Healthcare',SELECT * FROM organizations WHERE name ILIKE '%Healthcare%';
Retrieve all pharmacies where date_disabled is not null,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve all events with a harmt greater than 50 ordered by harmt in descending order,SELECT * FROM events WHERE harmt > 50 ORDER BY harmt DESC;
Retrieve all assets with a created_at date in the last 7 days,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days';
Retrieve all hazards with a description not containing the word 'chemical',SELECT * FROM hazards WHERE description NOT ILIKE '%chemical%';
Retrieve all event staff roles with a forms_id between 100 and 200,SELECT * FROM event_staff_roles WHERE forms_id BETWEEN 100 AND 200;
Retrieve all event actions with an updated_at date in the future,SELECT * FROM event_actions WHERE updated_at > CURRENT_TIMESTAMP;
Retrieve all form settings summary tools with a tools_id of 500 or 600,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600);"
Retrieve all events with harmt equal to 0 or 100,SELECT * FROM events WHERE harmt = 0 OR harmt = 100;
Retrieve all users with a roles_id not equal to 1,SELECT * FROM users WHERE roles_id <> 1;
Retrieve all organizations with a created_at date before '2023-01-01',SELECT * FROM organizations WHERE created_at < '2023-01-01';
Retrieve all pharmacies where name starts with 'Pharma' and ends with 'Inc',SELECT * FROM pharmacies WHERE name LIKE 'Pharma%Inc';
Retrieve all events with harmt greater than or equal to 50 and less than 100,SELECT * FROM events WHERE harmt >= 50 AND harmt < 100;
Retrieve all assets with a serial_number containing the digits '123',SELECT * FROM assets WHERE serial_number LIKE '%123%';
Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order,"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 ORDER BY \""order\"" ASC;"""
"Retrieve all event actions with a user_id not in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id NOT IN (100, 200, 300);"
Retrieve all form settings summary tools with an updated_by value of 'Admin',SELECT * FROM formsettings_summarytools WHERE updated_by = 'Admin';
Retrieve all events with a harmt greater than or equal to 50 ordered by harmt in ascending order,SELECT * FROM events WHERE harmt >= 50 ORDER BY harmt ASC;
Retrieve all users with a date_created between '2022-01-01' and '2022-12-31' excluding weekends,SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM date_created) < 6;
Retrieve all organizations with a name starting with 'Medical' and ending with 'Center',SELECT * FROM organizations WHERE name LIKE 'Medical%Center';
Retrieve all pharmacies where activate_at is not null and activated_by is null,SELECT * FROM pharmacies WHERE activate_at IS NOT NULL AND activated_by IS NULL;
Retrieve all events with a harmt not equal to 0 ordered by harmt in descending order,SELECT * FROM events WHERE harmt <> 0 ORDER BY harmt DESC;
Retrieve all assets with an updated_at date in the last 7 days,SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '7 days';
Retrieve all hazards with a description containing either 'fire' or 'explosion',SELECT * FROM hazards WHERE description ILIKE '%fire%' OR description ILIKE '%explosion%';
Retrieve all event staff roles with a forms_id not between 100 and 200,SELECT * FROM event_staff_roles WHERE forms_id NOT BETWEEN 100 AND 200;
Retrieve all event actions with an updated_by value not equal to 'Admin',SELECT * FROM event_actions WHERE updated_by <> 'Admin';
"Retrieve all form settings summary tools with a tools_id not in (500, 600)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600);"
Retrieve all events with harmt equal to 0 and 100,"SELECT * FROM events WHERE harmt IN (0, 100);"
Retrieve all users with a roles_id equal to 1,SELECT * FROM users WHERE roles_id = 1;
Retrieve all organizations with a created_at date after '2023-01-01',SELECT * FROM organizations WHERE created_at > '2023-01-01';
Retrieve all pharmacies where name contains the word 'Pharmacy' and has an 'activated_by' value of 'Admin',SELECT * FROM pharmacies WHERE name ILIKE '%Pharmacy%' AND activated_by = 'Admin';
Retrieve all events with harmt less than 50 or greater than 100,SELECT * FROM events WHERE harmt < 50 OR harmt > 100;
Retrieve all assets with a serial_number starting with 'ABC' or ending with 'XYZ',SELECT * FROM assets WHERE serial_number LIKE 'ABC%' OR serial_number LIKE '%XYZ';
Retrieve all hazards with a created_at date not between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE created_at NOT BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order less than or equal to 5 ordered by name in descending order,"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 ORDER BY name DESC;"""
"Retrieve all event actions with a user_id in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id IN (100, 200, 300);"
Retrieve all form settings summary tools with an updated_by value not equal to 'Admin',SELECT * FROM formsettings_summarytools WHERE updated_by <> 'Admin';
Retrieve all events with a harmt greater than or equal to 50 ordered by date_created in ascending order,SELECT * FROM events WHERE harmt >= 50 ORDER BY date_created ASC;
Retrieve all users with a date_created not between '2022-01-01' and '2022-12-31',SELECT * FROM users WHERE date_created NOT BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all organizations with a name containing the word 'Healthcare' and address containing the word 'Street',SELECT * FROM organizations WHERE name ILIKE '%Healthcare%' AND address ILIKE '%Street%';
Retrieve all pharmacies where activate_at is not null or activated_by is not null,SELECT * FROM pharmacies WHERE activate_at IS NOT NULL OR activated_by IS NOT NULL;
Retrieve all events with a harmt equal to 0 ordered by harmt in ascending order,SELECT * FROM events WHERE harmt = 0 ORDER BY harmt ASC;
Retrieve all assets with an updated_at date in the last 30 days,SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '30 days';
Retrieve all hazards with a description not containing either 'fire' or 'explosion',SELECT * FROM hazards WHERE description NOT ILIKE '%fire%' AND description NOT ILIKE '%explosion%';
"Retrieve all event staff roles with a forms_id not in (100, 200)","SELECT * FROM event_staff_roles WHERE forms_id NOT IN (100, 200);"
Retrieve all event actions with an updated_by value not equal to 'Admin' or 'Manager',"SELECT * FROM event_actions WHERE updated_by NOT IN ('Admin', 'Manager');"
"Retrieve all form settings summary tools with a tools_id not in (500, 600, 700)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600, 700);"
"Retrieve all events with harmt equal to 0, 50, or 100","SELECT * FROM events WHERE harmt IN (0, 50, 100);"
Retrieve all users with a roles_id not equal to 1 or 2,"SELECT * FROM users WHERE roles_id NOT IN (1, 2);"
Retrieve all organizations with a created_at date before '2023-01-01' or after '2023-12-31',SELECT * FROM organizations WHERE created_at < '2023-01-01' OR created_at > '2023-12-31';
Retrieve all pharmacies where name starts with 'Pharma' or ends with 'Inc',SELECT * FROM pharmacies WHERE name LIKE 'Pharma%' OR name LIKE '%Inc';
Retrieve all events with harmt greater than or equal to 50 or less than 10,SELECT * FROM events WHERE harmt >= 50 OR harmt < 10;
Retrieve all assets with a serial_number containing either 'ABC' or 'XYZ',SELECT * FROM assets WHERE serial_number LIKE '%ABC%' OR serial_number LIKE '%XYZ%';
Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31' excluding weekends,SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM created_at) < 6;
Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order and updated_by not equal to 'Admin',"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 AND updated_by <> 'Admin' ORDER BY \""order\"" ASC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days';"
Retrieve all form settings summary tools with an organization_id of 200 and updated_at in the last 30 days,SELECT * FROM formsettings_summarytools WHERE organization_id = 200 AND updated_at >= CURRENT_DATE - INTERVAL '30 days';
Retrieve all events with harmt not equal to 0 and 100 ordered by harmt in descending order and is_open set to TRUE,"SELECT * FROM events WHERE harmt NOT IN (0, 100) AND is_open = TRUE ORDER BY harmt DESC;"
Retrieve all assets with an active status and asset_type_id of 'AT005' or 'AT007',"SELECT * FROM assets WHERE active = TRUE AND asset_type_id IN ('AT005', 'AT007');"
Retrieve all hazards with a description containing the word 'fire' and created_at between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id <> 100 ORDER BY name ASC;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager',"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager');"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id <> 100;"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE;
Retrieve all users with a profile_id of 500 and active status,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01',SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01';
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin',SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin';
Retrieve all events where the harmt is null and is_open set to FALSE,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order,SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC;
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical',SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%';
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 ORDER BY \""order\"" DESC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin',SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin';
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC;
Retrieve all assets with a created_at date in the last 7 days and active status,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC;
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order,"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200);"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin',"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager'","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager');"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 10 rows,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 10;
Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20;
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows,"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200) LIMIT 50;"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC LIMIT 20;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100;
Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows offset by 10,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50 OFFSET 10;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows offset by 5,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20 OFFSET 5;
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows offset by 2,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5 OFFSET 2;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20,SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin' 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10,SELECT * FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows offset by 5,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30 OFFSET 5;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows offset by 5,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20 OFFSET 5;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows offset by 2,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10 OFFSET 2;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows offset by 10,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50 OFFSET 10;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows offset by 5,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50 OFFSET 5;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows offset by 20,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100 OFFSET 20;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows offset by 10,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30 OFFSET 10;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows offset by 5,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC LIMIT 20 OFFSET 5;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows offset by 2,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10 OFFSET 2;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows offset by 30,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100 OFFSET 30;
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20 with only the action_date and updated_by columns,"SELECT action_date, updated_by FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns,"SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns,"SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1' 'Pharma2' 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all staff members' full names and employee IDs,"SELECT full_name, employee_id FROM staff_directory;"
Find the staff member with a specific ID,SELECT * FROM staff_directory WHERE id = <staff_id>;
Get the full name and registration number of active staff members,"SELECT full_name, reg_number FROM staff_directory WHERE is_active = true;"
Find staff members belonging to a specific organization,SELECT * FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the count of active staff members,SELECT COUNT(*) FROM staff_directory WHERE is_active = true;
Update the employee ID for a specific staff member,UPDATE staff_directory SET employee_id = <new_employee_id> WHERE id = <staff_id>;
Find all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Select the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Retrieve the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Find staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Select the staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Retrieve the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Select the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Get the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Find the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Get the count of staff members who are not active:,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the distinct organization IDs present in the staff directory,SELECT DISTINCT org_id FROM staff_directory;
Get the distinct organization IDs present in the staff directory,SELECT DISTINCT org_id FROM staff_directory;
Delete a staff member from the directory based on their ID,DELETE FROM staff_directory WHERE id = <staff_id>;
Retrieve the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Select the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Find the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Get the count of staff members working at a particular pharmacy,SELECT COUNT(*) FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve the full names and updated timestamps of recently created staff members,"SELECT full_name, updated_at FROM staff_directory ORDER BY created_at DESC LIMIT 5;"
List the full names and updated timestamps of recently created staff members,"SELECT full_name, updated_at FROM staff_directory ORDER BY created_at DESC LIMIT 5;"
Select the full names and updated timestamps of recently created staff members,"SELECT full_name, updated_at FROM staff_directory ORDER BY created_at DESC LIMIT 5;"
Find staff members who are locums (temporary replacements) and have a specific full name,SELECT * FROM staff_directory WHERE locum_full_name = '<locum_full_name>';
Get the employee IDs and registration numbers of active staff members belonging to a specific organization,"SELECT employee_id, reg_number FROM staff_directory WHERE is_active = true AND org_id = <organization_id>;"
Select the employee IDs and registration numbers of active staff members belonging to a specific organization,"SELECT employee_id, reg_number FROM staff_directory WHERE is_active = true AND org_id = <organization_id>;"
List the employee IDs and registration numbers of active staff members belonging to a specific organization,"SELECT employee_id, reg_number FROM staff_directory WHERE is_active = true AND org_id = <organization_id>;"
Retrieve the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Select the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Find staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
List the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Retrieve the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the full names and employee IDs of staff members with a specific official user ID,"SELECT full_name, employee_id FROM staff_directory WHERE official_user_id = <official_user_id>;"
Retrieve the count of fixed employees in the staff directory,SELECT COUNT(*) FROM staff_directory WHERE fixed = true;
Get the count of fixed employees in the staff directory,SELECT COUNT(*) FROM staff_directory WHERE fixed = true;
Retrieve the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
List the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Find the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Retrieve the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
List the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Select the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Get the distinct organization IDs present in the staff directory,SELECT DISTINCT org_id FROM staff_directory;
Find all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Select all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Retrieve the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Select the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Get the count of staff members in the staff directory,SELECT COUNT(*) FROM staff_directory;
Retrieve the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Select the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
List the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Find all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
List all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Select all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Get the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Select the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Get the distinct pharmacy IDs present in the staff directory,"SELECT full_name, official_user_id FROM staff_directory;"
Retrieve the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Select the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Get the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Find all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
List all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Select all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Get the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Select the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
List the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Retrieve the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Select the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Find all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Select all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Get the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Select the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Retrieve the full names and active statuses of staff members,"SELECT full_name, is_active FROM staff_directory;"
Retrieve the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Select the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Get the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Get the count of staff members working at a particular pharmacy,SELECT COUNT(*) FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve the full names and updated timestamps of recently created staff members,"SELECT full_name, updated_at FROM staff_directory ORDER BY created_at DESC LIMIT 5;"
Select the full names and updated timestamps of recently created staff members,"SELECT full_name, updated_at FROM staff_directory ORDER BY created_at DESC LIMIT 5;"
Find staff members who are locums (temporary replacements) and have a specific full name,SELECT * FROM staff_directory WHERE locum_full_name = '<locum_full_name>';
Select the staff members who are locums (temporary replacements) and have a specific full name,SELECT * FROM staff_directory WHERE locum_full_name = '<locum_full_name>';
Get the employee IDs and registration numbers of active staff members belonging to a specific organization,"SELECT employee_id, reg_number FROM staff_directory WHERE is_active = true AND org_id = <organization_id>;"
Select the employee IDs and registration numbers of active staff members belonging to a specific organization,"SELECT employee_id, reg_number FROM staff_directory WHERE is_active = true AND org_id = <organization_id>;"
Retrieve the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Select the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Find staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Find staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Select the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Retrieve the count of fixed employees in the staff directory,SELECT COUNT(*) FROM staff_directory WHERE fixed = true;
Get the count of fixed employees in the staff directory,SELECT COUNT(*) FROM staff_directory WHERE fixed = true;
Find staff members who are not active and have a specific registration number,SELECT * FROM staff_directory WHERE is_active = false AND reg_number = '<registration_number>';
Get the full names and creation timestamps of staff members working at a specific pharmacy,"SELECT full_name, created_at FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;"
Retrieve the full names and employee IDs of staff members belonging to a specific organization,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = <organization_id>;"
Get the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Select the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Find all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Select all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
List all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Retrieve the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the count of staff members who work at a specific pharmacy,SELECT COUNT(*) FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Select the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
List the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Find all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Select all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Get the distinct official user IDs of staff members belonging to a specific organization,SELECT DISTINCT official_user_id FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Select the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
List the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Retrieve the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Get the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
List the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Find all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Select all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Select the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Retrieve all pharmacies,SELECT * FROM pharmacies;
Select all from pharmacies,SELECT * FROM pharmacies;
Retrieve the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Select the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Retrieve the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
List the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve the pharmacies that were activated by a specific user,SELECT * FROM pharmacies WHERE activated_by = 'user_id';
Retrieve the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
Select the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
List the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
"Retrieve all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
"Select all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Select the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Get the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Retrieve the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Select the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Get the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Retrieve the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Select the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Get the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Retrieve the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
Select the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
"Retrieve the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Get the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Select the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
Retrieve the names of all pharmacies,SELECT name FROM pharmacies;
Get the names of all pharmacies,SELECT name FROM pharmacies;
Select the names of all pharmacies,SELECT name FROM pharmacies;
Retrieve the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Get the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Retrieve the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Select the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
List the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Retrieve the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Get the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Select the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Retrieve the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
Select the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
"Retrieve the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
"Select the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
Retrieve the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Select the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Retrieve the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Get the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Get the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Select the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Retrieve the count of pharmacies for each activation year,"SELECT EXTRACT(YEAR FROM activate_at) AS year, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY year;"
Retrieve the count of pharmacies for each activation year,"SELECT EXTRACT(YEAR FROM activate_at) AS year, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY year;"
Select the count of pharmacies for each activation year,"SELECT EXTRACT(YEAR FROM activate_at) AS year, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY year;"
Select the count of pharmacies for each activation year,"SELECT EXTRACT(YEAR FROM activate_at) AS year, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY year;"
Retrieve the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Select the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Select the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Get all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Select all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Retrieve the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
Select the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
"Retrieves all rows from the ""pharmacies"" table where the ""activate_at"" column falls between the dates '2023-06-01' and '2023-06-30'",SELECT * FROM pharmacies WHERE DATE(activate_at) BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies activated in the morning (before 12 PM),SELECT * FROM pharmacies WHERE EXTRACT(HOUR FROM activate_at) < 12;
Retrieve the pharmacies activated on weekends (Saturday or Sunday),"SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) IN (0, 6);"
Retrieve the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Get the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Select the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Retrieve the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Select the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Get the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Retrieve the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Get the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Retrieve pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Get pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Select pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Retrieve pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Get the  pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Select the pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Get pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Retrieve pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select the pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select pharmacies with both activation and enablement dates,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND activate_at IS NOT NULL;
Retrieve pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Select the pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Retrieve pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
Select the pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
"Select all columns from the ""organizations"" table",SELECT * FROM organizations;
"Retrieve all columns from the ""organizations"" table",SELECT * FROM organizations;
"Select only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Get only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Select distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
"Get the distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
Select organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Get organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Select organizations located in a new york city,SELECT * FROM organizations WHERE city = 'New York';
Retrieve the organizations located in a New York city,SELECT * FROM organizations WHERE city = 'New York';
Select organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Get the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Get the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with addresses in a specific country,SELECT * FROM organizations WHERE countries_id = <country_id>;
Select organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Retrieve the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Get the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
"Select organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Select organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Get the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Retrieve the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
Select organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Retrieve the organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Select organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Retrieve the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Get the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
"Select organizations with names containing the word ""Tech""",SELECT * FROM organizations WHERE name LIKE '%Tech%';
"Select organizations located in cities starting with the letter ""C""",SELECT * FROM organizations WHERE city LIKE 'C%';
"Select organizations located in cities starting with the letter ""S""",SELECT * FROM organizations WHERE city LIKE 'S%';
"Select organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Select organizations created in the last 30 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY city;"
"Get the organizations created in the last 30 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY city;"
"Get the organizations created in the last 30 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY city;"
"Select organizations with trial periods ending in the next 7 days, ordered by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY city;"
"Get the organizations with trial periods ending in the next 7 days, ordered by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY city;"
"Get the organizations with trial periods ending in the next 7 days, ordered by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY city;"
"Select organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Retrieve the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Select organizations with trial periods ending in the next 7 days, located in London","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city = 'London';"
"Select organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Select organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Retrieve the organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Select organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Select organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Select organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
"Get the organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
Select organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
Retrieve the organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
"Select organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Get the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Retrieve the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Select organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Retrieve the organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Select organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
"Retrieve the organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
Select organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
Retrieve the organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
"Select organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Select organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Retrieve the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Get the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Select organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Retrieve the organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Select organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
Select organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get the organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
"Select organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Retrieve the  organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
Select organizations with trial periods ending in the future and located in a San Francisco,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
Retrieve the organizations with trial periods ending in the future and located in a specific city,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
"Select organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Retrieve the organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Select organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Retrieve the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Get the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Select organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Get the organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Select organizations located in London, ordered by trial end date in descending order",SELECT * FROM organizations WHERE city = 'London' ORDER BY trial_ends_at DESC;
"Select organizations located in London, ordered by trial end date in descending order",SELECT * FROM organizations WHERE city = 'London' ORDER BY trial_ends_at DESC;
"Select organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Select organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Retrieve the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Get the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Select organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Select organizations with names starting with the letter ""A"" or ""B"" and located in cities with more than 3 organizations",SELECT * FROM organizations WHERE (name LIKE 'A%' OR name LIKE 'B%') AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 3);
"Select organizations with trial periods ending in the next 30 days and located in a specific country, ordered by trial end date and then by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at, city;"
"Get the organizations with trial periods ending in the next 30 days and located in a specific country, ordered by trial end date and then by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at, city;"
"Get the organizations with trial periods ending in the next 30 days and located in a specific country, ordered by trial end date and then by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at, city;"
Retrieve all users with active status,SELECT * FROM users WHERE active = true;
Select all users with active status,SELECT * FROM users WHERE active = true;
Get all users with active status.,SELECT * FROM users WHERE active = true;
Retrieve all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Select all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Retrieve all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Select all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Get all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Retrieve all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Select all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Retrieve active users,SELECT * FROM users WHERE active = 1;
Select all the active users,SELECT * FROM users WHERE active = 1;
Retrieve users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Select users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Retrieve users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Select users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Get users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Retrieve users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Retrieve users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Select the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Get the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Retrieve users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Select the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Get the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Retrieve users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Select the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Get the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Retrieve users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Select the users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Retrieve active users where profile ID is 1,SELECT * FROM users WHERE profiles_id =1  AND active = 1;
Retrieve users with a specific role ID and updated in the last 30 days,SELECT * FROM users WHERE roles_id = <role_id> AND date_updated >= NOW() - INTERVAL 30 DAY;
Retrieve all events,SELECT * FROM events;
Select all events,SELECT * FROM events;
Retrieve the full names of users associated with events,SELECT users_fullname FROM events;
Select the full names of users associated with events,SELECT users_fullname FROM events;
Get the full names of users associated with events,SELECT users_fullname FROM events;
Retrieve the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Select  the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Get the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Retrieve the organizations associated with events,SELECT organization_id FROM events;
Select the organizations associated with events,SELECT organization_id FROM events;
Get the organizations associated with events,SELECT organization_id FROM events;
Retrieve the types of events,SELECT events_type_id FROM events;
Select  the types of events,SELECT events_type_id FROM events;
Get the types of events,SELECT events_type_id FROM events;
Retrieve the prescribers involved in events,SELECT prescribers_id FROM events;
Select the prescribers involved in events,SELECT prescribers_id FROM events;
List the prescribers involved in events,SELECT prescribers_id FROM events;
Retrieve the reporters of events,SELECT reporters_id FROM events;
Select  the reporters of events,SELECT reporters_id FROM events;
Retrieve the misuses associated with events,SELECT misuses_id FROM events;
Select  the misuses associated with events,SELECT misuses_id FROM events;
Get the misuses associated with events,SELECT misuses_id FROM events;
Retrieve the open events,SELECT * FROM events WHERE is_open = true;
Select the open events,SELECT * FROM events WHERE is_open = true;
Get the open events,SELECT * FROM events WHERE is_open = true;
Retrieve the closed events,SELECT * FROM events WHERE is_open = false;
Select the closed events,SELECT * FROM events WHERE is_open = false;
Get the closed events,SELECT * FROM events WHERE is_open = false;
Retrieve the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Select the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Get the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Retrieve the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Select the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Get the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Retrieve all form settings summary tools,SELECT * FROM formsettings_summarytools;
Select all form settings summary tools,SELECT * FROM formsettings_summarytools;
Get all form settings summary tools,SELECT * FROM formsettings_summarytools;
Retrieve the tools where id is 2,SELECT * FROM formsettings_summarytools WHERE tools_id = 2;
Retrieve the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Select the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Retrieve the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = 1;
Select the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_id>;
Retrieve the form settings updated after a specific date,SELECT * FROM formsettings_summarytools WHERE updated_at > '<date>';
Retrieve the form settings updated within a specific date range,SELECT * FROM formsettings_summarytools WHERE updated_at BETWEEN '<start_date>' AND '<end_date>';
Retrieve the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Select  the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Get the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Retrieve the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Select the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Get the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Select the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Get the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Retrieve the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Select the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Get the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
"Retrieve the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
"Select the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
Retrieve the distinct form IDs and facility IDs from the form settings,"SELECT DISTINCT forms_id, facility_id FROM formsettings_summarytools;"
Select the distinct form IDs and facility IDs from the form settings,"SELECT DISTINCT forms_id, facility_id FROM formsettings_summarytools;"
Select the distinct form IDs and facility IDs from the form settings,"SELECT DISTINCT forms_id, facility_id FROM formsettings_summarytools;"
"Retrieve the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Select the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Get the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
Retrieve the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Select the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Get the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the distinct organization IDs from the form settings,SELECT DISTINCT organization_id FROM formsettings_summarytools;
Select the distinct organization IDs from the form settings,SELECT DISTINCT organization_id FROM formsettings_summarytools;
Select the distinct organization IDs from the form settings,SELECT DISTINCT organization_id FROM formsettings_summarytools;
Retrieve the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Get the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
Select  the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
"Retrieve the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Select the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Get the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
Retrieve the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Select the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Select the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Get the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Retrieve the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Select the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Retrieve the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Select the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Get the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Retrieve the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Select the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Get the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Retrieve the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Select the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Get the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Retrieve the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Select the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Get the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Retrieve the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Select the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Get the average count of form settings per facility,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Retrieve the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Select the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Get the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Retrieve the sum of counts for each facility,"SELECT facility_id, SUM(count) AS total_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery GROUP BY facility_id;"
Retrieve the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select all event actions,SELECT * FROM event_actions;
Retrieve all event actions,SELECT * FROM event_actions;
Get all the event actions,SELECT * FROM event_actions;
Select event actions where user id is 1,SELECT * FROM event_actions WHERE user_id =1;
Select event actions for a specific user,SELECT * FROM event_actions WHERE user_id = <user_id>;
Select event actions for a specific pharmacy,SELECT * FROM event_actions WHERE user_pharmacy_id = <user_pharmacy_id>;
Select event actions created on a specific date,SELECT * FROM event_actions WHERE date_created = <date_created>;
Select event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Retreive event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Get the event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Inner Join between event_actions and users table on user_id,SELECT * FROM event_actions INNER JOIN user ON event_actions.user_id = users.user_id;
Inner Join between event_actions and users table on user_id and aggregate count of event_actions,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate average of distinct event IDs","SELECT users.*, pharmacy.*, AVG(DISTINCT event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
Inner Join between event_actions and users table on user_id and aggregate count of event_actions with a specific date,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created = '2023-07-16' GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions with a specific user ID,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions with a specific date range,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created BETWEEN '2023-07-01' AND '2023-07-15' GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions with a specific user ID,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions with a specific pharmacy ID","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs with a specific event ID","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.events_id = 54321 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs with a specific user ID and pharmacy ID","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE users.user_id = 12345 AND pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
Count the total number of event actions,SELECT COUNT(*) AS total_actions FROM event_actions;
Count the number of event actions for each user,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id;"
Calculate the average number of event actions per user,"SELECT AVG(total_actions) AS average_actions per_user  FROM (SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id) AS subquery;"
Find the user with the highest number of event actions,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_id   ORDER BY total_actions DESC LIMIT 1;"
Calculate the total number of event actions per date created,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created;"
Find the date with the highest number of event actions,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created ORDER BY total_actions DESC LIMIT 1;"
Calculate the average time taken to complete event actions,"SELECT AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions;"
Calculate the maximum time taken to complete an event action,"SELECT MAX(DATEDIFF(date_done, action_date)) AS max_completion_time FROM event_actions;"
Calculate the minimum time taken to complete an event action,"SELECT MIN(DATEDIFF(date_done, action_date)) AS min_completion_time FROM event_actions;"
Find the user who updated the most event actions,"SELECT updated_by, COUNT(*) AS total_updated_actions FROM event_actions GROUP BY updated_by  ORDER BY total_updated_actions DESC LIMIT 1;"
Calculate the average number of event actions per user pharmacy,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY  user_pharmacy_id;"
Find the user pharmacy with the highest number of event actions,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_pharmacy_id ORDER BY total_actions DESC  LIMIT 1;"
Calculate the total number of event actions per month,"SELECT DATE_FORMAT(date_created, '%Y-%m') AS month, COUNT(*) AS total_actions FROM event_actions GROUP BY month;"
Calculate the average number of event actions per day of the week,"SELECT DAYNAME(date_created) AS day_of_week, COUNT(*) AS total_actions FROM event_actions GROUP BY day_of_week;"
Calculate the average time between action and completion for each user,"SELECT user_id, AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions GROUP BY user_id;"
Calculate the total number of event actions per user and user pharmacy,"SELECT user_id, user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id, user_pharmacy_id;"
Retrieve all event staff roles,SELECT * FROM event_staff_roles;
Select all event staff roles,SELECT * FROM event_staff_roles;
Get all event staff roles,SELECT * FROM event_staff_roles;
Retrieve event staff role by name,SELECT * FROM event_staff_roles WHERE name = 'RoleName';
Retrieve event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Select event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Get event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Retrieve event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 'FormID';
Select event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 1;
Retrieve event staff roles updated by user id 1,SELECT * FROM event_staff_roles WHERE updates_by = 1;
Retrieve the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Select the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Get the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Retrieve the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Select the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Retrieve the count of event staff roles,SELECT COUNT(*) FROM event_staff_roles;
Retrieve the count of event staff roles,SELECT COUNT(*) FROM event_staff_roles;
Get the count of event staff roles,SELECT COUNT(*) FROM event_staff_roles;
Retrieve the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Select the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Get the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Retrieve the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Select the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Get the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Retrieve the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Select the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Get the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Retrieve the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Select the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Get the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Retrieve the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Select the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Get the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Retrieve event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Select event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Retrieve event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Select event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Retrieve the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Select the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Get the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Retrieve event staff roles with an order greater than 10,SELECT * FROM event_staff_roles WHERE order > 10;
Retrieve the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Select the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Get the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
"Retrieve event staff roles with names ending with ""a""",SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Select the event staff roles with names ending with A,SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Retrieve event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
Select the event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
"Retrieve event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Select the event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Retrieve the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Select the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Get the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
Retrieve the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Retrieve the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Select the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Get the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Retrieve the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Select the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Get the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Retrieve the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Select the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Get the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Retrieve event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Select the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Get the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
"Select the event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Get the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Retrieve the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
Select the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
Retrieve the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Select the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Get the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Retrieve event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
Select the event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve the count of event staff roles for each facility ID, and order the result by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Select the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Get the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Retrieve event staff roles with order values greater 5, ordered by order",SELECT * FROM event_staff_roles WHERE order > 5 ORDER BY order;
"Retrieve the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
"Select the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT DISTINCT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select all hazards,SELECT * FROM hazards;
Select hazards by their names,SELECT * FROM hazards WHERE name = 'your_hazard_name';
Select hazards where organization hazard ID is 1,SELECT * FROM hazards WHERE organization_hazard_id = 1;
Select hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Retrieve the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Get the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Select the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Retrieve the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Get the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Select hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Retrieve the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Get the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Select hazards with null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Retrieve the hazards with null pharmacy IDs:,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Select hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Retrieve the hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Select hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Get hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
List the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select hazards updated within the last 6 months,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Retrieve the hazards updated within the last 6 months:,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Get the count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Calculate the average number of hazards per pharmacy,SELECT AVG(pharmacies_id) AS avg_hazards_per_pharmacy FROM hazards;
Find the maximum created date among hazards,SELECT MAX(created_at) AS max_created_date FROM hazards;
Determine the minimum updated date among hazards,SELECT MIN(updated_at) AS min_updated_date FROM hazards;
Calculate the sum of pharmacies' IDs for all hazards,SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards;
Calculate the average length of hazard descriptions,SELECT AVG(LENGTH(description)) AS avg_description_length FROM hazards;
Determine the maximum number of hazards created in a single day,SELECT COUNT(*) AS max_hazards_created FROM hazards GROUP BY DATE(created_at) ORDER BY max_hazards_created DESC LIMIT 1;
Find the minimum number of hazards updated in a single day,SELECT COUNT(*) AS min_hazards_updated FROM hazards GROUP BY DATE(updated_at) ORDER BY min_hazards_updated ASC LIMIT 1;
Calculate the average difference in days between created and updated dates for hazards,"SELECT AVG(DATEDIFF(updated_at, created_at)) AS avg_days_difference FROM hazards;"
Determine the sum of pharmacy IDs for hazards updated within the last 30 days,"SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Calculate the total number of hazards for each pharmacy,"SELECT pharmacies_id, COUNT(*) AS total_hazards FROM hazards GROUP BY pharmacies_id;"
Determine the sum of pharmacy IDs for hazards with a specific name and created within the last 30 days,"SELECT name, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE name = 'your_hazard_name' AND created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY name;"
Calculate the average number of hazards per week,"SELECT YEARWEEK(created_at) AS week, COUNT(*) AS hazards_per_week FROM hazards GROUP BY week;"
Calculate the maximum difference in days between created and updated dates for hazards,"SELECT MAX(DATEDIFF(updated_at, created_at)) AS max_days_difference FROM hazards;"
Calculate the minimum difference in days between created and updated dates for hazards,"SELECT MIN(DATEDIFF(updated_at, created_at)) AS min_days_difference FROM hazards;"
Find the maximum length of hazard descriptions,SELECT MAX(LENGTH(description)) AS max_description_length FROM hazards;
Determine the average number of hazards per day,"SELECT DATE(created_at) AS created_date, COUNT(*) AS hazards_per_day FROM hazards GROUP BY created_date;"
Find the minimum number of hazards updated on a specific date,"SELECT DATE(updated_at) AS updated_date, COUNT(*) AS min_hazards_updated FROM hazards GROUP BY updated_date ORDER BY min_hazards_updated ASC LIMIT 1;"
Calculate the total number of hazards created per month,"SELECT YEAR(created_at) AS year, MONTH(created_at) AS month, COUNT(*) AS hazards_count FROM hazards GROUP BY year, month;"
Calculate the sum of pharmacy IDs for hazards created in each year,"SELECT YEAR(created_at) AS year, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards GROUP BY year;"
Find the average difference in hours between created and updated timestamps for hazards,"SELECT AVG(TIMESTAMPDIFF(HOUR, created_at, updated_at)) AS avg_hours_difference FROM hazards;"
Retrieve all staff members' full names and employee IDs,"SELECT full_name, employee_id FROM staff_directory;"
Find the staff member with a specific ID,SELECT * FROM staff_directory WHERE id = <staff_id>;
Get the full name and registration number of active staff members,"SELECT full_name, reg_number FROM staff_directory WHERE is_active = true;"
Find staff members belonging to a specific organization,SELECT * FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the count of active staff members,SELECT COUNT(*) FROM staff_directory WHERE is_active = true;
Update the employee ID for a specific staff member,UPDATE staff_directory SET employee_id = <new_employee_id> WHERE id = <staff_id>;
Find all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Select the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Retrieve the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Find staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Select the staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Retrieve the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Select the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Get the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Find the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Get the count of staff members who are not active:,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the distinct organization IDs present in the staff directory,SELECT DISTINCT org_id FROM staff_directory;
Delete a staff member from the directory based on their ID,DELETE FROM staff_directory WHERE id = <staff_id>;
Find the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
List the full names and updated timestamps of recently created staff members,"SELECT full_name, updated_at FROM staff_directory ORDER BY created_at DESC LIMIT 5;"
List the employee IDs and registration numbers of active staff members belonging to a specific organization,"SELECT employee_id, reg_number FROM staff_directory WHERE is_active = true AND org_id = <organization_id>;"
List the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Retrieve the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the full names and employee IDs of staff members with a specific official user ID,"SELECT full_name, employee_id FROM staff_directory WHERE official_user_id = <official_user_id>;"
Retrieve the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
List the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Find the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Retrieve the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
List the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Select the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Find all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Select all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Retrieve the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Select the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Get the count of staff members in the staff directory,SELECT COUNT(*) FROM staff_directory;
Retrieve the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Select the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
List the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Find all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
List all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Select all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Get the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Get the distinct pharmacy IDs present in the staff directory,"SELECT full_name, official_user_id FROM staff_directory;"
Retrieve the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Select the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Get the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Find all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
List all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Select all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Get the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Select the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
List the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Retrieve the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Select the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Find all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Select all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Get the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Select the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Retrieve the full names and active statuses of staff members,"SELECT full_name, is_active FROM staff_directory;"
Get the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Select the staff members who are locums (temporary replacements) and have a specific full name,SELECT * FROM staff_directory WHERE locum_full_name = '<locum_full_name>';
Select the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Find staff members who are not active and have a specific registration number,SELECT * FROM staff_directory WHERE is_active = false AND reg_number = '<registration_number>';
Get the full names and creation timestamps of staff members working at a specific pharmacy,"SELECT full_name, created_at FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;"
Retrieve the full names and employee IDs of staff members belonging to a specific organization,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = <organization_id>;"
Get the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Select the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Find all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Select all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
List all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Retrieve the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the count of staff members who work at a specific pharmacy,SELECT COUNT(*) FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Select the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
List the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Find all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Select all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Get the distinct official user IDs of staff members belonging to a specific organization,SELECT DISTINCT official_user_id FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Select the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
List the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Retrieve the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Get the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
List the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Find all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Select all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Select the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Retrieve all pharmacies,SELECT * FROM pharmacies;
Select all from pharmacies,SELECT * FROM pharmacies;
Retrieve the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Select the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Retrieve the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
List the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve the pharmacies that were activated by a specific user,SELECT * FROM pharmacies WHERE activated_by = 'user_id';
Retrieve the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
Select the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
List the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
"Retrieve all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
"Select all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Select the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Get the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Retrieve the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Select the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Get the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Retrieve the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Select the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Get the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Retrieve the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
Select the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
"Retrieve the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Get the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Select the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
Retrieve the names of all pharmacies,SELECT name FROM pharmacies;
Get the names of all pharmacies,SELECT name FROM pharmacies;
Select the names of all pharmacies,SELECT name FROM pharmacies;
Retrieve the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Get the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Retrieve the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Select the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
List the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Retrieve the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Get the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Select the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Retrieve the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
Select the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
"Retrieve the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
"Select the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
Retrieve the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Select the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Retrieve the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Select the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Retrieve the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Get all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Select all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Retrieve the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
Select the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
"Retrieves all rows from the ""pharmacies"" table where the ""activate_at"" column falls between the dates '2023-06-01' and '2023-06-30'",SELECT * FROM pharmacies WHERE DATE(activate_at) BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies activated in the morning (before 12 PM),SELECT * FROM pharmacies WHERE EXTRACT(HOUR FROM activate_at) < 12;
Retrieve the pharmacies activated on weekends (Saturday or Sunday),"SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) IN (0, 6);"
Retrieve the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Get the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Select the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Retrieve the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Select the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Get the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Retrieve the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Get the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Retrieve pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Get pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Select pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Retrieve pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Get the  pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Select the pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Get pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Retrieve pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select the pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select pharmacies with both activation and enablement dates,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND activate_at IS NOT NULL;
Retrieve pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Select the pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Retrieve pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
Select the pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
"Select all columns from the ""organizations"" table",SELECT * FROM organizations;
"Retrieve all columns from the ""organizations"" table",SELECT * FROM organizations;
"Select only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Get only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Select distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
"Get the distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
Select organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Get organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Select organizations located in a new york city,SELECT * FROM organizations WHERE city = 'New York';
Retrieve the organizations located in a New York city,SELECT * FROM organizations WHERE city = 'New York';
Select organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Get the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Get the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with addresses in a specific country,SELECT * FROM organizations WHERE countries_id = <country_id>;
Select organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Retrieve the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Get the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
"Select organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Select organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Get the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Retrieve the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
Select organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Retrieve the organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Select organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Retrieve the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Get the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
"Select organizations with names containing the word ""Tech""",SELECT * FROM organizations WHERE name LIKE '%Tech%';
"Select organizations located in cities starting with the letter ""C""",SELECT * FROM organizations WHERE city LIKE 'C%';
"Select organizations located in cities starting with the letter ""S""",SELECT * FROM organizations WHERE city LIKE 'S%';
"Select organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Select organizations created in the last 30 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY city;"
"Select organizations with trial periods ending in the next 7 days, ordered by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY city;"
"Select organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Retrieve the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Select organizations with trial periods ending in the next 7 days, located in London","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city = 'London';"
"Select organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Select organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Retrieve the organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Select organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Select organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Select organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
"Get the organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
Select organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
Retrieve the organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
"Select organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Get the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Retrieve the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Select organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Retrieve the organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Select organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
"Retrieve the organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
Select organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
Retrieve the organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
"Select organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Select organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Retrieve the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Get the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Select organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Retrieve the organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Select organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
Select organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get the organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
"Select organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Retrieve the  organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
Select organizations with trial periods ending in the future and located in a San Francisco,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
Retrieve the organizations with trial periods ending in the future and located in a specific city,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
"Select organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Retrieve the organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Select organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Retrieve the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Get the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Select organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Get the organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Select organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Select organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Retrieve the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Get the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Select organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Select organizations with names starting with the letter ""A"" or ""B"" and located in cities with more than 3 organizations",SELECT * FROM organizations WHERE (name LIKE 'A%' OR name LIKE 'B%') AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 3);
"Select organizations with trial periods ending in the next 30 days and located in a specific country, ordered by trial end date and then by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at, city;"
Retrieve all users with active status,SELECT * FROM users WHERE active = true;
Select all users with active status,SELECT * FROM users WHERE active = true;
Get all users with active status.,SELECT * FROM users WHERE active = true;
Retrieve all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Select all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Retrieve all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Select all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Get all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Retrieve all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Select all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Retrieve active users,SELECT * FROM users WHERE active = 1;
Select all the active users,SELECT * FROM users WHERE active = 1;
Retrieve users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Select users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Select users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Get users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Retrieve users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Select the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Get the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Retrieve users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Select the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Get the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Retrieve users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Select the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Get the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Retrieve users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Select the users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Retrieve active users where profile ID is 1,SELECT * FROM users WHERE profiles_id =1  AND active = 1;
Retrieve users with a specific role ID and updated in the last 30 days,SELECT * FROM users WHERE roles_id = <role_id> AND date_updated >= NOW() - INTERVAL 30 DAY;
Retrieve all events,SELECT * FROM events;
Select all events,SELECT * FROM events;
Retrieve the full names of users associated with events,SELECT users_fullname FROM events;
Select the full names of users associated with events,SELECT users_fullname FROM events;
Get the full names of users associated with events,SELECT users_fullname FROM events;
Retrieve the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Select  the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Get the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Retrieve the organizations associated with events,SELECT organization_id FROM events;
Select the organizations associated with events,SELECT organization_id FROM events;
Get the organizations associated with events,SELECT organization_id FROM events;
Retrieve the types of events,SELECT events_type_id FROM events;
Select  the types of events,SELECT events_type_id FROM events;
Get the types of events,SELECT events_type_id FROM events;
Retrieve the prescribers involved in events,SELECT prescribers_id FROM events;
Select the prescribers involved in events,SELECT prescribers_id FROM events;
List the prescribers involved in events,SELECT prescribers_id FROM events;
Retrieve the reporters of events,SELECT reporters_id FROM events;
Select  the reporters of events,SELECT reporters_id FROM events;
Retrieve the misuses associated with events,SELECT misuses_id FROM events;
Select  the misuses associated with events,SELECT misuses_id FROM events;
Get the misuses associated with events,SELECT misuses_id FROM events;
Retrieve the open events,SELECT * FROM events WHERE is_open = true;
Select the open events,SELECT * FROM events WHERE is_open = true;
Get the open events,SELECT * FROM events WHERE is_open = true;
Retrieve the closed events,SELECT * FROM events WHERE is_open = false;
Select the closed events,SELECT * FROM events WHERE is_open = false;
Get the closed events,SELECT * FROM events WHERE is_open = false;
Retrieve the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Select the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Get the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Retrieve the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Select the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Get the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Retrieve all form settings summary tools,SELECT * FROM formsettings_summarytools;
Select all form settings summary tools,SELECT * FROM formsettings_summarytools;
Get all form settings summary tools,SELECT * FROM formsettings_summarytools;
Retrieve the tools where id is 2,SELECT * FROM formsettings_summarytools WHERE tools_id = 2;
Retrieve the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Select the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Retrieve the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = 1;
Select the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_id>;
Retrieve the form settings updated after a specific date,SELECT * FROM formsettings_summarytools WHERE updated_at > '<date>';
Retrieve the form settings updated within a specific date range,SELECT * FROM formsettings_summarytools WHERE updated_at BETWEEN '<start_date>' AND '<end_date>';
Retrieve the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Select  the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Get the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Retrieve the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Select the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Get the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Select the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Get the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Retrieve the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Select the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Get the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
"Retrieve the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
"Select the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
Retrieve the distinct form IDs and facility IDs from the form settings,"SELECT DISTINCT forms_id, facility_id FROM formsettings_summarytools;"
"Retrieve the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Select the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Get the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
Retrieve the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Select the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Get the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the distinct organization IDs from the form settings,SELECT DISTINCT organization_id FROM formsettings_summarytools;
Retrieve the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Get the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
Select  the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
"Retrieve the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Select the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Get the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
Retrieve the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Select the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Select the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Get the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Retrieve the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Select the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Retrieve the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Select the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Get the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Retrieve the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Select the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Get the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Retrieve the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Select the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Get the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Retrieve the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Select the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Get the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Retrieve the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Select the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Get the average count of form settings per facility,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Retrieve the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Select the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Get the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Retrieve the sum of counts for each facility,"SELECT facility_id, SUM(count) AS total_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery GROUP BY facility_id;"
Retrieve the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select all event actions,SELECT * FROM event_actions;
Retrieve all event actions,SELECT * FROM event_actions;
Get all the event actions,SELECT * FROM event_actions;
Select event actions where user id is 1,SELECT * FROM event_actions WHERE user_id =1;
Select event actions for a specific user,SELECT * FROM event_actions WHERE user_id = <user_id>;
Select event actions for a specific pharmacy,SELECT * FROM event_actions WHERE user_pharmacy_id = <user_pharmacy_id>;
Select event actions created on a specific date,SELECT * FROM event_actions WHERE date_created = <date_created>;
Select event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Retreive event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Get the event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Inner Join between event_actions and users table on user_id,SELECT * FROM event_actions INNER JOIN user ON event_actions.user_id = users.user_id;
Inner Join between event_actions and users table on user_id and aggregate count of event_actions,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate average of distinct event IDs","SELECT users.*, pharmacy.*, AVG(DISTINCT event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
Inner Join between event_actions and users table on user_id and aggregate count of event_actions with a specific date,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created = '2023-07-16' GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions with a specific user ID,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions with a specific date range,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created BETWEEN '2023-07-01' AND '2023-07-15' GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions with a specific user ID,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions with a specific pharmacy ID","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs with a specific event ID","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.events_id = 54321 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs with a specific user ID and pharmacy ID","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE users.user_id = 12345 AND pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
Count the total number of event actions,SELECT COUNT(*) AS total_actions FROM event_actions;
Count the number of event actions for each user,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id;"
Calculate the average number of event actions per user,"SELECT AVG(total_actions) AS average_actions per_user  FROM (SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id) AS subquery;"
Find the user with the highest number of event actions,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_id   ORDER BY total_actions DESC LIMIT 1;"
Calculate the total number of event actions per date created,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created;"
Find the date with the highest number of event actions,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created ORDER BY total_actions DESC LIMIT 1;"
Calculate the average time taken to complete event actions,"SELECT AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions;"
Calculate the maximum time taken to complete an event action,"SELECT MAX(DATEDIFF(date_done, action_date)) AS max_completion_time FROM event_actions;"
Calculate the minimum time taken to complete an event action,"SELECT MIN(DATEDIFF(date_done, action_date)) AS min_completion_time FROM event_actions;"
Find the user who updated the most event actions,"SELECT updated_by, COUNT(*) AS total_updated_actions FROM event_actions GROUP BY updated_by  ORDER BY total_updated_actions DESC LIMIT 1;"
Calculate the average number of event actions per user pharmacy,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY  user_pharmacy_id;"
Find the user pharmacy with the highest number of event actions,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_pharmacy_id ORDER BY total_actions DESC  LIMIT 1;"
Calculate the total number of event actions per month,"SELECT DATE_FORMAT(date_created, '%Y-%m') AS month, COUNT(*) AS total_actions FROM event_actions GROUP BY month;"
Calculate the average number of event actions per day of the week,"SELECT DAYNAME(date_created) AS day_of_week, COUNT(*) AS total_actions FROM event_actions GROUP BY day_of_week;"
Calculate the average time between action and completion for each user,"SELECT user_id, AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions GROUP BY user_id;"
Calculate the total number of event actions per user and user pharmacy,"SELECT user_id, user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id, user_pharmacy_id;"
Retrieve all event staff roles,SELECT * FROM event_staff_roles;
Select all event staff roles,SELECT * FROM event_staff_roles;
Get all event staff roles,SELECT * FROM event_staff_roles;
Retrieve event staff role by name,SELECT * FROM event_staff_roles WHERE name = 'RoleName';
Retrieve event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Select event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Get event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Retrieve event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 'FormID';
Select event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 1;
Retrieve event staff roles updated by user id 1,SELECT * FROM event_staff_roles WHERE updates_by = 1;
Retrieve the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Select the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Get the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Retrieve the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Select the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the count of event staff roles,SELECT COUNT(*) FROM event_staff_roles;
Retrieve the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Select the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Get the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Retrieve the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Select the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Get the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Retrieve the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Select the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Get the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Retrieve the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Select the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Get the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Retrieve the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Select the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Get the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Retrieve event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Select event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Retrieve event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Select event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Retrieve the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Select the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Get the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Retrieve event staff roles with an order greater than 10,SELECT * FROM event_staff_roles WHERE order > 10;
Retrieve the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Select the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Get the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
"Retrieve event staff roles with names ending with ""a""",SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Select the event staff roles with names ending with A,SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Retrieve event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
Select the event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
"Retrieve event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Select the event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Retrieve the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Select the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Get the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
Select the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Get the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Retrieve the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Select the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Get the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Retrieve the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Select the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Get the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Retrieve event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Select the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Get the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
"Select the event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Get the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Retrieve the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
Select the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
Retrieve the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Select the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Get the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Retrieve event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
Select the event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve the count of event staff roles for each facility ID, and order the result by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Select the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Get the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Retrieve event staff roles with order values greater 5, ordered by order",SELECT * FROM event_staff_roles WHERE order > 5 ORDER BY order;
"Retrieve the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
"Select the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT DISTINCT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select all hazards,SELECT * FROM hazards;
Select hazards by their names,SELECT * FROM hazards WHERE name = 'your_hazard_name';
Select hazards where organization hazard ID is 1,SELECT * FROM hazards WHERE organization_hazard_id = 1;
Select hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Retrieve the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Get the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Select the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Retrieve the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Get the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Select hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Retrieve the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Get the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Select hazards with null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Retrieve the hazards with null pharmacy IDs:,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Select hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Retrieve the hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Select hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Get hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
List the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select hazards updated within the last 6 months,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Retrieve the hazards updated within the last 6 months:,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Get the count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Calculate the average number of hazards per pharmacy,SELECT AVG(pharmacies_id) AS avg_hazards_per_pharmacy FROM hazards;
Find the maximum created date among hazards,SELECT MAX(created_at) AS max_created_date FROM hazards;
Determine the minimum updated date among hazards,SELECT MIN(updated_at) AS min_updated_date FROM hazards;
Calculate the sum of pharmacies' IDs for all hazards,SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards;
Calculate the average length of hazard descriptions,SELECT AVG(LENGTH(description)) AS avg_description_length FROM hazards;
Determine the maximum number of hazards created in a single day,SELECT COUNT(*) AS max_hazards_created FROM hazards GROUP BY DATE(created_at) ORDER BY max_hazards_created DESC LIMIT 1;
Find the minimum number of hazards updated in a single day,SELECT COUNT(*) AS min_hazards_updated FROM hazards GROUP BY DATE(updated_at) ORDER BY min_hazards_updated ASC LIMIT 1;
Calculate the average difference in days between created and updated dates for hazards,"SELECT AVG(DATEDIFF(updated_at, created_at)) AS avg_days_difference FROM hazards;"
Determine the sum of pharmacy IDs for hazards updated within the last 30 days,"SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Calculate the total number of hazards for each pharmacy,"SELECT pharmacies_id, COUNT(*) AS total_hazards FROM hazards GROUP BY pharmacies_id;"
Determine the sum of pharmacy IDs for hazards with a specific name and created within the last 30 days,"SELECT name, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE name = 'your_hazard_name' AND created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY name;"
Calculate the average number of hazards per week,"SELECT YEARWEEK(created_at) AS week, COUNT(*) AS hazards_per_week FROM hazards GROUP BY week;"
Calculate the maximum difference in days between created and updated dates for hazards,"SELECT MAX(DATEDIFF(updated_at, created_at)) AS max_days_difference FROM hazards;"
Calculate the minimum difference in days between created and updated dates for hazards,"SELECT MIN(DATEDIFF(updated_at, created_at)) AS min_days_difference FROM hazards;"
Find the maximum length of hazard descriptions,SELECT MAX(LENGTH(description)) AS max_description_length FROM hazards;
Determine the average number of hazards per day,"SELECT DATE(created_at) AS created_date, COUNT(*) AS hazards_per_day FROM hazards GROUP BY created_date;"
Find the minimum number of hazards updated on a specific date,"SELECT DATE(updated_at) AS updated_date, COUNT(*) AS min_hazards_updated FROM hazards GROUP BY updated_date ORDER BY min_hazards_updated ASC LIMIT 1;"
Calculate the total number of hazards created per month,"SELECT YEAR(created_at) AS year, MONTH(created_at) AS month, COUNT(*) AS hazards_count FROM hazards GROUP BY year, month;"
Calculate the sum of pharmacy IDs for hazards created in each year,"SELECT YEAR(created_at) AS year, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards GROUP BY year;"
Find the average difference in hours between created and updated timestamps for hazards,"SELECT AVG(TIMESTAMPDIFF(HOUR, created_at, updated_at)) AS avg_hours_difference FROM hazards;"
Retrieve all records from the customers table where the last login was within the last week.,"SELECT *FROM customersWHERE last_login >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"
Retrieve all records from the employees table where the hire date is within the last 3 months.,"SELECT *FROM employeesWHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);"
Retrieve all records from the employees table where the hire date is within the last 3 months.,"SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);"
Retrieve all records from the products table where the stock quantity is less than 50 units.,"SELECT * FROM products WHERE stock_quantity < 50;"
Retrieve all records from the transactions table where the transaction date is within the last 24 hours.,"SELECT *FROM transactionsWHERE transaction_date >= DATE_SUB(CURDATE(), INTERVAL 1 DAY);"
Retrieve all records from the messages table where the message was sent in the last 2 weeks.,"SELECT * FROM messages WHERE sent_date >= DATE_SUB(CURDATE(), INTERVAL 2 WEEK);"
Retrieve all records from the customers table where the registration date is within the last 6 months.,"SELECT * FROM customers WHERE registration_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Retrieve all records from the employees table where the employee's birthday is in the current month.,"SELECT * FROM employees WHERE MONTH(birthday) = MONTH(CURDATE());"
Retrieve all records from the invoices table where the due date is within the next 7 days.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve all records from the orders table where the order status is "completed".,SELECT *FROM ordersWHERE order_status = 'completed';
Retrieve all records from the customers table where the customer's last name starts with "Smith".,"SELECT * FROM customers WHERE last_name LIKE 'Smith%';"
Retrieve all records from the products table where the price is between $10 and $50.,"SELECT * FROM products WHERE price BETWEEN 10 AND 50;"
Retrieve all records from the employees table where the salary is greater than the average salary.,SELECT *FROM employeesWHERE salary > (SELECT AVG(salary) FROM employees);
Retrieve all records from the customers table where the customer's email address contains "@gmail.com".,"SELECT * FROM customers WHERE email LIKE '%@gmail.com';"
Retrieve all records from the products table where the product name starts with "A" and ends with "Z".,"SELECT * FROM products WHERE product_name LIKE 'A%Z';"
Retrieve all records from the employees table where the hire date is before the year 2010.,"SELECT * FROM employees WHERE YEAR(hire_date) < 2010;"
Retrieve all records from the orders table where the total amount is between $100 and $500.,"SELECT * FROM orders WHERE total_amount BETWEEN 100 AND 500;"
Retrieve all staff members from the staff_directory table.,SELECT * FROM staff_directory;
Get the assets with an asset type ID of 123.,SELECT * FROM assets WHERE asset_type_id = 123;
"Find hazards with a name containing the word ""fire"" and created in the last month.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND created_at >= NOW() - INTERVAL 1 MONTH;
Get all event staff roles.,SELECT * FROM event_staff_roles;
Retrieve event actions for a specific user and pharmacy ID.,SELECT * FROM event_actions WHERE user_id = 123 AND user_pharmacy_id = 456;
Find form settings summary tools for a particular facility ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789;
Retrieve events created by a specific user and organization ID.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456;
Get all users with an active status.,SELECT * FROM users WHERE active = 1;
"Find organizations with names containing the word ""hospital.""",SELECT * FROM organizations WHERE name LIKE '%hospital%';
Retrieve pharmacies created after a specific date.,SELECT * FROM pharmacies WHERE created_at > '2023-01-01';
Retrieve the full names and employee IDs of staff members in the staff_directory table who belong to a specific organization.,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = 'your_organization_id';"
Get the serial numbers of assets of a specific asset type that are active and belong to a particular pharmacy.,SELECT serial_number FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
Find hazards created after a specific date and are associated with a particular pharmacy.,SELECT * FROM hazards WHERE created_at > '2023-01-01' AND pharmacies_id = 'your_pharmacy_id';
Retrieve event staff roles with a default flag set to true.,SELECT * FROM event_staff_roles WHERE is_default = 1;
Get event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id';
Find form settings summary tools for a specific facility and organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 'your_facility_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are still open.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1;
Get users with a specific role and belonging to a particular organization.,SELECT * FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id';
Find organizations created after a specific date and located in a particular city.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND city = 'your_city_name';
Retrieve pharmacies activated between two specific dates.,SELECT * FROM pharmacies WHERE activated_by > '2023-01-01' AND activated_by < '2023-07-01';
Retrieve the full names and registration numbers of active users who belong to a specific organization.,"SELECT full_name, reg_number FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Get the names and descriptions of all hazards associated with a particular pharmacy.,"SELECT name, description FROM hazards WHERE pharmacies_id = 'your_pharmacy_id';"
"Find the full names and updated dates of users who have the ""admin"" role.","SELECT users_fullname, updated_at FROM users WHERE roles_id = 'your_role_id' AND profiles_id = 'your_profile_id';"
Retrieve the names and addresses of organizations located in a specific city.,"SELECT name, address FROM organizations WHERE city = 'your_city_name';"
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 14 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 14 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 30 days",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 30 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 30 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 60 days, have a status of ""active"", and were created in the last 30 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 60 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 90 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 90 days, have a status of ""active"", and were created in the last 90 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 90 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY
Get the asset types and their corresponding item IDs in a specific pharmacy.,"SELECT full_name, employee_id FROM staff_directory WHERE created_at >= NOW() - INTERVAL 3 MONTH;"
Find hazards with a specific organization hazard ID and associated with a particular pharmacy.,"SELECT asset_type_id, asset_items_id FROM assets WHERE pharmacies_id = 'random_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE organization_hazard_id = 'random_organization_hazard_id' AND pharmacies_id = 'random_pharmacy_id';
Get the event IDs and user IDs of event actions created by a specific user in the last week.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility.,"SELECT events_id, user_id FROM event_actions WHERE user_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 7 DAY;"
Retrieve the users' full names and organizations they belong to.,SELECT * FROM formsettings_summarytools WHERE tools_id = 'random_tool_id' AND facility_id = 'random_facility_id';
Get the names and countries of organizations created after a specific date.,"SELECT users_fullname, organization_id FROM users;"
Find pharmacies with a specific name and activated by a particular user.,"SELECT name, countries_id FROM organizations WHERE created_at > 'random_date';"
Retrieve events created by a specific user and type.,SELECT * FROM pharmacies WHERE name = 'random_pharmacy_name' AND activated_by = 'random_user_id';
Get the users' profiles IDs and their associated roles.,SELECT * FROM events WHERE users_id = 'random_user_id' AND events_type_id = 'random_event_type_id';
"Find organizations with names containing the word ""medical"" and located in a specific city.","SELECT profiles_id, roles_id FROM users;"
Retrieve the pharmacies' names and their associated organizations' names.,SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'random_city_name';
Get the event IDs and dates created by a specific user within the last month.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organizations_id = organizations.sf_id;"
Find users with a specific SF ID and their associated profile IDs.,"SELECT event_id, date_created FROM events WHERE users_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 1 MONTH;"
Retrieve the event staff roles' names and associated form IDs in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'random_sf_id';"
Get the organizations' names and addresses located in a specific country.,"SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find pharmacies created between two specific dates and owned by a particular organization.,"SELECT name, address FROM organizations WHERE countries_id = 'random_country_id';"
Retrieve the events' types and the number of occurrences for each type.,SELECT * FROM pharmacies WHERE created_at BETWEEN 'random_start_date' AND 'random_end_date' AND organizations_id = 'random_organization_id';
Get the staff directory entries with specific IDs and their associated employee IDs.,"SELECT events_type_id, COUNT(*) AS occurrences FROM events GROUP BY events_type_id;"
Retrieve the full names and roles of users who belong to a specific organization.,"SELECT * FROM staff_directory WHERE id IN ('random_id1', 'random_id2', 'random_id3') AND employee_id IS NOT NULL;"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,"SELECT full_name, roles_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with names containing the word ""safety"" and associated with a specific pharmacy.",SELECT * FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
Retrieve the event staff roles with their corresponding form IDs and facility IDs.,SELECT * FROM hazards WHERE name LIKE '%safety%' AND pharmacies_id = 'your_pharmacy_id';
"Get the event actions for a specific event ID and user ID, sorted by the action date in ascending order.","SELECT name, forms_id, facility_id FROM event_staff_roles;"
Find form settings summary tools associated with a specific facility ID and organization ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date ASC;
Retrieve events of a specific event type that are still open and belong to a particular organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 'your_facility_id' AND organization_id = 'your_organization_id';
"Get the active users with their roles, belonging to a specific organization and created after a certain date.",SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1 AND organization_id = 'your_organization_id';
"Find organizations with names containing the word ""clinic"" and located in a specific city.",SELECT * FROM users WHERE active = 1 AND organization_id = 'your_organization_id' AND date_created > 'your_date';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,SELECT * FROM organizations WHERE name LIKE '%clinic%' AND city = 'your_city_name';
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organizations_id = organizations.sf_id ORDER BY pharmacies.name ASC;"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE users_id = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the event staff roles' names and their associated default flags.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
"Get the names and addresses of organizations located in a specific country, sorted by the organization name.","SELECT name, is_default FROM event_staff_roles;"
Find pharmacies activated by a specific user between two given dates.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Retrieve events of a specific event type and their associated prescriber IDs.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activate_at BETWEEN 'start_date' AND 'end_date';
Get the organizations' names and trial end dates in descending order of trial end dates.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND prescribers_id IS NOT NULL;
Find pharmacies created after a specific date and activated by a particular user.,"SELECT name, trial_ends_at FROM organizations ORDER BY trial_ends_at DESC;"
Retrieve the users' full names and their associated roles in a specific organization.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT users_fullname, roles_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with descriptions containing the word ""chemical"" and created by a specific user.","SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
Retrieve the event staff roles with their associated form IDs in a specific facility.,SELECT * FROM hazards WHERE description LIKE '%chemical%' AND created_by = 'your_user_id';
"Get the event actions for a specific event ID and user ID, sorted by the date done in descending order.","SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Retrieve events of a specific event type that are still open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
"Get the active users with their roles, belonging to a specific organization and created after a certain date.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM users WHERE active = 1 AND organization_id = 'your_organization_id' AND created_at > 'your_date';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Find users with a specific user ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE user_id = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 120 days.","SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 120 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 120 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 180 days, have a status of ""active"", and were created in the last 120 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 180 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Retrieve the full names and roles of users who belong to a specific organization.,SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,"SELECT full_name, roles_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with names containing the word ""safety"" and associated with a specific pharmacy.",SELECT * FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
Retrieve the event staff roles with their corresponding form IDs and facility IDs.,SELECT * FROM hazards WHERE name LIKE '%safety%' AND pharmacies_id = 'your_pharmacy_id';
"Get the event actions for a specific event ID and user ID, sorted by the action date in ascending order.","SELECT name, forms_id, facility_id FROM event_staff_roles;"
Find form settings summary tools associated with a specific facility ID and organization ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date ASC;
Retrieve events of a specific event type that are still open and belong to a particular organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 'your_facility_id' AND organization_id = 'your_organization_id';
"Get the active users with their roles, belonging to a specific organization and created after a certain date.",SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1 AND organization_id = 'your_organization_id';
"Find organizations with names containing the word ""clinic"" and located in a specific city.",SELECT * FROM users WHERE active = 1 AND organization_id = 'your_organization_id' AND date_created > 'your_date';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,SELECT * FROM organizations WHERE name LIKE '%clinic%' AND city = 'your_city_name';
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organizations_id = organizations.sf_id ORDER BY pharmacies.name ASC;"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE users_id = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the event staff roles' names and their associated default flags.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
"Get the names and addresses of organizations located in a specific country, sorted by the organization name.","SELECT name, is_default FROM event_staff_roles;"
Find pharmacies activated by a specific user between two given dates.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Retrieve events of a specific event type and their associated prescriber IDs.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activate_at BETWEEN 'start_date' AND 'end_date';
Get the organizations' names and trial end dates in descending order of trial end dates.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND prescribers_id IS NOT NULL;
Find pharmacies created after a specific date and activated by a particular user.,"SELECT name, trial_ends_at FROM organizations ORDER BY trial_ends_at DESC;"
Retrieve the users' full names and their associated roles in a specific organization.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT users_fullname, roles_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with descriptions containing the word ""chemical"" and created by a specific user.","SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
Retrieve the event staff roles with their associated form IDs in a specific facility.,SELECT * FROM hazards WHERE description LIKE '%chemical%' AND created_by = 'your_user_id';
"Get the event actions for a specific event ID and user ID, sorted by the date done in descending order.","SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Retrieve events of a specific event type that are still open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
"Get the active users with their roles, belonging to a specific organization and created after a certain date.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM users WHERE active = 1 AND organization_id = 'your_organization_id' AND created_at > 'your_date';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Find users with a specific user ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE user_id = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the full names and email addresses of active users belonging to a specific organization.,"SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
Get the names and descriptions of assets associated with a specific pharmacy.,"SELECT full_name, email FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Find hazards created by a specific user and associated with a particular pharmacy.,"SELECT name, description FROM assets WHERE pharmacies_id = 'your_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE created_by = 'your_user_id' AND pharmacies_id = 'your_pharmacy_id';
"Get the event actions for a specific event ID and user ID, ordered by the action date in descending order.","SELECT name, order FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND facility_id = 'your_facility_id';
Get the users' full names and phone numbers in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""health"" and located in a specific city.","SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.",SELECT * FROM organizations WHERE name LIKE '%health%' AND city = 'your_city_name';
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find pharmacies activated by a specific user within a specific date range.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
Get the organizations' names and trial end dates in ascending order of trial end dates.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Find pharmacies created after a specific date and activated by a particular user.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Retrieve the users' full names and their associated roles in a specific organization.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.","SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.","SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Get the users' full names and their associated roles in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""hospital"" and located in a specific city.","SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Find users with a specific user ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the full names and email addresses of active users belonging to a specific organization.,"SELECT full_name, email FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Get the names and descriptions of assets associated with a specific pharmacy.,"SELECT name, description FROM assets WHERE pharmacies_id = 'your_pharmacy_id';"
Find hazards created by a specific user and associated with a particular pharmacy.,SELECT * FROM hazards WHERE created_by = 'your_user_id' AND pharmacies_id = 'your_pharmacy_id';
Retrieve the names and orders of event staff roles in a specific facility.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the action date in descending order.",SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date DESC;
Find form settings summary tools associated with a specific tool ID and facility ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND facility_id = 'your_facility_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and phone numbers in a specific organization.,"SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""health"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%health%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific user ID and their associated profile IDs in a specific organization.,"SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM staff_directory WHERE created_at > 'your_date' AND organization_id = 'your_organization_id';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE active = 1 AND asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';
Find hazards with specific names and descriptions associated with a particular pharmacy.,SELECT * FROM hazards WHERE name = 'your_hazard_name' AND description = 'your_hazard_description' AND pharmacies_id = 'your_pharmacy_id';
Retrieve the names and orders of event staff roles associated with a specific form ID.,"SELECT name, order FROM event_staff_roles WHERE forms_id = 'your_form_id';"
"Get the event actions for a specific event ID and user ID, ordered by the action date in ascending order.",SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date ASC;
Find form settings summary tools associated with a specific facility ID and updated by a particular user.,SELECT * FROM formsettings_summarytools WHERE facility_id = 'your_facility_id' AND updated_by = 'your_user_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
"Get the users' full names and official user IDs in a specific organization, sorted by full name.","SELECT full_name, official_user_id FROM users WHERE organization_id = 'your_organization_id' ORDER BY full_name;"
"Find organizations with names containing the word ""medical"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
Retrieve the full names and email addresses of active users belonging to a specific organization.,"SELECT full_name, email FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Get the names and descriptions of assets associated with a specific pharmacy.,"SELECT name, description FROM assets WHERE pharmacies_id = 'your_pharmacy_id';"
Find hazards created by a specific user and associated with a particular pharmacy.,SELECT * FROM hazards WHERE created_by = 'your_user_id' AND pharmacies_id = 'your_pharmacy_id';
Retrieve the names and orders of event staff roles in a specific facility.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the action date in descending order.",SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date DESC;
Find form settings summary tools associated with a specific tool ID and facility ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND facility_id = 'your_facility_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and phone numbers in a specific organization.,"SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""health"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%health%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific user ID and their associated profile IDs in a specific organization.,"SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM users WHERE organization_id = 'your_organization_id' AND created_at > 'your_date';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
"Find hazards with names containing the word ""fire"" and descriptions containing the word ""safety"" associated with a particular pharmacy.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND description LIKE '%safety%' AND pharmacies_id = 'your_pharmacy_id';
Retrieve the names and orders of event staff roles associated with a specific form ID.,"SELECT name, order FROM event_staff_roles WHERE forms_id = 'your_form_id';"
"Get the event actions for a specific event ID and user ID, ordered by the action date in ascending order.",SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date ASC;
Find form settings summary tools associated with a specific facility ID and updated by a particular user.,SELECT * FROM formsettings_summarytools WHERE facility_id = 'your_facility_id' AND updated_by = 'your_user_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
"Get the users' full names and official user IDs in a specific organization, sorted by full name.","SELECT full_name, official_user_id FROM users WHERE organization_id = 'your_organization_id' ORDER BY full_name;"
"Find organizations with names containing the word ""medical"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
Retrieve the pharmacies' names and their corresponding organizations' names in alphabetical order.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
"Retrieve the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Retrieve the names and addresses of organizations located in a specific city.,"SELECT name, address FROM organizations WHERE city = 'your_city_name';"
Find users with a specific role ID in a specific organization.,SELECT * FROM users WHERE role_id = 'your_role_id' AND organization_id = 'your_organization_id';
Get the event IDs and types for events created by a specific user.,"SELECT event_id, event_type_id FROM events WHERE created_by = 'your_user_id';"
Retrieve the names and descriptions of assets of a specific asset type.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id';"
Find hazards with a specific organization hazard ID.,SELECT * FROM hazards WHERE organization_hazard_id = 'your_organization_hazard_id';
Get the event staff roles' names and orders in a specific facility.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Retrieve the event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id';
Find form settings summary tools associated with a specific form ID.,SELECT * FROM formsettings_summarytools WHERE forms_id = 'your_form_id';
Get the events created by a specific user within a date range.,SELECT * FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';
Retrieve the users' full names and roles in a specific organization.,"SELECT full_name, role FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""health"" and located in a specific country.",SELECT * FROM organizations WHERE name LIKE '%health%' AND country = 'your_country';
Get the pharmacies' names and their associated organizations' names in alphabetical order.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Retrieve the event IDs and dates for events closed by a specific user.,"SELECT event_id, date_closed FROM events WHERE closed_by = 'your_user_id';"
Find users with a specific profile ID in a specific organization.,SELECT * FROM users WHERE profile_id = 'your_profile_id' AND organization_id = 'your_organization_id';
"Get the event actions for a specific event ID, sorted by the action date in ascending order.",SELECT * FROM event_actions WHERE events_id = 'your_event_id' ORDER BY action_date ASC;
Retrieve the names and descriptions of assets associated with a specific pharmacy.,"SELECT name, description FROM assets WHERE pharmacies_id = 'your_pharmacy_id';"
Find hazards created by a specific user and associated with a particular pharmacy.,SELECT * FROM hazards WHERE created_by = 'your_user_id' AND pharmacies_id = 'your_pharmacy_id';
Get the event staff roles' names and their associated form IDs.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Retrieve the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and phone numbers in a specific organization.,"SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Retrieve the names and addresses of organizations located in a specific city.,"SELECT name, address FROM organizations WHERE city = 'your_city_name';"
Find users with a specific role ID in a specific organization.,SELECT * FROM users WHERE role_id = 'your_role_id' AND organization_id = 'your_organization_id';
Get the event IDs and types for events created by a specific user.,"SELECT event_id, event_type_id FROM events WHERE created_by = 'your_user_id';"
Retrieve the names and descriptions of assets of a specific asset type.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id';"
Find hazards with a specific organization hazard ID.,SELECT * FROM hazards WHERE organization_hazard_id = 'your_organization_hazard_id';
Get the event staff roles' names and orders in a specific facility.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Retrieve the event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id';
Find form settings summary tools associated with a specific form ID.,SELECT * FROM formsettings_summarytools WHERE forms_id = 'your_form_id';
Get the events created by a specific user within a date range.,SELECT * FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';
Retrieve the users' full names and roles in a specific organization.,"SELECT full_name, role FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""health"" and located in a specific country.",SELECT * FROM organizations WHERE name LIKE '%health%' AND country = 'your_country';
Get the pharmacies' names and their associated organizations' names in alphabetical order.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Retrieve the event IDs and dates for events closed by a specific user.,"SELECT event_id, date_closed FROM events WHERE closed_by = 'your_user_id';"
Find users with a specific profile ID in a specific organization.,SELECT * FROM users WHERE profile_id = 'your_profile_id' AND organization_id = 'your_organization_id';
"Get the event actions for a specific event ID, sorted by the action date in ascending order.",SELECT * FROM event_actions WHERE events_id = 'your_event_id' ORDER BY action_date ASC;
Retrieve the names and descriptions of assets associated with a specific pharmacy.,"SELECT name, description FROM assets WHERE pharmacies_id = 'your_pharmacy_id';"
Find hazards created by a specific user and associated with a particular pharmacy.,SELECT * FROM hazards WHERE created_by = 'your_user_id' AND pharmacies_id = 'your_pharmacy_id';
Get the event staff roles' names and their associated form IDs.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Retrieve the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve the users' full names and phone numbers in a specific organization.,"SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset"
"Retrieve the names and addresses of staff members in a specific organization, ordered by full name.","SELECT full_name, address FROM staff_directory WHERE organization_id = 'your_organization_id' ORDER BY full_name;"
Get the count of active users in a specific organization.,SELECT COUNT(*) AS active_user_count FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;
"Retrieve the names and emails of users with a specific role ID in a specific organization, ordered by email.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' ORDER BY email;"
Find the users who have the active status set to 'true' in a specific organization.,SELECT * FROM users WHERE organization_id = 'your_organization_id' AND active = 'true';
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by facility name.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name;"
Get the count of active assets in a specific facility.,SELECT COUNT(*) AS active_asset_count FROM assets WHERE facility_id = 'your_facility_id' AND active = 1;
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by hazard name.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY name;"
"Find the events where a specific user has taken action within a specific date range, ordered by action date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND action_date BETWEEN 'start_date' AND 'end_date' ORDER BY action_date;
"Retrieve the names and order numbers of roles associated with a specific form ID, ordered by order number.","SELECT name, order FROM event_staff_roles WHERE form_id = 'your_form_id' ORDER BY order;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by updated date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND updated_date BETWEEN 'start_date' AND 'end_date' ORDER BY updated_date;
Get the count of open events in a specific facility.,SELECT COUNT(*) AS open_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 1;
"Retrieve the names and addresses of facilities associated with a specific organization, filtered by a specific city, ordered by address.","SELECT name, address FROM facilities WHERE organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY address;"
"Find events with a specific type and created by a specific user, filtered by a specific city, sorted by date created in descending order.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND created_by = 'your_user_id' AND city = 'your_city_name' ORDER BY date_created DESC;
Get the count of closed events in a specific facility.,SELECT COUNT(*) AS closed_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 0;
"Retrieve the names and descriptions of tools associated with a specific form ID, filtered by a specific facility, ordered by name in descending order.","SELECT name, description FROM tools WHERE form_id = 'your_form_id' AND facility_id = 'your_facility_id' ORDER BY name DESC;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by event ID.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND event_id BETWEEN 'id1' AND 'id2' ORDER BY event_id;
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by name, limited to 10 records.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name LIMIT 10;"
Get the count of assets of a specific type in a specific facility.,SELECT COUNT(*) AS asset_count FROM assets WHERE facility_id = 'your_facility_id' AND asset_type = 'your_asset_type';
"Retrieve the names and emails of users with a specific role ID in a specific organization, filtered by a specific city, ordered by email, limited to 10 records.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY email LIMIT 10;"
"Find organizations with names containing the word ""medical"" and located in a specific city, ordered by name in ascending order, limited to 10 records.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name' ORDER BY name ASC LIMIT 10;
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by address.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY address;"
Get the count of active users in a specific organization.,SELECT COUNT(*) AS active_user_count FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;
"Retrieve the names and emails of users with a specific role ID in a specific organization, ordered by email.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' ORDER BY email;"
Find the users who have the active status set to 'true' in a specific organization.,SELECT * FROM users WHERE organization_id = 'your_organization_id' AND active = 'true';
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by name.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY name;"
Get the count of events in a specific facility.,SELECT COUNT(*) AS event_count FROM events WHERE facility_id = 'your_facility_id';
"Retrieve the names and descriptions of tools associated with a specific form ID, ordered by name.","SELECT name, description FROM formsettings_summarytools WHERE form_id = 'your_form_id' ORDER BY name;"
"Find the latest event created by a specific user, ordered by date created in descending order.",SELECT * FROM events WHERE user_id = 'your_user_id' ORDER BY date_created DESC LIMIT 1;
"Retrieve the names and emails of users with a specific role ID in a specific organization, filtered by a specific city, ordered by email in descending order.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY email DESC;"
"Find organizations with names containing the word ""medical"" and located in a specific city, ordered by name in ascending order.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name' ORDER BY name ASC;
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by name, limited to 10 records.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name LIMIT 10;"
Get the count of closed events in a specific facility.,SELECT COUNT(*) AS closed_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 0;
"Retrieve the names and descriptions of tools associated with a specific form ID, filtered by a specific facility, ordered by description.","SELECT name, description FROM formsettings_summarytools WHERE form_id = 'your_form_id' AND facility_id = 'your_facility_id' ORDER BY description;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by updated date in descending order.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND updated_date BETWEEN 'start_date' AND 'end_date' ORDER BY updated_date DESC;
Get the count of assets of a specific type in a specific facility.,SELECT COUNT(*) AS asset_count FROM assets WHERE facility_id = 'your_facility_id' AND asset_type = 'your_asset_type';
"Retrieve the names and emails of users with a specific role ID in a specific organization, filtered by a specific city, ordered by email, limited to 10 records.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY email LIMIT 10;"
"Find organizations with names containing the word ""medical"" and located in a specific city, ordered by name in ascending order, limited to 10 records.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name' ORDER BY name ASC LIMIT 10;
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by address, limited to 10 records.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY address LIMIT 10;"
"Get the count of events in a specific facility, filtered by a specific event type.",SELECT COUNT(*) AS event_count FROM events WHERE facility_id = 'your_facility_id' AND event_type = 'your_event_type';
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by description.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY description;"
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by address.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY address;"
Get the count of active users in a specific organization.,SELECT COUNT(*) AS active_user_count FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;
"Retrieve the names and emails of users with a specific role ID in a specific organization, ordered by email.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' ORDER BY email;"
Find the users who have the active status set to 'true' in a specific organization.,SELECT * FROM users WHERE organization_id = 'your_organization_id' AND active = 'true';
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by name.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY name;"
Get the count of events in a specific facility.,SELECT COUNT(*) AS event_count FROM events WHERE facility_id = 'your_facility_id';
"Retrieve the names and descriptions of tools associated with a specific form ID, ordered by name.","SELECT name, description FROM formsettings_summarytools WHERE form_id = 'your_form_id' ORDER BY name;"
"Find the latest event created by a specific user, ordered by date created in descending order.",SELECT * FROM events WHERE user_id = 'your_user_id' ORDER BY date_created DESC LIMIT 1;
"Retrieve the names and emails of users with a specific role ID in a specific organization, filtered by a specific city, ordered by email in descending order.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY email DESC;"
"Find organizations with names containing the word ""medical"" and located in a specific city, ordered by name in ascending order.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name' ORDER BY name ASC;
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by name, limited to 10 records.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name LIMIT 10;"
Get the count of closed events in a specific facility.,SELECT COUNT(*) AS closed_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 0;
"Retrieve the names and descriptions of tools associated with a specific form ID, filtered by a specific facility, ordered by description.","SELECT name, description FROM formsettings_summarytools WHERE form_id = 'your_form_id' AND facility_id = 'your_facility_id' ORDER BY description;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by updated date in descending order.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND updated_date BETWEEN 'start_date' AND 'end_date' ORDER BY updated_date DESC;
Get the count of assets of a specific type in a specific facility.,SELECT COUNT(*) AS asset_count FROM assets WHERE facility_id = 'your_facility_id' AND asset_type = 'your_asset_type';
"Retrieve the names and emails of users with a specific role ID in a specific organization, filtered by a specific city, ordered by email, limited to 10 records.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY email LIMIT 10;"
"Find organizations with names containing the word ""medical"" and located in a specific city, ordered by name in ascending order, limited to 10 records.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name' ORDER BY name ASC LIMIT 10;
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by address, limited to 10 records.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY address LIMIT 10;"
"Get the count of events in a specific facility, filtered by a specific event type.",SELECT COUNT(*) AS event_count FROM events WHERE facility_id = 'your_facility_id' AND event_type = 'your_event_type';
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by description.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY description;"
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by address.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY address;"
Get the count of active users in a specific organization.,SELECT COUNT(*) AS active_user_count FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;
"Retrieve the names and emails of users with a specific role ID in a specific organization, ordered by email.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' ORDER BY email;"
Find the users who have the active status set to 'true' in a specific organization.,SELECT * FROM users WHERE organization_id = 'your_organization_id' AND active = 'true';
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by name.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY name;"
Get the count of events in a specific facility.,SELECT COUNT(*) AS event_count FROM events WHERE facility_id = 'your_facility_id';
"Retrieve the names and descriptions of tools associated with a specific form ID, ordered by name.","SELECT name, description FROM formsettings_summarytools WHERE form_id = 'your_form_id' ORDER BY name;"
"Find the latest event created by a specific user, ordered by date created in descending order.",SELECT * FROM events WHERE user_id = 'your_user_id' ORDER BY date_created DESC LIMIT 1;
"Retrieve the names and emails of users with a specific role ID in a specific organization, filtered by a specific city, ordered by email in descending order.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY email DESC;"
"Find organizations with names containing the word ""medical"" and located in a specific city, ordered by name in ascending order.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name' ORDER BY name ASC;
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by name, limited to 10 records.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name LIMIT 10;"
Get the count of closed events in a specific facility.,SELECT COUNT(*) AS closed_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 0;
"Retrieve the names and descriptions of tools associated with a specific form ID, filtered by a specific facility, ordered by description.","SELECT name, description FROM formsettings_summarytools WHERE form_id = 'your_form_id' AND facility_id = 'your_facility_id' ORDER BY description;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by updated date in descending order.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND updated_date BETWEEN 'start_date' AND 'end_date' ORDER BY updated_date DESC;
Get the count of assets of a specific type in a specific facility.,SELECT COUNT(*) AS asset_count FROM assets WHERE facility_id = 'your_facility_id' AND asset_type = 'your_asset_type';
"Retrieve the names and emails of users with a specific role ID in a specific organization, filtered by a specific city, ordered by email, limited to 10 records.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY email LIMIT 10;"
"Find organizations with names containing the word ""medical"" and located in a specific city, ordered by name in ascending order, limited to 10 records.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name' ORDER BY name ASC LIMIT 10;
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by address, limited to 10 records.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY address LIMIT 10;"
"Get the count of events in a specific facility, filtered by a specific event type.",SELECT COUNT(*) AS event_count FROM events WHERE facility_id = 'your_facility_id' AND event_type = 'your_event_type';
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by description.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY description;"
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by address.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY address;"
Get the count of active users in a specific organization.,SELECT COUNT(*) AS active_user_count FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;
"Retrieve the names and emails of users with a specific role ID in a specific organization, ordered by email.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' ORDER BY email;"
Find the users who have the active status set to 'true' in a specific organization.,SELECT * FROM users WHERE organization_id = 'your_organization_id' AND active = 'true';
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by name.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY name;"
Get the count of events in a specific facility.,SELECT COUNT(*) AS event_count FROM events WHERE facility_id = 'your_facility_id';
"Retrieve the names and descriptions of tools associated with a specific form ID, ordered by name.","SELECT name, description FROM formsettings_summarytools WHERE form_id = 'your_form_id' ORDER BY name;"
"Find the latest event created by a specific user, ordered by date created in descending order.",SELECT * FROM events WHERE user_id = 'your_user_id' ORDER BY date_created DESC LIMIT 1;
"Retrieve the names and emails of users with a specific role ID in a specific organization, filtered by a specific city, ordered by email in descending order.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY email DESC;"
"Find organizations with names containing the word ""medical"" and located in a specific city, ordered by name in ascending order.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name' ORDER BY name ASC;
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by name, limited to 10 records.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name LIMIT 10;"
Get the count of closed events in a specific facility.,SELECT COUNT(*) AS closed_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 0;
"Retrieve the names and descriptions of tools associated with a specific form ID, filtered by a specific facility, ordered by description.","SELECT name, description FROM formsettings_summarytools WHERE form_id = 'your_form_id' AND facility_id = 'your_facility_id' ORDER BY description;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by updated date in descending order.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND updated_date BETWEEN 'start_date' AND 'end_date' ORDER BY updated_date DESC;
Get the count of assets of a specific type in a specific facility.,SELECT COUNT(*) AS asset_count FROM assets WHERE facility_id = 'your_facility_id' AND asset_type = 'your_asset_type';
"Retrieve the names and emails of users with a specific role ID in a specific organization, filtered by a specific city, ordered by email, limited to 10 records.","SELECT full_name, email FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY email LIMIT 10;"
"Find organizations with names containing the word ""medical"" and located in a specific city, ordered by name in ascending order, limited to 10 records.",SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'your_city_name' ORDER BY name ASC LIMIT 10;
"Retrieve the names and addresses of pharmacies in a specific city, filtered by a specific country, ordered by address, limited to 10 records.","SELECT name, address FROM pharmacies WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY address LIMIT 10;"
"Get the count of events in a specific facility, filtered by a specific event type.",SELECT COUNT(*) AS event_count FROM events WHERE facility_id = 'your_facility_id' AND event_type = 'your_event_type';
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by description.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY description;"
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
Find pharmacies activated by a specific user within a specific date range.,SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Get the organizations' names and trial end dates in ascending order of trial end dates.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Find pharmacies created after a specific date and activated by a particular user.,SELECT * FROM pharmacies WHERE created_at > 'your_date' AND activated_by = 'your_user_id';
Retrieve the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,"SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.",SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
Get the users' full names and their associated roles in a specific organization.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find organizations with names containing the word ""hospital"" and located in a specific city.",SELECT * FROM organizations WHERE name LIKE '%hospital%' AND city = 'your_city_name';
"Retrieve the pharmacies' names and their corresponding organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Get the event IDs and dates for events created by a specific user within a date range.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT sf_id, profile_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE country = 'your_country' ORDER BY name ASC;"
description,query
Retrieve all staff members from the staff_directory table.,SELECT * FROM staff_directory;
Get the assets with an asset type ID of 123.,SELECT * FROM assets WHERE asset_type_id = 123;
"Find hazards with a name containing the word ""fire"" and created in the last month.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND created_at >= NOW() - INTERVAL 1 MONTH;
Get all event staff roles.,SELECT * FROM event_staff_roles;
Retrieve event actions for a specific user and pharmacy ID.,SELECT * FROM event_actions WHERE user_id = 123 AND user_pharmacy_id = 456;
Find form settings summary tools for a particular facility ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789;
Retrieve events created by a specific user and organization ID.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456;
Get all users with an active status.,SELECT * FROM users WHERE active = 1;
"Find organizations with names containing the word ""hospital.""",SELECT * FROM organizations WHERE name LIKE '%hospital%';
Retrieve pharmacies created after a specific date.,SELECT * FROM pharmacies WHERE created_at > '2023-01-01';
Retrieve the full names and employee IDs of staff members in the staff_directory table who belong to a specific organization.,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = 'your_organization_id';"
Get the serial numbers of assets of a specific asset type that are active and belong to a particular pharmacy.,SELECT serial_number FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
Find hazards created after a specific date and are associated with a particular pharmacy.,SELECT * FROM hazards WHERE created_at > '2023-01-01' AND pharmacies_id = 'your_pharmacy_id';
Retrieve event staff roles with a default flag set to true.,SELECT * FROM event_staff_roles WHERE is_default = 1;
Get event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id';
Find form settings summary tools for a specific facility and organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 'your_facility_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are still open.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1;
Get users with a specific role and belonging to a particular organization.,SELECT * FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id';
Find organizations created after a specific date and located in a particular city.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND city = 'your_city_name';
Retrieve pharmacies activated between two specific dates.,SELECT * FROM pharmacies WHERE activated_by > '2023-01-01' AND activated_by < '2023-07-01';
Retrieve the full names and registration numbers of active users who belong to a specific organization.,"SELECT full_name, reg_number FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Get the names and descriptions of all hazards associated with a particular pharmacy.,"SELECT name, description FROM hazards WHERE pharmacies_id = 'your_pharmacy_id';"
"Find the full names and updated dates of users who have the ""admin"" role.","SELECT users_fullname, updated_at FROM users WHERE roles_id = 'your_role_id' AND profiles_id = 'your_profile_id';"
Get the event IDs and dates for events created by a specific user within a given date range.,"SELECT event_id, date_created FROM events WHERE users_id = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date'"
"Retrieve the full names and updated dates of users who have the ""supervisor"" role and belong to a specific organization.","SELECT users_fullname, updated_at FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id';"
Get the names and descriptions of hazards created by a specific user within the last 30 days.,"SELECT name, description FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAY AND updated_by = 'your_user_id';"
Find the event IDs and dates for events that were closed in the last week.,"SELECT events_id, date_closed FROM event_actions WHERE date_done >= NOW() - INTERVAL 7 DAY;"
Retrieve the names and addresses of organizations located in a specific country.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id';"
Get the staff roles and their associated forms IDs in a specific facility.,"SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Get the list of all organizations that have a country ID of 123.,SELECT * FROM organizations WHERE countries_id = 123;
Find all events that were created by a user with the ID 123.,SELECT * FROM events WHERE users_id = 123;
"Get the list of all pharmacies that have a name containing the word ""hospital"".",SELECT * FROM pharmacies WHERE name LIKE '%hospital%';
Retrieve all users who are associated with a particular organization ID.,SELECT * FROM users WHERE organizations_id = 123;
Find all assets that were created in the last 30 days.,SELECT * FROM assets WHERE created_at >= NOW() - INTERVAL 30 DAY;
Get the list of all hazards that are associated with a particular event ID.,SELECT * FROM hazards WHERE events_id = 123;
"Get the list of all events that have a status of ""open"".",SELECT * FROM events WHERE is_open = 1;
"Find all events that were created in the last 7 days and have a status of ""closed"".",SELECT * FROM events WHERE created_at >= NOW() - INTERVAL 7 DAY AND is_open = 0;
"Get the list of all users who have a role of ""admin"".",SELECT * FROM users WHERE roles_id = 1;
Retrieve all event actions that were performed by a user with the ID 123.,SELECT * FROM event_actions WHERE user_id = 123;
Find all form settings summary tools that were updated in the last 24 hours.,SELECT * FROM formsettings_summarytools WHERE updated_at >= NOW() - INTERVAL 1 DAY;
Get the list of all assets that are associated with a particular pharmacy ID and have an asset type ID of 123.,SELECT * FROM assets WHERE pharmacies_id = 123 AND asset_type_id = 123;
"Get the list of all events that have a type of ""hazard"".",SELECT * FROM events WHERE events_type_id = 1;
Find all hazards that were created by a user with the ID 123.,SELECT * FROM hazards WHERE created_by = 123;
"Get the list of all pharmacies that have a city of ""London"".",SELECT * FROM pharmacies WHERE city = 'London';
"Retrieve all users who are associated with a particular pharmacy ID and have a role of ""admin"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1;
"Find all assets that were updated in the last 24 hours and have a serial number of ""1234567890"".",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890';
"Get the list of all hazards that are associated with a particular event ID and have a name containing the word ""fire"".",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%';
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days.",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", and were created in the last 30 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Find all assets that were updated in the last 24 hours, have a serial number of ""1234567890"", and are associated with a particular pharmacy ID.",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890' AND pharmacies_id = 123;
"Get the list of all hazards that are associated with a particular event ID, have a name containing the word ""fire"", and were created by a user with the ID 123.",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%' AND created_by = 123;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"".",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, and have a status of ""active"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1;
"Find all assets that were updated in the last 24 hours, have a serial number of ""1234567890"", are associated with a particular pharmacy ID, and have a status of ""active"".",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890' AND pharmacies_id = 123 AND is_active = 1;
"Get the list of all hazards that are associated with a particular event ID, have a name containing the word ""fire"", were created by a user with the ID 123, and have a status of ""open"".",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%' AND created_by = 123 AND is_open = 1;
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days and have a status of ""open"".",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND is_open = 1;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days and have a status of ""open"" and were created by a user with the ID 123.",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND is_open = 1 AND created_by = 123;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a city of ""London"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a city of ""London"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a city of ""London"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 14 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 14 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 14 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 14 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 30 days",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 30 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 30 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 60 days, have a status of ""active"", and were created in the last 30 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 60 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 90 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 90 days, have a status of ""active"", and were created in the last 90 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 90 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY
Get the asset types and their corresponding item IDs in a specific pharmacy.,"SELECT full_name, employee_id FROM staff_directory WHERE created_at >= NOW() - INTERVAL 3 MONTH;"
Find hazards with a specific organization hazard ID and associated with a particular pharmacy.,"SELECT asset_type_id, asset_items_id FROM assets WHERE pharmacies_id = 'random_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE organization_hazard_id = 'random_organization_hazard_id' AND pharmacies_id = 'random_pharmacy_id';
Get the event IDs and user IDs of event actions created by a specific user in the last week.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility.,"SELECT events_id, user_id FROM event_actions WHERE user_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 7 DAY;"
Retrieve the users' full names and organizations they belong to.,SELECT * FROM formsettings_summarytools WHERE tools_id = 'random_tool_id' AND facility_id = 'random_facility_id';
Get the names and countries of organizations created after a specific date.,"SELECT users_fullname, organization_id FROM users;"
Find pharmacies with a specific name and activated by a particular user.,"SELECT name, countries_id FROM organizations WHERE created_at > 'random_date';"
Retrieve events created by a specific user and type.,SELECT * FROM pharmacies WHERE name = 'random_pharmacy_name' AND activated_by = 'random_user_id';
Get the users' profiles IDs and their associated roles.,SELECT * FROM events WHERE users_id = 'random_user_id' AND events_type_id = 'random_event_type_id';
"Find organizations with names containing the word ""medical"" and located in a specific city.","SELECT profiles_id, roles_id FROM users;"
Retrieve the pharmacies' names and their associated organizations' names.,SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'random_city_name';
Get the event IDs and dates created by a specific user within the last month.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organizations_id = organizations.sf_id;"
Find users with a specific SF ID and their associated profile IDs.,"SELECT event_id, date_created FROM events WHERE users_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 1 MONTH;"
Retrieve the event staff roles' names and associated form IDs in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'random_sf_id';"
Get the organizations' names and addresses located in a specific country.,"SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find pharmacies created between two specific dates and owned by a particular organization.,"SELECT name, address FROM organizations WHERE countries_id = 'random_country_id';"
Retrieve the events' types and the number of occurrences for each type.,SELECT * FROM pharmacies WHERE created_at BETWEEN 'random_start_date' AND 'random_end_date' AND organizations_id = 'random_organization_id';
Get the staff directory entries with specific IDs and their associated employee IDs.,"SELECT events_type_id, COUNT(*) AS occurrences FROM events GROUP BY events_type_id;"
Retrieve the full names and roles of users who belong to a specific organization.,"SELECT * FROM staff_directory WHERE id IN ('random_id1', 'random_id2', 'random_id3') AND employee_id IS NOT NULL;"
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 120 days.","SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 120 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 120 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 180 days, have a status of ""active"", and were created in the last 120 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 180 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Retrieve the full names and roles of users who belong to a specific organization.,SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Retrieve the full names and email addresses of active users belonging to a specific organization.,"SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
Get the names and descriptions of assets associated with a specific pharmacy.,"SELECT full_name, email FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Find hazards created by a specific user and associated with a particular pharmacy.,"SELECT name, description FROM assets WHERE pharmacies_id = 'your_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE created_by = 'your_user_id' AND pharmacies_id = 'your_pharmacy_id';
"Get the event actions for a specific event ID and user ID, ordered by the action date in descending order.","SELECT name, order FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND facility_id = 'your_facility_id';
Get the users' full names and phone numbers in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""health"" and located in a specific city.","SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.",SELECT * FROM organizations WHERE name LIKE '%health%' AND city = 'your_city_name';
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find pharmacies activated by a specific user within a specific date range.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
Get the organizations' names and trial end dates in ascending order of trial end dates.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Find pharmacies created after a specific date and activated by a particular user.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.","SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.","SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Get the users' full names and their associated roles in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""hospital"" and located in a specific city.","SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Find users with a specific user ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM staff_directory WHERE created_at > 'your_date' AND organization_id = 'your_organization_id';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE active = 1 AND asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';
Find hazards with specific names and descriptions associated with a particular pharmacy.,SELECT * FROM hazards WHERE name = 'your_hazard_name' AND description = 'your_hazard_description' AND pharmacies_id = 'your_pharmacy_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM users WHERE organization_id = 'your_organization_id' AND created_at > 'your_date';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
"Find hazards with names containing the word ""fire"" and descriptions containing the word ""safety"" associated with a particular pharmacy.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND description LIKE '%safety%' AND pharmacies_id = 'your_pharmacy_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
"Retrieve the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Retrieve the users' full names and phone numbers in a specific organization.,"SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset"
"Retrieve the names and addresses of staff members in a specific organization, ordered by full name.","SELECT full_name, address FROM staff_directory WHERE organization_id = 'your_organization_id' ORDER BY full_name;"
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by facility name.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name;"
Get the count of active assets in a specific facility.,SELECT COUNT(*) AS active_asset_count FROM assets WHERE facility_id = 'your_facility_id' AND active = 1;
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by hazard name.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY name;"
"Find the events where a specific user has taken action within a specific date range, ordered by action date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND action_date BETWEEN 'start_date' AND 'end_date' ORDER BY action_date;
"Retrieve the names and order numbers of roles associated with a specific form ID, ordered by order number.","SELECT name, order FROM event_staff_roles WHERE form_id = 'your_form_id' ORDER BY order;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by updated date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND updated_date BETWEEN 'start_date' AND 'end_date' ORDER BY updated_date;
Get the count of open events in a specific facility.,SELECT COUNT(*) AS open_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 1;
"Retrieve the names and addresses of facilities associated with a specific organization, filtered by a specific city, ordered by address.","SELECT name, address FROM facilities WHERE organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY address;"
"Find events with a specific type and created by a specific user, filtered by a specific city, sorted by date created in descending order.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND created_by = 'your_user_id' AND city = 'your_city_name' ORDER BY date_created DESC;
"Retrieve the names and descriptions of tools associated with a specific form ID, filtered by a specific facility, ordered by name in descending order.","SELECT name, description FROM tools WHERE form_id = 'your_form_id' AND facility_id = 'your_facility_id' ORDER BY name DESC;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by event ID.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND event_id BETWEEN 'id1' AND 'id2' ORDER BY event_id;
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by name, limited to 10 records.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name LIMIT 10;"
description,query
Description,Query
Retrieve all staff members from the staff_directory table.,SELECT * FROM staff_directory;
Get the assets with an asset type ID of 123.,SELECT * FROM assets WHERE asset_type_id = 123;
"Find hazards with a name containing the word ""fire"" and created in the last month.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND created_at >= NOW() - INTERVAL 1 MONTH;
Get all event staff roles.,SELECT * FROM event_staff_roles;
Retrieve event actions for a specific user and pharmacy ID.,SELECT * FROM event_actions WHERE user_id = 123 AND user_pharmacy_id = 456;
Find form settings summary tools for a particular facility ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789;
Retrieve events created by a specific user and organization ID.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456;
Get all users with an active status.,SELECT * FROM users WHERE active = 1;
Retrieve the full names and employee IDs of active staff members.,"SELECT full_name, employee_id FROM staff_directory WHERE is_active = 1;"
Find assets with a specific serial number and belonging to a particular pharmacy.,SELECT * FROM assets WHERE serial_number = 'ABC123' AND pharmacies_id = 456;
Get all hazards created in the last week.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL '1 week';
Retrieve the names and order of event staff roles for a specific facility.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 789;"
Find event actions performed by a specific user and within a given date range.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-07-01' AND '2023-07-31';
Retrieve form settings summary tools for a specific form and organization.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND organization_id = 456;
Get events with a specific event type and open status.,SELECT * FROM events WHERE events_type_id = 123 AND is_open = 1;
Find users with a specific role and created after a certain date.,SELECT * FROM users WHERE roles_id = 789 AND date_created > '2023-01-01';
Retrieve organizations with a trial end date in the future.,SELECT * FROM organizations WHERE trial_ends_at > NOW();
Find pharmacies that were activated by a specific user.,SELECT * FROM pharmacies WHERE activated_by = 123;
Retrieve the IDs and full names of staff members belonging to a specific organization.,"SELECT id, full_name FROM staff_directory WHERE org_id = 123;"
Find assets that are currently active and belong to a particular organization.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456;
Get hazards with a specific name and description.,SELECT * FROM hazards WHERE name = 'Fire Hazard' AND description = 'High risk of fire outbreak.';
Retrieve the default event staff roles for a specific form ID.,SELECT * FROM event_staff_roles WHERE forms_id = 789 AND is_default = 1;
Find event actions performed by a specific user and updated within the last week.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_at >= NOW() - INTERVAL '1 week';
Get form settings summary tools for a particular facility and organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789 AND organization_id = 456;
Retrieve events created by a specific user and still open.,SELECT * FROM events WHERE users_id = 123 AND is_open = 1;
Find users with a specific role and active status.,SELECT * FROM users WHERE roles_id = 789 AND active = 1;
Get organizations created after a certain date and located in a specific city.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND city = 'New York';
Retrieve pharmacies that were activated within the last month.,SELECT * FROM pharmacies WHERE activated_by >= NOW() - INTERVAL '1 month';
Retrieve the user IDs and names of active staff members in a specific organization.,"SELECT user_id, full_name FROM staff_directory WHERE is_active = 1 AND org_id = 123;"
Find assets that were created or updated in the last 30 days.,SELECT * FROM assets WHERE created_at >= NOW() - INTERVAL '30 days' OR updated_at >= NOW() - INTERVAL '30 days';
"Get hazards with a description containing the word ""danger"" and created in the last 3 months.",SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months';
Retrieve the names and orders of event staff roles for a specific form ID and facility ID.,"SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456;"
Find event actions performed by a specific user,"updated by a specific user, and within a specific date range.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30';"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123;"
Retrieve events created by a specific user,"organization ID, and closed within the last week.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days';"
Find users with a specific role,"active status, and created after a certain date.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01';"
Get organizations with a trial end date in the future and located in a specific city.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London';
Find assets that are active,"belong to a specific organization, and have been updated within the last month.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND updated_at >= NOW() - INTERVAL '1 month';"
"Get hazards with a description containing the word ""danger"" and created in the last 3 months","ordered by their names in ascending order.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' ORDER BY name ASC;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones that have a default setting.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND is_default = 0;"
Find event actions performed by a specific user,"updated by a different specific user, and within a specific date range, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC;"
Retrieve events created by a specific user,"organization ID, and closed within the last week, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC;"
Get organizations with a trial end date in the future,"located in a specific city, and ordered by their trial end dates in descending order.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC;"
Retrieve pharmacies with a specific name,"activated by a specific user, and disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the full names and employee IDs of staff members who are active,"belong to a specific organization, and have a registration number.,SELECT full_name, employee_id FROM staff_directory WHERE is_active = 1 AND org_id = 123 AND reg_number IS NOT NULL;"
Find assets that are active,"belong to a specific organization, have a specific asset type ID, and have been updated within the last month.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_at >= NOW() - INTERVAL '1 month';"
"Get hazards with a description containing the word ""danger"" and created in the last 3 months","ordered by their names in ascending order and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' ORDER BY name ASC LIMIT 10;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones that have a default setting and ordered by the order in descending order.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND is_default = 0 ORDER BY order DESC;"
Find event actions performed by a specific user,"updated by a different specific user, and within a specific date range, ordered by the action date in descending order and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events created by a specific user,"organization ID, and closed within the last week, ordered by the event type ID in ascending order and limited to 50 rows.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, and ordered by their trial end dates in descending order and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, and disabled after a certain date, ordered by their names in ascending order and limited to 15 rows.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC LIMIT 15;"
Retrieve the IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Find assets that are currently active,"belong to a specific organization, have a specific asset type ID, and were updated by a specific user.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_by = 123;"
"Get hazards with a description containing the word ""danger""","created in the last 3 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' AND pharmacies_id = 789;"
Retrieve the names and orders of event staff roles for a specific form ID,"facility ID, and updated by a specific user.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND updates_by = 123;"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events created by a specific user and organization ID,"closed within the last week, and ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, and ordered by their trial end dates in descending order and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, and ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the names and IDs of staff members who are active,"belong to a specific organization, and have been updated in the last 3 months.,SELECT full_name, id FROM staff_directory WHERE is_active = 1 AND org_id = 123 AND updated_at >= NOW() - INTERVAL '3 months';"
Find assets that are active,"belong to a specific organization, have a specific asset type ID, and have a serial number starting with 'ABC'.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND serial_number LIKE 'ABC%';"
"Get hazards with a description containing the word ""fire"" and created in the last 6 months","ordered by their created dates in descending order.,SELECT * FROM hazards WHERE description LIKE '%fire%' AND created_at >= NOW() - INTERVAL '6 months' ORDER BY created_at DESC;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones with a specific name.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND name NOT LIKE '%Admin%';"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 10 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 10;"
Retrieve events created by a specific user,"organization ID, and closed within the last month, ordered by the event type ID in ascending order, and limited to 20 rows.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '1 month' ORDER BY events_type_id ASC LIMIT 20;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order, and limited to 15 rows.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC LIMIT 15;"
Retrieve the user IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Find assets that are currently active,"belong to a specific organization, have a specific asset type ID, and were updated by a specific user.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_by = 123;"
"Get hazards with a description containing the word ""danger""","created in the last 3 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' AND pharmacies_id = 789;"
Retrieve the names and orders of event staff roles for a specific form ID,"facility ID, and updated by a specific user.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND updates_by = 123;"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events created by a specific user and organization ID,"closed within the last week, and ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Find assets that are currently active,"belong to a specific organization, have a specific asset type ID, and were updated by a specific user.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_by = 123;"
"Get hazards with a description containing the word ""danger""","created in the last 3 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' AND pharmacies_id = 789;"
Retrieve the names and orders of event staff roles for a specific form ID,"facility ID, and updated by a specific user.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND updates_by = 123;"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events created by a specific user and organization ID,"closed within the last week, and ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Find assets that are currently active,"belong to a specific organization, have a specific asset type ID, and were updated by a specific user.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_by = 123;"
"Get hazards with a description containing the word ""danger""","created in the last 3 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' AND pharmacies_id = 789;"
Retrieve the names and orders of event staff roles for a specific form ID,"facility ID, and updated by a specific user.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND updates_by = 123;"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events created by a specific user and organization ID,"closed within the last week, and ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Find assets that are currently active,"belong to a specific organization, have a specific asset type ID, and were updated by a specific user.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_by = 123;"
"Get hazards with a description containing the word ""danger""","created in the last 3 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' AND pharmacies_id = 789;"
Retrieve the names and orders of event staff roles for a specific form ID,"facility ID, and updated by a specific user.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND updates_by = 123;"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events created by a specific user and organization ID,"closed within the last week, and ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Find assets that are currently active,"belong to a specific organization, have a specific asset type ID, and were updated by a specific user.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_by = 123;"
"Get hazards with a description containing the word ""danger""","created in the last 3 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' AND pharmacies_id = 789;"
Retrieve the names and orders of event staff roles for a specific form ID,"facility ID, and updated by a specific user.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND updates_by = 123;"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events created by a specific user and organization ID,"closed within the last week, and ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Find assets that are currently active,"belong to a specific organization, have a specific asset type ID, and were updated by a specific user.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_by = 123;"
"Get hazards with a description containing the word ""danger""","created in the last 3 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' AND pharmacies_id = 789;"
Retrieve the names and orders of event staff roles for a specific form ID,"facility ID, and updated by a specific user.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND updates_by = 123;"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events created by a specific user and organization ID,"closed within the last week, and ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Find assets that are currently active,"belong to a specific organization, have a specific asset type ID, and were updated by a specific user.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_by = 123;"
"Get hazards with a description containing the word ""danger""","created in the last 3 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' AND pharmacies_id = 789;"
Retrieve the names and orders of event staff roles for a specific form ID,"facility ID, and updated by a specific user.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND updates_by = 123;"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events created by a specific user and organization ID,"closed within the last week, and ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 30;"
Get organizations with a trial end date in the future,"located in a specific city, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve all staff members from the staff_directory table.,SELECT * FROM staff_directory;
Get the assets with an asset type ID of 123.,SELECT * FROM assets WHERE asset_type_id = 123;
"Find hazards with a name containing the word ""fire"" and created in the last month.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND created_at >= NOW() - INTERVAL 1 MONTH;
Get all event staff roles.,SELECT * FROM event_staff_roles;
Retrieve event actions for a specific user and pharmacy ID.,SELECT * FROM event_actions WHERE user_id = 123 AND user_pharmacy_id = 456;
Find form settings summary tools for a particular facility ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789;
Retrieve events created by a specific user and organization ID.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456;
Get all users with an active status.,SELECT * FROM users WHERE active = 1;
Retrieve the full names of staff members who have an official user ID.,SELECT full_name FROM staff_directory WHERE official_user_id IS NOT NULL;
Find assets that have been updated in the last 7 days.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS;
Get hazards with a description longer than 100 characters.,SELECT * FROM hazards WHERE LENGTH(description) > 100;
Retrieve the names and orders of event staff roles in alphabetical order.,"SELECT name, `order` FROM event_staff_roles ORDER BY name ASC;"
Find event actions that were updated by a specific user.,SELECT * FROM event_actions WHERE updated_by = 123;
Get form settings summary tools for a specific organization ID.,SELECT * FROM formsettings_summarytools WHERE organization_id = 456;
Retrieve events that are still open.,SELECT * FROM events WHERE is_open = 1;
Find users with a specific type and created after a certain date.,SELECT * FROM users WHERE type = 'admin' AND date_created > '2023-01-01';
Get organizations located in a specific city.,SELECT * FROM organizations WHERE city = 'New York';
Retrieve pharmacies that were activated by a specific user.,SELECT * FROM pharmacies WHERE activated_by = 123;
Find assets that are currently active and have a serial number starting with 'ABC'.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE 'ABC%';
Get hazards created in the last 30 days and belong to a specific organization.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAYS AND organizations_id = 789;
Retrieve the names and IDs of staff members ordered by their full names in ascending order.,"SELECT full_name, id FROM staff_directory ORDER BY full_name ASC;"
Find assets with a specific asset item ID and belong to a specific organization.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456;
"Get hazards with a description containing the word ""safety"" and created in the last 6 months.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS;
Retrieve all event staff roles with a specific order.,SELECT * FROM event_staff_roles WHERE `order` = 1;
Find event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456;
Get form settings summary tools for a specific form ID and updated by a specific user.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123;
Retrieve events that have a specific event type ID and created by a specific user.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456;
Find users with a specific profile ID and active status.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1;
Get organizations created after a certain date and located in a specific country.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123;
Retrieve pharmacies with a specific organization ID and created before a certain date.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01';
Find assets that were updated in the last 7 days and belong to a specific organization.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123;
Get hazards with a description shorter than 50 characters and created by a specific pharmacy.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456;
Retrieve the names and orders of event staff roles ordered by their orders in descending order.,"SELECT name, `order` FROM event_staff_roles ORDER BY `order` DESC;"
Find event actions that were updated by a specific user and created after a certain date.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01';
Get form settings summary tools for a specific facility ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456;
Retrieve events that are still open and created by a specific user.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123;
Find users with a specific type and created between two dates.,SELECT * FROM users WHERE type = 'admin' AND date_created BETWEEN '2023-01-01' AND '2023-01-31';
Get organizations located in a specific city and created after a certain date.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01';
Retrieve pharmacies that were activated by a specific user and created before a certain date.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01';
Find assets that are currently active and have a serial number ending with 'XYZ'.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ';
Get hazards created in the last 30 days and have a specific organization ID.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAYS AND organizations_id = 123;
Retrieve the names and IDs of staff members ordered by their IDs in ascending order.,"SELECT full_name, id FROM staff_directory ORDER BY id ASC;"
Find assets with a specific asset item ID,"belong to a specific organization, and have a certain serial number.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ';"
"Get hazards with a description containing the word ""safety"" and created in the last 6 months","ordered by their names in ascending order.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC;"
Retrieve all event staff roles with a specific order and form ID.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123;
Find event actions for a specific event ID,"user ID, and action date within a specific date range.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31';"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW();"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789;"
Retrieve the names and orders of event staff roles ordered by their names in descending order.,"SELECT name, `order` FROM event_staff_roles ORDER BY name DESC;"
Find event actions that were updated by a specific user,"created after a certain date, and belong to a specific event.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01' AND events_id = 456;"
Get form settings summary tools for a specific facility ID,"organization ID, and updated by a specific user.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456 AND updated_by = 789;"
Retrieve events that are still open,"created by a specific user, and closed within the last week.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123 AND date_closed >= NOW() - INTERVAL '7 days';"
Find users with a specific type,"active status, and created between two dates, ordered by their full names in ascending order.,SELECT * FROM users WHERE type = 'admin' AND active = 1 AND date_created BETWEEN '2023-01-01' AND '2023-01-31' ORDER BY full_name ASC;"
Get organizations located in a specific city,"created after a certain date, and have a trial end date in the future.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01' AND trial_ends_at > NOW();"
Retrieve pharmacies that were activated by a specific user,"created before a certain date, and disabled after a certain date.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01' AND date_disabled > '2023-01-01';"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order, and limited to 50 rows.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC LIMIT 50;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order, and limited to 50 rows.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC LIMIT 50;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order, and limited to 20 rows.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC LIMIT 20;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 30 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 30;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order, and limited to 30 rows.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC LIMIT 30;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, ordered by their names in ascending order, and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC LIMIT 10;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order, and limited to 10 rows.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC LIMIT 10;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order, and limited to 50 rows.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC LIMIT 50;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order, and limited to 20 rows.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC LIMIT 20;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve all records from the orders table within the last 2 months,"SELECT * FROM orders WHERE order_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 MONTH);"
Get the data from the log table between today's date and the previous week,"SELECT * FROM log WHERE log_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 WEEK) AND CURRENT_DATE();"
I need the records from the events table where the timestamp is between 9 PM and 9:45 PM today,"SELECT * FROM events WHERE timestamp >= CURRENT_DATE() + INTERVAL 21 HOUR AND timestamp <= CURRENT_DATE() + INTERVAL 21 HOUR + INTERVAL 45 MINUTE;"
Show me the entries from the messages table for the past 24 hours,"SELECT * FROM messages WHERE timestamp >= CURRENT_DATE() - INTERVAL 24 HOUR;"
Get the data from the sensor readings table between yesterday at 6 AM and today at 10 AM,"SELECT * FROM sensor_readings WHERE reading_time >= CURRENT_DATE() - INTERVAL 1 DAY + INTERVAL 6 HOUR AND reading_time <= CURRENT_DATE() + INTERVAL 10 HOUR;"
Retrieve the product details for a specific category with the given category ID from the products table,"SELECT * FROM products WHERE category_id = '9876';"
Show me the email addresses of all active subscribers from the newsletter table,"SELECT email FROM newsletter WHERE subscribed = 1 AND status = 'active';"
Get the average rating of all movies released in the past year from the movies table,"SELECT AVG(rating) AS average_rating FROM movies WHERE release_year = YEAR(CURRENT_DATE()) - 1;"
Retrieve the names and phone numbers of all contacts from the address book table,"SELECT name, phone_number FROM address_book;"
Show me the orders placed on a specific date from the orders table,"SELECT * FROM orders WHERE order_date = '2023-06-27';"
Get the total revenue for each region from the sales table,"SELECT region, SUM(revenue) AS total_revenue FROM sales GROUP BY region;"
Retrieve the product details for a specific order with the given order ID from the order_items table,"SELECT * FROM products WHERE product_id IN (SELECT product_id FROM order_items WHERE order_id = '56789');"
Show me the names and email addresses of all active users from the users table,"SELECT name, email FROM users WHERE status = 'active';"
Get the count of products in each category from the products table,"SELECT category, COUNT(*) AS product_count FROM products GROUP BY category;"
Retrieve the order details for a specific product with the given product ID from the orders table,"SELECT * FROM orders WHERE product_id = 'PQ789';"
Show me the customers who have placed more than 5 orders from the customers table,"SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM orders GROUP BY customer_id HAVING COUNT(*) > 5);"
Get the maximum salary for each department from the employees table,"SELECT department, MAX(salary) AS max_salary FROM employees GROUP BY department;"
Retrieve the names and ages of all employees in the HR department from the employees table,"SELECT name, age FROM employees WHERE department = 'HR';"
Show me the sales data for a specific product with the given product ID 'XYZ789' from the sales table,"SELECT * FROM sales WHERE product_id = 'XYZ789';"
Get the average rating of all hotels from the ratings table,"SELECT AVG(rating) AS average_rating FROM ratings WHERE category = 'hotel';"
Retrieve the customer details for a specific invoice with the given invoice number 'INV123' from the invoices table,"SELECT * FROM customers WHERE customer_id = (SELECT customer_id FROM invoices WHERE invoice_number = 'INV123');"
Show me the products with a stock quantity less than 10 from the inventory table,"SELECT * FROM inventory WHERE quantity < 10;"
Get the total sales amount for each year from the sales table,"SELECT YEAR(sales_date) AS year, SUM(amount) AS total_sales FROM sales GROUP BY year;"
Retrieve the names and email addresses of all subscribers from the newsletter table,"SELECT name, email FROM newsletter WHERE subscribed = 1;"
Show me the orders placed by a specific customer with the given customer ID 'ABC789' from the orders table,"SELECT * FROM orders WHERE customer_id = 'ABC789';"
Get the count of employees in each department from the employees table,"SELECT department, COUNT(*) AS employee_count FROM employees GROUP BY department;"
Retrieve the product details for a specific category with the given category ID '5432' from the products table,"SELECT * FROM products WHERE category_id = '5432';"
Show me the email addresses of all active subscribers from the newsletter table,"SELECT email FROM newsletter WHERE subscribed = 1 AND status = 'active';"
Get the average rating of all movies released in the past year from the movies table,"SELECT AVG(rating) AS average_rating FROM movies WHERE release_year = YEAR(CURRENT_DATE()) - 1;"
Retrieve the names and phone numbers of all contacts from the address book table,"SELECT name, phone_number FROM address_book;"
Show me the orders placed on 27th June 2023 from the orders table,"SELECT * FROM orders WHERE order_date = '2023-06-27';"
Get the total revenue for each region from the sales table,"SELECT region, SUM(revenue) AS total_revenue FROM sales GROUP BY region;"
Retrieve the product details for a specific order with the given order ID '56789' from the order_items table,"SELECT * FROM products WHERE product_id IN (SELECT product_id FROM order_items WHERE order_id = '56789');"
Show me the names and email addresses of all active users from the users table,"SELECT name, email FROM users WHERE status = 'active';"
Get the count of products in each category from the products table,"SELECT category, COUNT(*) AS product_count FROM products GROUP BY category;"
Retrieve the order details for a specific product with the given product ID 'PQ789' from the orders table,"SELECT * FROM orders WHERE product_id = 'PQ789';"
Show me the customers who have placed more than 5 orders from the customers table,"SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM orders GROUP BY customer_id HAVING COUNT(*) > 5);"
Get the maximum salary for each department from the employees table,"SELECT department, MAX(salary) AS max_salary FROM employees GROUP BY department;"
Retrieve the names and ages of all employees in a specific department from the employees table,"SELECT name, age FROM employees WHERE department = 'Sales';"
Show me the sales data for a specific product with the given product ID XYZ789 from the sales table,"SELECT * FROM sales WHERE product_id = 'XYZ789';"
Get the average rating of all hotels from the ratings table,"SELECT AVG(rating) AS average_rating FROM ratings WHERE category = 'hotel';"
Retrieve the customer details for a specific invoice with the invoice number INV123 from the invoices table,"SELECT * FROM customers WHERE customer_id = (SELECT customer_id FROM invoices WHERE invoice_number = 'INV123');"
Show me the products with a stock quantity less than 10 from the inventory table,"SELECT * FROM inventory WHERE quantity < 10;"
Get the total sales amount for each year from the sales table,"SELECT YEAR(sales_date) AS year, SUM(amount) AS total_sales FROM sales GROUP BY year;"
Retrieve the names and email addresses of all subscribers from the newsletter table,"SELECT name, email FROM newsletter WHERE subscribed = 1;"
Show me the orders placed by a specific customer with the customer ID ABC789 from the orders table,"SELECT * FROM orders WHERE customer_id = 'ABC789';"
Get the count of employees in each department from the employees table,"SELECT department, COUNT(*) AS employee_count FROM employees GROUP BY department;"
Retrieve the product details for a specific category with the  category ID 5432 from the products table,"SELECT * FROM products WHERE category_id = '5432';"
Show me the email addresses of all active subscribers from the newsletter table,"SELECT email FROM newsletter WHERE subscribed = 1 AND status = 'active';"
Get the average rating of all movies released in the past year from the movies table,"SELECT AVG(rating) AS average_rating FROM movies WHERE release_year = YEAR(CURRENT_DATE()) - 1;"
Retrieve the names and phone numbers of all contacts from the address book table,"SELECT name, phone_number FROM address_book;"
Show me the orders placed on 27-06-2023 from the orders table,"SELECT * FROM orders WHERE order_date = '2023-06-27';"
Get the total revenue for each region from the sales table,"SELECT region, SUM(revenue) AS total_revenue FROM sales GROUP BY region;"
Retrieve the product details for a specific order with the order ID '56789' from the order_items table,"SELECT * FROM products WHERE product_id IN (SELECT product_id FROM order_items WHERE order_id = '56789');"
Show me the names and email addresses of all active users from the users table,"SELECT name, email FROM users WHERE status = 'active';"
Get the count of products in each category from the products table,"SELECT category, COUNT(*) AS product_count FROM products GROUP BY category;"
Retrieve the order details for a specific product with the given product ID PQ789  from the orders table,"SELECT * FROM orders WHERE product_id = 'PQ789';"
how me the customers who have placed more than 5 orders from the customers table,"SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM orders GROUP BY customer_id HAVING COUNT(*) > 5);"
Get the maximum salary for each department from the employees table,"SELECT department, MAX(salary) AS max_salary FROM employees GROUP BY department;"
Retrieve the names and ages of all employees in the Marketing department from the employees table,"SELECT name, age FROM employees WHERE department = 'Marketing';"
Show me the sales data for a specific product with the product ID 'XYZ789' from the sales table,"SELECT * FROM sales WHERE product_id = 'XYZ789';"
Get the average rating of all hotels from the ratings table,"SELECT AVG(rating) AS average_rating FROM ratings WHERE category = 'hotel';"
Retrieve the customer details for a specific invoice with the given invoice number from the invoices table,"SELECT * FROM customers WHERE customer_id = (SELECT customer_id FROM invoices WHERE invoice_number = 'INV123');"
Show me the products with a stock quantity less than 10 from the inventory table,"SELECT * FROM inventory WHERE quantity < 10;"
Get the total sales amount for each year from the sales table,"SELECT YEAR(sales_date) AS year, SUM(amount) AS total_sales FROM sales GROUP BY year;"
Retrieve the names and email addresses of all subscribers from the newsletter table,"SELECT name, email FROM newsletter WHERE subscribed = 1;"
Show me the orders placed by a specific customer with the  customer ID 'ABC789' from the orders table,"SELECT * FROM orders WHERE customer_id = 'ABC789';"
Get the count of employees in each department from the employees table,"SELECT department, COUNT(*) AS employee_count FROM employees GROUP BY department;"
Retrieve the product details for a specific category with the given category ID from the products table,"SELECT * FROM products WHERE category_id = '5432';"
Show me the email addresses of all active subscribers from the newsletter table,"SELECT email FROM newsletter WHERE subscribed = 1 AND status = 'active';"
Get the average rating of all movies released in the past year from the movies table,"SELECT AVG(rating) AS average_rating FROM movies WHERE release_year = YEAR(CURRENT_DATE()) - 1;"
Retrieve the names and phone numbers of all contacts from the address book table,"SELECT name, phone_number FROM address_book;"
Show me the orders placed on 27th June 2023 from the orders table,"SELECT * FROM orders WHERE order_date = '2023-06-27';"
Get the total revenue for each region from the sales table,"SELECT region, SUM(revenue) AS total_revenue FROM sales GROUP BY region;"
Retrieve the product details for a specific order with the  order ID = '56789'  from the order_items table,"SELECT * FROM products WHERE product_id IN (SELECT product_id FROM order_items WHERE order_id = '56789');"
Show me the names and email addresses of all active users from the users table,"SELECT name, email FROM users WHERE status = 'active';"
Get the count of products in each category from the products table,"SELECT category, COUNT(*) AS product_count FROM products GROUP BY category;"
Retrieve the order details for a specific product with the  product ID = 'PQ789' from the orders table,"SELECT * FROM orders WHERE product_id = 'PQ789';"
Show me the customers who have placed more than 5 orders from the customers table,"SELECT * FROM customers WHERE customer_id IN (SELECT customer_id FROM orders GROUP BY customer_id HAVING COUNT(*) > 5);"
Get the maximum salary for each department from the employees table,"SELECT department, MAX(salary) AS max_salary FROM employees GROUP BY department;"
Retrieve the names and ages of all employees in Finance department from the employees table,"SELECT name, age FROM employees WHERE department = 'Finance';"
Show me the sales data for a specific product with the product ID XYZ789 from the sales table,"SELECT * FROM sales WHERE product_id = 'XYZ789';"
Get the average rating of all hotels from the ratings table,"SELECT AVG(rating) AS average_rating FROM ratings WHERE category = 'hotel';"
Retrieve the customer details for a specific invoice with the given invoice number from the invoices table,"SELECT * FROM customers WHERE customer_id = (SELECT customer_id FROM invoices WHERE invoice_number = 'INV123');"
Show me the products with a stock quantity less than 10 from the inventory table,"SELECT * FROM inventory WHERE quantity < 10;"
Get the total sales amount for each year from the sales table,"SELECT YEAR(sales_date) AS year, SUM(amount) AS total_sales FROM sales GROUP BY year;"
Retrieve all records from the orders table within the last 2 months,"SELECT * FROM orders WHERE order_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 MONTH);"
Get the data from the log table between today's date and the previous week,"SELECT * FROM log WHERE log_date BETWEEN DATE_SUB(CURRENT_DATE(), INTERVAL 1 WEEK) AND CURRENT_DATE();"
I need the records from the events table where the timestamp is between 9 PM and 9:45 PM today,"SELECT * FROM events WHERE DATE(event_timestamp) = CURRENT_DATE() AND TIME(event_timestamp) BETWEEN '21:00:00' AND '21:45:00';"
Show me the entries from the messages table for the past 24 hours,"SELECT * FROM messages WHERE message_date >= DATE_SUB(NOW(), INTERVAL 24 HOUR);"
Retrieve all records from the orders table that were placed on the 5th day of any month,"SELECT * FROM orders WHERE DAY(order_date) = 5;"
Get the data from the log table for the current month,"SELECT * FROM log WHERE MONTH(log_date) = MONTH(CURRENT_DATE());"
I need the records from the events table where the timestamp is on a specific date '2023-06-27',"SELECT * FROM events WHERE DATE(event_timestamp) = '2023-06-27';"
Show me the entries from the messages table for a specific date with a numeric month and day,"SELECT * FROM messages WHERE DATE_FORMAT(message_date, '%m%d') = '0627';"
Get the data from the sensor readings table between two specific dates in the format 'YYYY-MM-DD',"SELECT * FROM sensor_readings WHERE reading_date BETWEEN '2023-06-27' AND '2023-06-30';"
Retrieve all records from the orders table that were placed in the current year,"SELECT * FROM orders WHERE YEAR(order_date) = YEAR(CURRENT_DATE());"
Get the data from the log table for the current week,"SELECT * FROM log WHERE YEARWEEK(log_date) = YEARWEEK(CURRENT_DATE());"
I need the records from the events table where the timestamp is on a specific date with a month name in lowercase,"SELECT * FROM events WHERE DATE_FORMAT(event_timestamp, '%d %b %Y') = '27 jun 2023';"
Show me the entries from the messages table for a specific date with an alphanumeric month and day,"SELECT * FROM messages WHERE DATE_FORMAT(message_date, '%d%b') = '27Jun';"
Get the data from the sensor readings table between two specific dates with a combination of alphanumeric characters,"SELECT * FROM sensor_readings WHERE reading_date BETWEEN '2023-06-27' AND '2023-07-05';"
Retrieve all records from the orders table that were placed on 4th day of the week,"SELECT * FROM orders WHERE DAYOFWEEK(order_date) = 4;"
Get the data from the log table for 6th month,"SELECT * FROM log WHERE MONTH(log_date) = 6;"
I need the records from the events table where the timestamp is on a specific date with a month name in uppercase,"SELECT * FROM events WHERE DATE_FORMAT(event_timestamp, '%d %M %Y') = '27 JUNE 2023';"
Show me the entries from the messages table for a specific date with a numeric day and month,"SELECT * FROM messages WHERE DATE_FORMAT(message_date, '%d-%m') = '27-06';"
Get the data from the sensor readings table between two specific dates with a combination of numeric and alphanumeric characters,"SELECT * FROM sensor_readings WHERE reading_date BETWEEN '2023-06-27' AND '2023-07-05';"
Retrieve all records from the orders table that were placed on a specific month of any year,"SELECT * FROM orders WHERE MONTH(order_date) = 6;"
Get the data from the log table for the current quarter,"SELECT * FROM log WHERE QUARTER(log_date) = QUARTER(CURRENT_DATE());"
I need the records from the events table where the timestamp is on '27 Jun 2023',"SELECT * FROM events WHERE DATE_FORMAT(event_timestamp, '%d %b %Y') = '27 Jun 2023';"
Show me the entries from the messages table for a specific date with a day in numeric and month abbreviation format,"SELECT * FROM messages WHERE DATE_FORMAT(message_date, '%d-%b') = '27-Jun';"
Get the data from the sensor readings table between two specific dates with a combination of alphanumeric characters and symbols,"SELECT * FROM sensor_readings WHERE reading_date BETWEEN '2023-06-27' AND '2023/07/05';"
Retrieve all records from the orders table that were placed on a specific day of the year,"SELECT * FROM orders WHERE DAYOFYEAR(order_date) = 178;"
Get the data from the log table for the year 2023,"SELECT * FROM log WHERE YEAR(log_date) = 2023;"
I need the records from the events table where the timestamp is '27 JUN 2023',"SELECT * FROM events WHERE DATE_FORMAT(event_timestamp, '%d %b %Y') = '27 JUN 2023';"
Show me the entries from the messages table for 27th jun,"SELECT * FROM messages WHERE DATE_FORMAT(message_date, '%d%b') = '27Jun';"
Get the data from the sensor readings table between 27th june 2023 and 30th june 2023 ,"SELECT * FROM sensor_readings WHERE reading_date BETWEEN '2023-06-27' AND '2023-Jun-30';"
Retrieve all records from the orders table that were placed on a specific day of the month,"SELECT * FROM orders WHERE DAYOFMONTH(order_date) = 27;"
Get the data from the log table for the current month and year,"SELECT * FROM log WHERE YEAR(log_date) = YEAR(CURRENT_DATE()) AND MONTH(log_date) = MONTH(CURRENT_DATE());"
I need the records from the events table where the timestamp = 27 JunE 2023,"SELECT * FROM events WHERE DATE_FORMAT(event_timestamp, '%d %b %Y') = '27 JunE 2023';"
Show me the entries from the messages table on the date 12th April,"SELECT * FROM messages WHERE DATE_FORMAT(message_date, '%d %M') = '12 April';"
Get the data from the log table for the current quarter and year,"SELECT * FROM log WHERE YEAR(log_date) = YEAR(CURRENT_DATE()) AND QUARTER(log_date) = QUARTER(CURRENT_DATE());"
Retrieve all orders placed between 9:00 AM and 5:00 PM on June 15 2023,"SELECT * FROM orders WHERE order_date >= '2023-06-15 09:00:00' AND order_date <= '2023-06-15 17:00:00';"
Get the total sales revenue for the past 24 hours,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= DATE_SUB(NOW(), INTERVAL 24 HOUR);"
Show me the messages sent after 6:00 PM on January 1 2023,"SELECT * FROM messages WHERE message_date >= '2023-01-01 18:00:00';"
Retrieve all records from the log table between 12:00 PM and 3:00 PM on December 31 2022,"SELECT * FROM log WHERE log_date >= '2022-12-31 12:00:00' AND log_date <= '2022-12-31 15:00:00';"
Get the data from the sensor readings table for the last 7 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 7 DAY);"
Show me the entries from the events table between 8:00 AM and 10:00 AM on September 30 2022,"SELECT * FROM events WHERE event_timestamp >= '2022-09-30 08:00:00' AND event_timestamp <= '2022-09-30 10:00:00';"
Retrieve all orders placed between 12:00 PM and 11:59 PM on July 4 2023,"SELECT * FROM orders WHERE order_date >= '2023-07-04 12:00:00' AND order_date <= '2023-07-04 23:59:59';"
Get the total revenue generated from sales between 9:00 AM and 6:00 PM on October 15 2022,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2022-10-15 09:00:00' AND sale_date <= '2022-10-15 18:00:00';"
Retrieve all records from the log table between 10:30 AM and 11:30 AM on August 1 2022,"SELECT * FROM log WHERE log_date >= '2022-08-01 10:30:00' AND log_date <= '2022-08-01 11:30:00';"
Get the data from the sensor readings table for the last 48 hours,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 48 HOUR);"
Show me the entries from the events table between 5:00 PM and 9:00 PM on November 30 2022,"SELECT * FROM events WHERE event_timestamp >= '2022-11-30 17:00:00' AND event_timestamp <= '2022-11-30 21:00:00';"
Retrieve all orders placed between 1:00 PM and 6:00 PM on April 15 2023,"SELECT * FROM orders WHERE order_date >= '2023-04-15 13:00:00' AND order_date <= '2023-04-15 18:00:00';"
Get the total revenue generated from sales between 10:00 AM and 3:00 PM on November 1 2022,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2022-11-01 10:00:00' AND sale_date <= '2022-11-01 15:00:00';"
Show me the messages sent on March 15 2023 between 4:00 PM and 7:00 PM,"SELECT * FROM messages WHERE message_date >= '2023-03-15 16:00:00' AND message_date <= '2023-03-15 19:00:00';"
Retrieve all records from the log table between 9:30 AM and 12:30 PM on October 31 2022,"SELECT * FROM log WHERE log_date >= '2022-10-31 09:30:00' AND log_date <= '2022-10-31 12:30:00';"
Get the data from the sensor readings table for the last 72 hours,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 72 HOUR);"
Show me the entries from the events table between 1:00 PM and 3:00 PM on December 15 2022,"SELECT * FROM events WHERE event_timestamp >= '2022-12-15 13:00:00' AND event_timestamp <= '2022-12-15 15:00:00';"
Retrieve all orders placed between 3:30 PM and 9:30 PM on February 28 2023,"SELECT * FROM orders WHERE order_date >= '2023-02-28 15:30:00' AND order_date <= '2023-02-28 21:30:00';"
Get the total revenue generated from sales between 12:00 PM and 5:00 PM on September 1 2022,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2022-09-01 12:00:00' AND sale_date <= '2022-09-01 17:00:00';"
Show me the messages sent on April 30 2023 between 6:00 PM and 9:00 PM,"SELECT * FROM messages WHERE message_date >= '2023-04-30 18:00:00' AND message_date <= '2023-04-30 21:00:00';"
Retrieve all records from the log table between 8:30 AM and 10:30 AM on November 1 2022,"SELECT * FROM log WHERE log_date >= '2022-11-01 08:30:00' AND log_date <= '2022-11-01 10:30:00';"
Get the data from the sensor readings table for the last 5 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 5 DAY);"
Show me the entries from the events table between 4:00 PM and 6:00 PM on October 15 2022,"SELECT * FROM events WHERE event_timestamp >= '2022-10-15 16:00:00' AND event_timestamp <= '2022-10-15 18:00:00';"
Retrieve all orders placed between 11:00 AM and 8:00 PM on March 31 2023,"SELECT * FROM orders WHERE order_date >= '2023-03-31 11:00:00' AND order_date <= '2023-03-31 20:00:00';"
Get the total revenue generated from sales between 1:00 PM and 7:00 PM on December 1 2022,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2022-12-01 13:00:00' AND sale_date <= '2022-12-01 19:00:00';"
Show me the messages sent on May 15 2023 between 5:00 PM and 8:00 PM,"SELECT * FROM messages WHERE message_date >= '2023-05-15 17:00:00' AND message_date <= '2023-05-15 20:00:00';"
Retrieve all records from the log table between 10:00 AM and 12:00 PM on September 1 2022,"SELECT * FROM log WHERE log_date >= '2022-09-01 10:00:00' AND log_date <= '2022-09-01 12:00:00';"
Get the data from the sensor readings table for the last 3 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 3 DAY);"
Show me the entries from the events table between 2:00 PM and 4:00 PM on January 15 2023,"SELECT * FROM events WHERE event_timestamp >= '2023-01-15 14:00:00' AND event_timestamp <= '2023-01-15 16:00:00';"
Retrieve all orders placed between 4:30 PM and 10:30 PM on May 31 2023,"SELECT * FROM orders WHERE order_date >= '2023-05-31 16:30:00' AND order_date <= '2023-05-31 22:30:00';"
Get the total revenue generated from sales between 2:00 PM and 8:00 PM on February 1 2023,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2023-02-01 14:00:00' AND sale_date <= '2023-02-01 20:00:00';"
Show me the messages sent on June 15 2023 between 6:00 PM and 9:00 PM,"SELECT * FROM messages WHERE message_date >= '2023-06-15 18:00:00' AND message_date <= '2023-06-15 21:00:00';"
Retrieve all records from the log table between 7:30 AM and 9:30 AM on December 15 2022,"SELECT * FROM log WHERE log_date >= '2022-12-15 07:30:00' AND log_date <= '2022-12-15 09:30:00';"
Get the data from the sensor readings table for the last 4 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 4 DAY);"
Show me the entries from the events table between 3:00 PM and 5:00 PM on February 15 2023,"SELECT * FROM events WHERE event_timestamp >= '2023-02-15 15:00:00' AND event_timestamp <= '2023-02-15 17:00:00';"
Retrieve all orders placed between 2:30 PM and 7:30 PM on April 30 2023,"SELECT * FROM orders WHERE order_date >= '2023-04-30 14:30:00' AND order_date <= '2023-04-30 19:30:00';"
Get the total revenue generated from sales between 3:00 PM and 9:00 PM on March 1 2023,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2023-03-01 15:00:00' AND sale_date <= '2023-03-01 21:00:00';"
Show me the messages sent on July 15 2023 between 7:00 PM and 10:00 PM,"SELECT * FROM messages WHERE message_date >= '2023-07-15 19:00:00' AND message_date <= '2023-07-15 22:00:00';"
Retrieve all records from the log table between 6:00 AM and 8:00 AM on January 1 2023,"SELECT * FROM log WHERE log_date >= '2023-01-01 06:00:00' AND log_date <= '2023-01-01 08:00:00';"
Get the data from the sensor readings table for the last 2 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 2 DAY);"
Show me the entries from the events table between 1:30 PM and 3:30 PM on November 15 2022,"SELECT * FROM events WHERE event_timestamp >= '2022-11-15 13:30:00' AND event_timestamp <= '2022-11-15 15:30:00';"
Retrieve all orders placed between 5:00 PM and 11:00 PM on June 30 2023,"SELECT * FROM orders WHERE order_date >= '2023-06-30 17:00:00' AND order_date <= '2023-06-30 23:00:00';"
Get the total revenue generated from sales between 4:00 PM and 10:00 PM on January 1 2023,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2023-01-01 16:00:00' AND sale_date <= '2023-01-01 22:00:00';"
Show me the messages sent on August 15 2023 between 8:00 PM and 11:00 PM,"SELECT * FROM messages WHERE message_date >= '2023-08-15 20:00:00' AND message_date <= '2023-08-15 23:00:00';"
Retrieve all records from the log table between 7:00 AM and 9:00 AM on February 1 2023,"SELECT * FROM log WHERE log_date >= '2023-02-01 07:00:00' AND log_date <= '2023-02-01 09:00:00';"
Get the data from the sensor readings table for the last 6 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 6 DAY);"
Show me the entries from the events table between 2:30 PM and 4:30 PM on March 15 2023,"SELECT * FROM events WHERE event_timestamp >= '2023-03-15 14:30:00' AND event_timestamp <= '2023-03-15 16:30:00';"
Retrieve all orders placed between 1:30 PM and 6:30 PM on May 15 2023,"SELECT * FROM orders WHERE order_date >= '2023-05-15 13:30:00' AND order_date <= '2023-05-15 18:30:00';"
Get the total revenue generated from sales between 3:30 PM and 9:30 PM on February 28 2023,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2023-02-28 15:30:00' AND sale_date <= '2023-02-28 21:30:00';"
Show me the messages sent on September 15 2023 between 9:00 PM and 11:30 PM,"SELECT * FROM messages WHERE message_date >= '2023-09-15 21:00:00' AND message_date <= '2023-09-15 23:30:00';"
Retrieve all records from the log table between 8:45 AM and 10:15 AM on March 1 2023,"SELECT * FROM log WHERE log_date >= '2023-03-01 08:45:00' AND log_date <= '2023-03-01 10:15:00';"
Get the data from the sensor readings table for the last 7 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 7 DAY);"
Show me the entries from the events table between 5:30 PM and 7:30 PM on April 15 2023,"SELECT * FROM events WHERE event_timestamp >= '2023-04-15 17:30:00' AND event_timestamp <= '2023-04-15 19:30:00';"
Retrieve all orders placed between 4:45 PM and 9:45 PM on June 15 2023,"SELECT * FROM orders WHERE order_date >= '2023-06-15 16:45:00' AND order_date <= '2023-06-15 21:45:00';"
Get the total revenue generated from sales between 5:30 PM and 10:30 PM on March 31 2023,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2023-03-31 17:30:00' AND sale_date <= '2023-03-31 22:30:00';"
Show me the messages sent on October 15 2023 between 6:30 PM and 9:30 PM,"SELECT * FROM messages WHERE message_date >= '2023-10-15 18:30:00' AND message_date <= '2023-10-15 21:30:00';"
Retrieve all records from the log table between 7:15 AM and 9:15 AM on January 31 2023,"SELECT * FROM log WHERE log_date >= '2023-01-31 07:15:00' AND log_date <= '2023-01-31 09:15:00';"
Get the data from the sensor readings table for the last 8 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 8 DAY);"
Show me the entries from the events table between 3:45 PM and 5:45 PM on May 15 2023,"SELECT * FROM events WHERE event_timestamp >= '2023-05-15 15:45:00' AND event_timestamp <= '2023-05-15 17:45:00';"
Retrieve all orders placed between 2:15 PM and 7:15 PM on July 15 2023,"SELECT * FROM orders WHERE order_date >= '2023-07-15 14:15:00' AND order_date <= '2023-07-15 19:15:00';"
Get the total revenue generated from sales between 3:45 PM and 8:45 PM on February 28 2023,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2023-02-28 15:45:00' AND sale_date <= '2023-02-28 20:45:00';"
Show me the messages sent on November 15 2023 between 7:45 PM and 10:45 PM,"SELECT * FROM messages WHERE message_date >= '2023-11-15 19:45:00' AND message_date <= '2023-11-15 22:45:00';"
Retrieve all records from the log table between 6:15 AM and 8:15 AM on February 28 2023,"SELECT * FROM log WHERE log_date >= '2023-02-28 06:15:00' AND log_date <= '2023-02-28 08:15:00';"
Get the data from the sensor readings table for the last 9 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 9 DAY);"
Show me the entries from the events table between 2:45 PM and 4:45 PM on June 15 2023,"SELECT * FROM events WHERE event_timestamp >= '2023-06-15 14:45:00' AND event_timestamp <= '2023-06-15 16:45:00';"
Retrieve all orders placed between 1:45 PM and 6:45 PM on August 15 2023,"SELECT * FROM orders WHERE order_date >= '2023-08-15 13:45:00' AND order_date <= '2023-08-15 18:45:00';"
Get the total revenue generated from sales between 3:15 PM and 8:15 PM on March 31 2023,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2023-03-31 15:15:00' AND sale_date <= '2023-03-31 20:15:00';"
Show me the messages sent on September 15 2023 between 8:15 PM and 11:15 PM,"SELECT * FROM messages WHERE message_date >= '2023-09-15 20:15:00' AND message_date <= '2023-09-15 23:15:00';"
Retrieve all records from the log table between 7:45 AM and 9:45 AM on March 1 2023,"SELECT * FROM log WHERE log_date >= '2023-03-01 07:45:00' AND log_date <= '2023-03-01 09:45:00';"
Get the data from the sensor readings table for the last 10 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 10 DAY);"
Show me the entries from the events table between 6:00 PM and 8:00 PM on April 15 2023,"SELECT * FROM events WHERE event_timestamp >= '2023-04-15 18:00:00' AND event_timestamp <= '2023-04-15 20:00:00';"
Retrieve all orders placed between 5:30 PM and 10:30 PM on June 30 2023,"SELECT * FROM orders WHERE order_date >= '2023-06-30 17:30:00' AND order_date <= '2023-06-30 22:30:00';"
Get the total revenue generated from sales between 5:00 PM and 10:00 PM on January 1 2023,"SELECT SUM(total_amount) as revenue FROM sales WHERE sale_date >= '2023-01-01 17:00:00' AND sale_date <= '2023-01-01 22:00:00';"
Show me the messages sent on August 15 2023 between 8:30 PM and 11:30 PM,"SELECT * FROM messages WHERE message_date >= '2023-08-15 20:30:00' AND message_date <= '2023-08-15 23:30:00';"
Retrieve all records from the log table between 6:30 AM and 8:30 AM on January 1 2023,"SELECT * FROM log WHERE log_date >= '2023-01-01 06:30:00' AND log_date <= '2023-01-01 08:30:00';"
Get the data from the sensor readings table for the last 11 days,"SELECT * FROM sensor_readings WHERE reading_date >= DATE_SUB(NOW(), INTERVAL 11 DAY);"
Show me the entries from the events table between 5:15 PM and 7:15 PM on November 15 2022,"SELECT * FROM events WHERE event_timestamp >= '2022-11-15 17:15:00' AND event_timestamp <= '2022-11-15 19:15:00';"
Retrieve all records from the products table added in the last 30 days,"SELECT * FROM products WHERE creation_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Get the data from the invoices table between today's date and three days ago.,"SELECT * FROM invoices WHERE invoice_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between last month and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the shipments table for the past 7 days,"SELECT * FROM shipmentsWHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Get the data from the transactions table between yesterday at 6 PM and today at 9 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 18:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 21:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 12 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 12 HOUR);"
Get the data from the logs table between last week's date and two weeks ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 WEEK) AND DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"
I need the records from the sales table where the sale date is between yesterday and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND CURDATE();"
Show me the entries from the appointments table for the past 5 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 5 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 3 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 3 HOUR);"
Get the data from the calls table between yesterday at 10 PM and today at 8 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 22:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 08:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last year and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE();"
Show me the entries from the tickets table for the past 30 days.,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Get the data from the shipments table between yesterday at 3 PM and today at 10 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 15:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 22:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 6 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Get the data from the purchases table between today's date and yesterday,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between two months ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 MONTH) AND CURDATE();"
Show me the entries from the logs table for the past 14 days,"SELECT * FROM logs WHERE log_date >= DATE_SUB(CURDATE(), INTERVAL 14 DAY);"
Get the data from the transactions table between yesterday at 9 AM and today at 5 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 09:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 17:00:00') AS DATETIME);"
Retrieve all records from the products table added in the last 7 days,"SELECT * FROM products WHERE creation_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Get the data from the invoices table between today's date and two weeks ago,"SELECT * FROM invoices WHERE invoice_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 WEEK) AND CURDATE();"
I need the records from the customers table where the registration date is between last year and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 24 hours.,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 24 HOUR);"
Get the data from the transactions table between yesterday at 4 PM and today at 10 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 16:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 22:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 6 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 6 HOUR);"
Get the data from the logs table between last month's date and three months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 3 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 3 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 2 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 2 HOUR);"
Get the data from the calls table between yesterday at 2 PM and today at 10 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 14:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 10:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 60 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 60 DAY);"
Get the data from the shipments table between yesterday at 1 PM and today at 9 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 13:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 21:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 9 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 9 MONTH);"
Get the data from the purchases table between today's date and two days ago,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between three months ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE();"
Show me the entries from the logs table for the past 48 hours,"SELECT * FROM logs WHERE log_date >= DATE_SUB(CURDATE(), INTERVAL 48 HOUR);"
Get the data from the transactions table between yesterday at 11 AM and today at 6 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 11:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 18:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 4 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 4 HOUR);"
Get the data from the logs table between last month's date and four months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 4 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today.,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 2 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 2 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 1 hour,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 1 HOUR);"
Get the data from the calls table between yesterday at 3 PM and today at 9 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 15:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 09:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 90 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 90 DAY);"
Get the data from the shipments table between yesterday at 12 PM and today at 8 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 12:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 20:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 10 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 10 MONTH);"
Get the data from the purchases table between today's date and three days ago,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between last year and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 72 hours,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 72 HOUR);"
Get the data from the transactions table between yesterday at 5 PM and today at 11 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 17:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 23:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 8 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 8 HOUR);"
Get the data from the logs table between last month's date and five months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 5 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 4 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 4 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 3 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 3 HOUR);"
Get the data from the calls table between yesterday at 6 PM and today at 8 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 18:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 08:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 120 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 120 DAY);"
Get the data from the shipments table between yesterday at 2 PM and today at 6 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 14:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 18:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 11 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 11 MONTH);"
Get the data from the purchases table between today's date and four days ago.,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 4 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between two years ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 96 hours,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 96 HOUR);"
Get the data from the transactions table between yesterday at 6 PM and today at 12 AM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 18:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 00:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 10 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 10 HOUR);"
Get the data from the logs table between last month's date and six months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 6 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 6 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 4 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 4 HOUR);"
Get the data from the calls table between yesterday at 8 PM and today at 10 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 20:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 10:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 150 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 150 DAY);"
Get the data from the shipments table between yesterday at 3 PM and today at 5 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 15:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 17:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 12 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH);"
Get the data from the purchases table between today's date and five days ago,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 5 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between three years ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 120 hours,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 120 HOUR);"
Get the data from the transactions table between yesterday at 8 PM and today at 1 AM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 20:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 01:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 6 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 6 HOUR);"
Get the data from the logs table between last month's date and seven months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 7 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 8 days.,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 8 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 5 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 5 HOUR);"
Get the data from the calls table between yesterday at 10 PM and today at 12 PM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 22:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 12:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 180 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 180 DAY);"
Get the data from the shipments table between yesterday at 4 PM and today at 6 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 16:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 18:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 13 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 13 MONTH);"
Get the data from the purchases table between today's date and six days ago,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between four years ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 4 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 144 hours,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 144 HOUR);"
Get the data from the transactions table between yesterday at 10 PM and today at 2 AM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 22:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 02:00:00') AS DATETIME);"
Retrieve all events,SELECT * FROM event;"
Retrieve events with a specific facility_id,Query: SELECT * FROM event WHERE facility_id = <facility_id>;"
Retrieve events with a specific user_id,SELECT * FROM event WHERE user_id = <user_id>;"
Retrieve events with a specific event_type_id,SELECT * FROM event WHERE event_type_id = <event_type_id>;"
Retrieve events with a specific incident_type_id,SELECT * FROM event WHERE incident_type_id = <incident_type_id>;"
Retrieve events with a specific harm_level_id,SELECT * FROM event WHERE harm_level_id = <harm_level_id>;"
Retrieve events that are still open,SELECT * FROM event WHERE is_open = true;"
Retrieve events that have been closed,SELECT * FROM event WHERE is_open = false;"
Retrieve events created within the last 24 hours,"SELECT * FROM event WHERE created_at >= DATE_SUB(NOW(), INTERVAL 24 HOUR);"
Retrieve events updated within the last 7 days,"SELECT * FROM event WHERE updated_at >= DATE_SUB(NOW(), INTERVAL 7 DAY);"
Retrieve events closed within the last month,"SELECT * FROM event WHERE closed_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"
Retrieve events with a specific description,SELECT * FROM event WHERE description LIKE '%<description>%';"
Retrieve events sorted by created_at in ascending order,SELECT * FROM event ORDER BY created_at ASC;"
Retrieve events sorted by created_at in descending order,SELECT * FROM event ORDER BY created_at DESC;"
Retrieve events sorted by facility_id and created_at,"SELECT * FROM event ORDER BY facility_id, created_at;"
Retrieve the count of events for each facility_id,"SELECT facility_id, COUNT(*) FROM event GROUP BY facility_id;"
Retrieve the count of events for each user_id,"SELECT user_id, COUNT(*) FROM event GROUP BY user_id;"
Retrieve the count of events for each event_type_id,"SELECT event_type_id, COUNT(*) FROM event GROUP BY event_type_id;"
Retrieve the count of events for each incident_type_id,"SELECT incident_type_id, COUNT(*) FROM event GROUP BY incident_type_id;"
Retrieve the count of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) FROM event GROUP BY harm_level_id;"
Retrieve the average harm_level_id for each facility_id,"SELECT facility_id, AVG(harm_level_id) FROM event GROUP BY facility_id;"
Retrieve the average harm_level_id for each user_id,"SELECT user_id, AVG(harm_level_id) FROM event GROUP BY user_id;"
Retrieve the average harm_level_id for each event_type_id,"SELECT event_type_id, AVG(harm_level_id) FROM event GROUP BY event_type_id;"
Retrieve the average harm_level_id for each incident_type_id,"SELECT incident_type_id, AVG(harm_level_id) FROM event GROUP BY incident_type_id;"
Retrieve the average harm_level_id for each harm_level_id,"SELECT harm_level_id, AVG(harm_level_id) FROM event GROUP BY harm_level_id;"
Retrieve the maximum harm_level_id for each facility_id,"SELECT facility_id, MAX(harm_level_id) FROM event GROUP BY facility_id;"
Retrieve the maximum harm_level_id for each user_id,"SELECT user_id, MAX(harm_level_id) FROM event GROUP BY user_id;"
Retrieve the maximum harm_level_id for each event_type_id,"SELECT event_type_id, MAX(harm_level_id) FROM event GROUP BY event_type_id;"
Retrieve the maximum harm_level_id for each incident_type_id,"SELECT incident_type_id, MAX(harm_level_id) FROM event GROUP BY incident_type_id;"
Retrieve the maximum harm_level_id for each harm_level_id,"SELECT harm_level_id, MAX(harm_level_id) FROM event GROUP BY harm_level_id;"
Retrieve the minimum harm_level_id for each facility_id,"SELECT facility_id, MIN(harm_level_id) FROM event GROUP BY facility_id;"
Retrieve the minimum harm_level_id for each user_id,"SELECT user_id, MIN(harm_level_id) FROM event GROUP BY user_id;"
Retrieve the minimum harm_level_id for each event_type_id,"SELECT event_type_id, MIN(harm_level_id) FROM event GROUP BY event_type_id;"
Retrieve the minimum harm_level_id for each incident_type_id,"SELECT incident_type_id, MIN(harm_level_id) FROM event GROUP BY incident_type_id;"
etrieve the minimum harm_level_id for each harm_level_id,"SELECT facility_id, MAX(created_at) FROM event GROUP BY facility_id;"
Retrieve the latest created_at timestamp for each user_id,"SELECT user_id, MAX(created_at) FROM event GROUP BY user_id;"
Retrieve the latest created_at timestamp for each event_type_id,"SELECT event_type_id, MAX(created_at) FROM event GROUP BY event_type_id;"
Retrieve the latest created_at timestamp for each incident_type_id,"SELECT incident_type_id, MAX(created_at) FROM event GROUP BY incident_type_id;"
Retrieve the latest created_at timestamp for each harm_level_id,"SELECT harm_level_id, MAX(created_at) FROM event GROUP BY harm_level_id;"
Retrieve the earliest created_at timestamp for each facility_id,"SELECT facility_id, MIN(created_at) FROM event GROUP BY facility_id;"
Retrieve the earliest created_at timestamp for each user_id,"SELECT user_id, MIN(created_at) FROM event GROUP BY user_id;"
Retrieve the earliest created_at timestamp for each event_type_id,"SELECT event_type_id, MIN(created_at) FROM event GROUP BY event_type_id;"
Retrieve the earliest created_at timestamp for each incident_type_id,"SELECT incident_type_id, MIN(created_at) FROM event GROUP BY incident_type_id;"
Retrieve the earliest created_at timestamp for each harm_level_id,"SELECT harm_level_id, MIN(created_at) FROM event GROUP BY harm_level_id;"
Retrieve the latest updated_at timestamp for each facility_id,"SELECT facility_id, MAX(updated_at) FROM event GROUP BY facility_id;"
Retrieve the latest updated_at timestamp for each user_id,"SELECT user_id, MAX(updated_at) FROM event GROUP BY user_id;"
Retrieve the latest updated_at timestamp for each event_type_id,"SELECT event_type_id, MAX(updated_at) FROM event GROUP BY event_type_id;"
Retrieve the latest updated_at timestamp for each incident_type_id,"SELECT incident_type_id, MAX(updated_at) FROM event GROUP BY incident_type_id;"
Retrieve the latest updated_at timestamp for each harm_level_id,"SELECT harm_level_id, MAX(updated_at) FROM event GROUP BY harm_level_id;"
Retrieve the latest updated_at timestamp for each harm_level_id,"SELECT harm_level_id, MAX(updated_at) FROM event GROUP BY harm_level_id;"
Retrieve the earliest updated_at timestamp for each facility_id,"SELECT facility_id, MIN(updated_at) FROM event GROUP BY facility_id;"
Retrieve the earliest updated_at timestamp for each event_type_id,"SELECT event_type_id, MIN(updated_at) FROM event GROUP BY event_type_id;"
Retrieve the earliest updated_at timestamp for each incident_type_id,"SELECT incident_type_id, MIN(updated_at) FROM event GROUP BY incident_type_id;"
Retrieve the earliest updated_at timestamp for each harm_level_id,"SELECT harm_level_id, MIN(updated_at) FROM event GROUP BY harm_level_id;"
Retrieve the count of events for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, COUNT(*) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the count of events for each facility_id and user_id,"SELECT facility_id, user_id, COUNT(*) FROM event GROUP BY facility_id, user_id;"
Retrieve the count of events for each facility_id and event_type_id,"SELECT facility_id, event_type_id, COUNT(*) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the count of events for each user_id and incident_type_id,"SELECT user_id, incident_type_id, COUNT(*) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the count of events for each user_id and event_type_id,"SELECT user_id, event_type_id, COUNT(*) FROM event GROUP BY user_id, event_type_id;"
Retrieve the count of events for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, COUNT(*) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the average harm_level_id for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, AVG(harm_level_id) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the average harm_level_id for each facility_id and user_id,"SELECT facility_id, user_id, AVG(harm_level_id) FROM event GROUP BY facility_id, user_id;"
Retrieve the average harm_level_id for each facility_id and event_type_id,"SELECT facility_id, event_type_id, AVG(harm_level_id) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the average harm_level_id for each user_id and incident_type_id,"SELECT user_id, incident_type_id, AVG(harm_level_id) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the average harm_level_id for each user_id and event_type_id,"SELECT user_id, event_type_id, AVG(harm_level_id) FROM event GROUP BY user_id, event_type_id;"
Retrieve the average harm_level_id for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, AVG(harm_level_id) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the maximum harm_level_id for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MAX(harm_level_id) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the maximum harm_level_id for each facility_id and user_id,"SELECT facility_id, user_id, MAX(harm_level_id) FROM event GROUP BY facility_id, user_id;"
Retrieve the maximum harm_level_id for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MAX(harm_level_id) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the maximum harm_level_id for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MAX(harm_level_id) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the maximum harm_level_id for each user_id and event_type_id,"SELECT user_id, event_type_id, MAX(harm_level_id) FROM event GROUP BY user_id, event_type_id;"
Retrieve the maximum harm_level_id for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, MAX(harm_level_id) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the minimum harm_level_id for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MIN(harm_level_id) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the minimum harm_level_id for each facility_id and user_id,"SELECT facility_id, user_id, MIN(harm_level_id) FROM event GROUP BY facility_id, user_id;"
Retrieve the minimum harm_level_id for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MIN(harm_level_id) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the minimum harm_level_id for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MIN(harm_level_id) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the minimum harm_level_id for each user_id and event_type_id,"SELECT user_id, event_type_id, MIN(harm_level_id) FROM event GROUP BY user_id, event_type_id;"
Retrieve the minimum harm_level_id for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, MIN(harm_level_id) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the latest created_at timestamp for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MAX(created_at) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the latest created_at timestamp for each facility_id and user_id,"SELECT facility_id, user_id, MAX(created_at) FROM event GROUP BY facility_id, user_id;"
Retrieve the latest created_at timestamp for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MAX(created_at) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the latest created_at timestamp for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MAX(created_at) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the latest created_at timestamp for each user_id and event_type_id,"SELECT user_id, event_type_id, MAX(created_at) FROM event GROUP BY user_id, event_type_id;"
Retrieve the earliest created_at timestamp for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MIN(created_at) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the earliest created_at timestamp for each facility_id and user_id,"SELECT facility_id, user_id, MIN(created_at) FROM event GROUP BY facility_id, user_id;"
Retrieve the earliest created_at timestamp for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MIN(created_at) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the earliest created_at timestamp for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MIN(created_at) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the earliest created_at timestamp for each user_id and event_type_id,"SELECT user_id, event_type_id, MIN(created_at) FROM event GROUP BY user_id, event_type_id;"
Retrieve the earliest created_at timestamp for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, MIN(created_at) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the latest updated_at timestamp for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MAX(updated_at) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the latest updated_at timestamp for each facility_id and user_id,"SELECT facility_id, user_id, MAX(updated_at) FROM event GROUP BY facility_id, user_id;"
Retrieve the latest updated_at timestamp for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MAX(updated_at) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the latest updated_at timestamp for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MAX(updated_at) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the latest updated_at timestamp for each user_id and event_type_id,"SELECT user_id, event_type_id, MAX(updated_at) FROM event GROUP BY user_id, event_type_id;"
Retrieve the latest updated_at timestamp for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, MAX(updated_at) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the earliest updated_at timestamp for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MIN(updated_at) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the earliest updated_at timestamp for each facility_id and user_id,"SELECT facility_id, user_id, MIN(updated_at) FROM event GROUP BY facility_id, user_id;"
Retrieve the earliest updated_at timestamp for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MIN(updated_at) FROM event GROUP BY facility_id, event_type_id;"
Retrieve all records from the customers table where the last login was within the last week.,"SELECT *FROM customersWHERE last_login >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"
Retrieve all records from the employees table where the hire date is within the last 3 months.,"SELECT *FROM employeesWHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);"
Retrieve all records from the employees table where the hire date is within the last 3 months.,"SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);"
Retrieve all records from the products table where the stock quantity is less than 50 units.,SELECT * FROM products WHERE stock_quantity < 50;"
Retrieve all records from the transactions table where the transaction date is within the last 24 hours.,"SELECT *FROM transactionsWHERE transaction_date >= DATE_SUB(CURDATE(), INTERVAL 1 DAY);"
Retrieve all records from the messages table where the message was sent in the last 2 weeks.,"SELECT * FROM messages WHERE sent_date >= DATE_SUB(CURDATE(), INTERVAL 2 WEEK);"
Retrieve all records from the customers table where the registration date is within the last 6 months.,"SELECT * FROM customers WHERE registration_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Retrieve all records from the employees table where the employee's birthday is in the current month.,SELECT * FROM employees WHERE MONTH(birthday) = MONTH(CURDATE());"
Retrieve all records from the invoices table where the due date is within the next 7 days.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Retrieve all records from the orders table where the order status is ""completed"".",SELECT *FROM ordersWHERE order_status = 'completed';"
"Retrieve all records from the customers table where the customer's last name starts with ""Smith"".",SELECT * FROM customers WHERE last_name LIKE 'Smith%';"
Retrieve all records from the products table where the price is between $10 and $50.,SELECT * FROM products WHERE price BETWEEN 10 AND 50;"
Retrieve all records from the employees table where the salary is greater than the average salary.,SELECT *FROM employeesWHERE salary > (SELECT AVG(salary) FROM employees);"
"Retrieve all records from the customers table where the customer's email address contains ""@gmail.com"".",SELECT * FROM customers WHERE email LIKE '%@gmail.com';"
"Retrieve all records from the products table where the product name starts with ""A"" and ends with ""Z"".",SELECT * FROM products WHERE product_name LIKE 'A%Z';"
Retrieve all records from the employees table where the hire date is before the year 2010.,SELECT * FROM employees WHERE YEAR(hire_date) < 2010;"
Retrieve all records from the orders table where the total amount is between $100 and $500.,SELECT * FROM orders WHERE total_amount BETWEEN 100 AND 500;"
Retrieve all records from the customers table where the customer's age is greater than 18.,SELECT * FROM customers WHERE age > 18;"
Find all entries in the customers table where the most recent login occurred within the past week.,"SELECT * FROM customers WHERE last_login >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"
Retrieve all records from the employees table where the date of hire falls within the previous 3 months.,"SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);"
Get all entries from the transactions table with transaction dates within the last 24 hours.,"SELECT * FROM transactions WHERE transaction_date >= DATE_SUB(CURDATE(), INTERVAL 1 DAY);"
Retrieve all records from the inventory table where the expiration date falls within the upcoming month.,"SELECT * FROM inventory WHERE expiration_date <= DATE_ADD(CURDATE(), INTERVAL 1 MONTH);"
Find all entries in the messages table where the message was sent in the past 2 weeks.,"SELECT * FROM messages WHERE sent_date >= DATE_SUB(CURDATE(), INTERVAL 2 WEEK);"
Retrieve all data from the customers table where the registration date is within the last 6 months.,"SELECT * FROM customers WHERE registration_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Fetch all records from the sales table where the sale amount exceeds $1000.,SELECT * FROM sales WHERE sale_amount > 1000;"
Retrieve all entries from the employees table where the employee's birthday falls within the current month.,SELECT * FROM employees WHERE MONTH(birthday) = MONTH(CURDATE());"
Retrieve all data from the invoices table where the due date is within the next 7 days.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Retrieve all records from the orders table where the order status is ""completed"".",SELECT * FROM orders WHERE order_status = 'completed';"
"Retrieve all records from the customers table where the customer's last name begins with ""Smith"".",SELECT * FROM customers WHERE last_name LIKE 'Smith%';"
Retrieve all entries from the products table where the price ranges between $10 and $50.,SELECT * FROM products WHERE price BETWEEN 10 AND 50;"
Retrieve all data from the employees table where the salary exceeds the average salary.,SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"
Retrieve all records from the orders table where the order date is in the current year.,SELECT * FROM orders WHERE YEAR(order_date) = YEAR(CURDATE());"
"Retrieve all entries from the customers table where the customer's email address contains ""@gmail.com"".",SELECT * FROM customers WHERE email LIKE '%@gmail.com';"
"Retrieve all data from the products table where the product name starts with ""A"" and ends with ""Z"".",SELECT * FROM products WHERE product_name LIKE 'A%Z';"
Retrieve all records from the employees table where the hire date is prior to the year 2010.,SELECT * FROM employees WHERE YEAR(hire_date) < 2010;"
Retrieve all entries from the orders table where the total amount is between $100 and $500.,SELECT * FROM orders WHERE total_amount BETWEEN 100 AND 500;"
Retrieve all records from the customers table where the customer's age is over 18.,SELECT * FROM customers WHERE age > 18;"
Find all customer records where the account was created within the past month.,"SELECT * FROM customers WHERE account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
"Retrieve all orders placed in the last 7 days where the order status is ""pending"".","SELECT * FROM orders WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) AND order_status = 'pending';"
Get all employee records hired in the previous year with a salary above $50000.,SELECT * FROM employees WHERE YEAR(hire_date) = YEAR(CURDATE()) - 1 AND salary > 50000;"
Retrieve all products with a stock quantity less than or equal to 10 and a price greater than $50.,SELECT * FROM products WHERE stock_quantity <= 10 AND price > 50;"
"Find all transactions made by customers with the email domain ""hotmail.com"".",SELECT * FROM transactions WHERE customer_email LIKE '%@hotmail.com';"
"Retrieve all employee records with a job title containing the word ""manager"".",SELECT * FROM employees WHERE job_title LIKE '%manager%';"
Find all orders placed by customers residing in the state of California.,SELECT * FROM orders WHERE customer_state = 'California';"
Retrieve all invoices with a due date between the 1st and 15th day of the current month.,SELECT * FROM invoices WHERE DAY(due_date) BETWEEN 1 AND 15;"
"Get all customer records where the phone number starts with the area code ""555"".",SELECT * FROM customers WHERE phone_number LIKE '555%';"
"Find all products with a description containing the word ""organic"" and a price less than $20.",SELECT * FROM products WHERE description LIKE '%organic%' AND price < 20;"
"Retrieve all customer records where the last name starts with ""Doe"" and the account status is ""active"".",SELECT * FROM customers WHERE last_name LIKE 'Doe%' AND account_status = 'active';"
Find all orders placed by customers with a total amount exceeding $1000 and a shipping address in the city of New York.,SELECT * FROM orders WHERE total_amount > 1000 AND shipping_city = 'New York';"
"Retrieve all employee records hired in the past 6 months with a job title of ""Software Engineer"".","SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND job_title = 'Software Engineer';"
Get all product records with a price between $25 and $50 and a stock quantity greater than 20.,SELECT * FROM products WHERE price BETWEEN 25 AND 50 AND stock_quantity > 20;"
Find all transactions made by customers with a transaction date on a Sunday.,SELECT * FROM transactions WHERE DAYOFWEEK(transaction_date) = 1;"
Retrieve all employee records with a salary higher than the average salary of the company.,SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"
Find all orders placed by customers with a specific customer ID.,SELECT * FROM orders WHERE customer_id = <customer_id>;"
Retrieve all invoices with a due date in the next 30 days.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 30 DAY);"
"Get all customer records where the first name starts with ""J"" and the age is between 25 and 35.",SELECT * FROM customers WHERE first_name LIKE 'J%' AND age BETWEEN 25 AND 35;"
Find all products with a category ID of 5 and a price higher than the average price of the products.,SELECT * FROM products WHERE category_id = 5 AND price > (SELECT AVG(price) FROM products);"
Retrieve all employee records with a hire date in the current year and a department ID of 10.,SELECT * FROM employees WHERE YEAR(hire_date) = YEAR(CURDATE()) AND department_id = 10;"
Find all orders placed by customers with a specific email address.,SELECT * FROM orders WHERE customer_email = '<email_address>';"
"Retrieve all product records with a description containing the word ""sale"" and a price discount of 20% or more.",SELECT * FROM products WHERE description LIKE '%sale%' AND price_discount >= 20;"
"Get all customer records where the account was created in the previous year and the account type is ""premium"".",SELECT * FROM customers WHERE YEAR(account_creation_date) = YEAR(CURDATE()) - 1 AND account_type = 'premium';"
Find all transactions made on a specific date.,SELECT * FROM transactions WHERE transaction_date = '<date>';"
Retrieve all employee records with a salary in the top 10% range of the company salaries.,SELECT * FROM employees WHERE salary >= (SELECT PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY salary) FROM employees);"
Find all orders placed by customers with a specific ZIP code.,SELECT * FROM orders WHERE customer_zip_code = '<zip_code>';"
Retrieve all invoices with a due date in the next 7 days and a total amount over $500.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND total_amount > 500;"
"Get all customer records where the last name starts with ""S"" and the account balance is negative.",SELECT * FROM customers WHERE last_name LIKE 'S%' AND account_balance < 0;"
Find all products with a category ID of 3 and a stock quantity below 10.,SELECT * FROM products WHERE category_id = 3 AND stock_quantity < 10;"
"Retrieve all customer records where the city is either ""London"" or ""Paris"".","SELECT * FROM customers WHERE city IN ('London', 'Paris');"
Find all orders placed by customers with a specific order status.,SELECT * FROM orders WHERE order_status = '<order_status>';"
Get all employee records with a salary higher than the salary of their manager.,SELECT * FROM employees AS e WHERE e.salary > (SELECT salary FROM employees WHERE employee_id = e.manager_id);"
Retrieve all product records with a price lower than the average price of the products in their category.,SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) FROM products WHERE category_id = p.category_id);"
Find all transactions made by customers with a specific age range.,SELECT * FROM transactions WHERE customer_age BETWEEN <min_age> AND <max_age>;"
"Retrieve all employee records with a job title containing the word ""senior"" and a hire date in the past year.","SELECT * FROM employees WHERE job_title LIKE '%senior%' AND hire_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);"
"Get all customer records where the account was created in the last 3 months and the account status is ""verified"".","SELECT * FROM customers WHERE account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND account_status = 'verified';"
Find all orders placed by customers with a specific payment method.,SELECT * FROM orders WHERE payment_method = '<payment_method>';"
Retrieve all invoices with a due date in the current month and a total amount over $1000.,"SELECT * FROM invoices WHERE due_date >= DATE_SUB(CURDATE(), INTERVAL DAY(CURDATE()) - 1 DAY) AND due_date < DATE_ADD(DATE_SUB(CURDATE(), INTERVAL DAY(CURDATE()) - 1 DAY), INTERVAL 1 MONTH) AND total_amount > 1000;"
Get all customer records where the first name starts with a vowel and the account balance is positive.,SELECT * FROM customers WHERE first_name REGEXP '^[AEIOUaeiou].*' AND account_balance > 0;"
Find all products with a discount percentage greater than 50% and a stock quantity below 5.,SELECT * FROM products WHERE discount_percentage > 50 AND stock_quantity < 5;"
Retrieve all employee records with a salary within the top 5 highest salaries in the company.,SELECT * FROM employees WHERE salary IN (SELECT salary FROM employees ORDER BY salary DESC LIMIT 5);"
"Get all customer records where the account was created in the previous year and the account type is either ""gold"" or ""platinum"".","SELECT * FROM customers WHERE YEAR(account_creation_date) = YEAR(CURDATE()) - 1 AND account_type IN ('gold', 'platinum');"
Find all transactions made on a specific day of the week.,SELECT * FROM transactions WHERE DAYOFWEEK(transaction_date) = <day_of_week>;"
Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage.,SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees);"
"Get all customer records where the last name starts with ""Mc"" and the account balance is zero.",SELECT * FROM customers WHERE last_name LIKE 'Mc%' AND account_balance = 0;"
Find all products with a category ID of 2 and a price higher than the maximum price in the category.,SELECT * FROM products WHERE category_id = 2 AND price > (SELECT MAX(price) FROM products WHERE category_id = 2);"
Retrieve all orders placed by customers with a specific account type.,SELECT * FROM orders WHERE customer_account_type = '<account_type>';"
Get all invoices with a due date within the next 14 days and a total amount below $500.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND total_amount < 500;"
Find all transactions made by customers with a specific occupation.,SELECT * FROM transactions WHERE customer_occupation = '<occupation>';"
Retrieve all product records with a price greater than the average price of the products in their category.,SELECT * FROM products AS p WHERE p.price > (SELECT AVG(price) FROM products WHERE category_id = p.category_id);"
"Get all employee records with a hire date in the previous month and a job title of ""Manager"".","SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND job_title = 'Manager';"
Find all orders placed by customers with a specific age.,SELECT * FROM orders WHERE customer_age = <age>;"
Retrieve all invoices with a due date in the upcoming week and a total amount over $2000.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND total_amount > 2000;"
"Get all customer records where the account was created in the current year and the account status is either ""active"" or ""suspended"".","SELECT * FROM customers WHERE YEAR(account_creation_date) = YEAR(CURDATE()) AND account_status IN ('active', 'suspended');"
"Retrieve all customer records where the favorite color is either ""blue"" or ""green"".","Retrieve all customer records where the favorite color is either ""blue"" or ""green""."
Find all orders placed by customers with a specific loyalty level.,SELECT * FROM orders WHERE customer_loyalty_level = '<loyalty_level>';"
Get all employee records with a salary higher than the average salary of employees in their department.,SELECT * FROM employees AS e WHERE e.salary > (SELECT AVG(salary) FROM employees WHERE department_id = e.department_id);"
Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.8.,SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.8 FROM products WHERE category_id = p.category_id);"
Find all transactions made by customers who have made more than 5 transactions in total.,SELECT * FROM transactions WHERE customer_id IN (SELECT customer_id FROM transactions GROUP BY customer_id HAVING COUNT(*) > 5);"
"Retrieve all employee records with a job title containing the word ""lead"" and a hire date in the past 2 years.","SELECT * FROM employees WHERE job_title LIKE '%lead%' AND hire_date >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR);"
"Get all customer records where the account was created in the last 6 months and the account status is ""active"" or ""pending"".","SELECT * FROM customers WHERE account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND account_status IN ('active', 'pending');"
Find all orders placed by customers with a specific preferred payment method.,SELECT * FROM orders WHERE preferred_payment_method = '<payment_method>';"
Retrieve all invoices with a due date in the current quarter and a total amount over $3000.,SELECT * FROM invoices WHERE QUARTER(due_date) = QUARTER(CURDATE()) AND total_amount > 3000;"
Get all customer records where the first name starts with a consonant and the account balance is negative.,SELECT * FROM customers WHERE first_name REGEXP '^[^AEIOUaeiou].*' AND account_balance < 0;"
Find all products with a discount percentage higher than 70% and a stock quantity below 3.,SELECT * FROM products WHERE discount_percentage > 70 AND stock_quantity < 3;"
Retrieve all employee records with a salary within the top 3 highest salaries in the company.,SELECT * FROM employees WHERE salary IN (SELECT salary FROM employees ORDER BY salary DESC LIMIT 3);"
"Get all customer records where the last name starts with ""O'"" and the account balance is zero.","SELECT * FROM customers WHERE last_name LIKE ""O'%"" AND account_balance = 0;"
Find all products with a category ID of 4 and a price higher than the average price of the products in their category divided by 2.,SELECT * FROM products AS p WHERE p.category_id = 4 AND p.price > (SELECT AVG(price) / 2 FROM products WHERE category_id = p.category_id);"
Retrieve all orders placed by customers with a specific loyalty points balance.,SELECT * FROM orders WHERE customer_loyalty_points = <loyalty_points>;"
Get all invoices with a due date within the next 10 days and a total amount below $1000.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 10 DAY) AND total_amount < 1000;"
Find all transactions made by customers with a specific gender.,SELECT * FROM transactions WHERE customer_gender = '<gender>';"
Retrieve all product records with a price greater than the average price of the products in their category multiplied by 1.2.,SELECT * FROM products AS p WHERE p.price > (SELECT AVG(price) * 1.2 FROM products WHERE category_id = p.category_id);"
"Get all employee records with a hire date in the previous week and a job title of ""Supervisor"".","SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND job_title = 'Supervisor';"
Find all orders placed by customers with a specific age group.,SELECT * FROM orders WHERE customer_age_group = '<age_group>';"
Retrieve all invoices with a due date in the upcoming month and a total amount over $5000.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 1 MONTH) AND total_amount > 5000;"
"Get all customer records where the account was created in the current year and the account status is either ""active"" or ""on hold"".","SELECT * FROM customers WHERE YEAR(account_creation_date) = YEAR(CURDATE()) AND account_status IN ('active', 'on hold');"
Find all transactions made on a specific month of the year.,SELECT * FROM transactions WHERE MONTH(transaction_date) = <month>;"
Retrieve all employee records with a salary increase percentage higher than the company's median salary increase percentage.,SELECT * FROM employees WHERE salary_increase_percentage > (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY salary_increase_percentage) FROM employees);"
Get all customer records where the account was created on a leap year and the account balance is positive.,SELECT * FROM customers WHERE YEAR(account_creation_date) % 4 = 0 AND account_balance > 0;"
"Retrieve all customer records where the account was created in the last 30 days and the account status is ""active"".","SELECT * FROM customers WHERE account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) AND account_status = 'active';"
Find all orders placed in the current week by customers with a specific loyalty level.,SELECT * FROM orders WHERE WEEK(order_date) = WEEK(CURDATE()) AND customer_loyalty_level = '<loyalty_level>';"
"Get all employee records with a hire date in the past year and a job title of ""Manager"".","Get all employee records with a hire date in the past year and a job title of ""Manager""."
Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.9.,SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.9 FROM products WHERE category_id = p.category_id);"
Find all transactions made in the last 7 days by customers with a specific age range.,"SELECT * FROM transactions WHERE transaction_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) AND customer_age BETWEEN <min_age> AND <max_age>;"
Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage.,SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees);"
"Get all customer records where the account was created in the last 90 days and the account status is ""verified"".","SELECT * FROM customers WHERE account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) AND account_status = 'verified';"
Find all orders placed in the previous month by customers with a specific payment method.,"SELECT * FROM orders WHERE MONTH(order_date) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND payment_method = '<payment_method>';"
Retrieve all invoices with a due date in the current year and a total amount over $5000.,SELECT * FROM invoices WHERE YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 5000;"
Get all customer records where the account was created in the last 180 days and the account balance is positive.,"SELECT * FROM customers WHERE account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 180 DAY) AND account_balance > 0;"
Find all products with a discount percentage higher than 60% and a stock quantity below 10.,SELECT * FROM products WHERE discount_percentage > 60 AND stock_quantity < 10;"
Retrieve all employee records with a salary within the top 10% highest salaries in the company.,SELECT * FROM employees WHERE salary IN (SELECT salary FROM employees ORDER BY salary DESC LIMIT (SELECT CEIL(0.1 * COUNT(*)) FROM employees));"
"Get all customer records where the last name starts with ""D"" and the account balance is zero.",SELECT * FROM customers WHERE last_name LIKE 'D%' AND account_balance = 0;"
Find all products with a category ID of 5 and a price higher than the average price of the products in their category divided by 2.,SELECT * FROM products AS p WHERE p.category_id = 5 AND p.price > (SELECT AVG(price) / 2 FROM products WHERE category_id = p.category_id);"
Retrieve all orders placed in the current month by customers with a specific loyalty points balance.,SELECT * FROM orders WHERE MONTH(order_date) = MONTH(CURDATE()) AND customer_loyalty_points = <loyalty_points>;"
Get all invoices with a due date within the next 5 days and a total amount below $2000.,"SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 5 DAY) AND total_amount < 2000;"
Find all transactions made in the previous year by customers with a specific gender.,"SELECT * FROM transactions WHERE YEAR(transaction_date) = YEAR(DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AND customer_gender = '<gender>';"
Retrieve all product records with a price greater than the average price of the products in their category multiplied by 1.5.,SELECT * FROM products AS p WHERE p.price > (SELECT AVG(price) * 1.5 FROM products WHERE category_id = p.category_id);"
"Get all employee records with a hire date in the previous 3 months and a job title of ""Supervisor"".","SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND job_title = 'Supervisor';"
Find all orders placed by customers with a specific age group and a minimum order amount of $100.,SELECT * FROM orders WHERE customer_age_group = '<age_group>' AND order_amount >= 100;"
"Retrieve all customer records where the account was created between June 10 and July 22, and the account status is ""active"".",SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-06-10' AND '2023-07-22' AND account_status = 'active';"
"Find all orders placed between June 10 and July 22, by customers with a specific loyalty level.",SELECT * FROM orders WHERE order_date BETWEEN '2023-06-10' AND '2023-07-22' AND customer_loyalty_level = '<loyalty_level>';"
"Get all employee records with a hire date between June 10 and July 22, and a job title of ""Manager"".",SELECT * FROM employees WHERE hire_date BETWEEN '2023-06-10' AND '2023-07-22' AND job_title = 'Manager';"
"Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.9, within the date range of June 10 to July 22.",SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.9 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-06-10' AND '2023-07-22';"
"Find all transactions made between June 10 and July 22, by customers with a specific age range.",SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-06-10' AND '2023-07-22' AND customer_age BETWEEN <min_age> AND <max_age>;"
"Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of June 10 to July 22.",SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees) AND hire_date BETWEEN '2023-06-10' AND '2023-07-22';"
"Get all customer records where the account was created between June 10 and July 22, within the last 90 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-06-10' AND '2023-07-22' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) AND account_balance > 0;"
"Find all orders placed between June 10 and July 22, in the previous month, by customers with a specific payment method.","SELECT * FROM orders WHERE order_date BETWEEN '2023-06-10' AND '2023-07-22' AND MONTH(order_date) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND payment_method = '<payment_method>';"
"Retrieve all invoices with a due date between June 10 and July 22, in the current year, and a total amount over $5000.",SELECT * FROM invoices WHERE due_date BETWEEN '2023-06-10' AND '2023-07-22' AND YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 5000;"
"Get all customer records where the account was created between June 10 and July 22, within the last 180 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-06-10' AND '2023-07-22' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 180 DAY) AND account_balance > 0;"
"Find all products with a discount percentage higher than 60%, a stock quantity below 10, and added between June 10 and July 22.",SELECT * FROM products WHERE discount_percentage > 60 AND stock_quantity < 10 AND date_added BETWEEN '2023-06-10' AND '2023-07-22';"
"Retrieve all employee records with a salary within the top 10% highest salaries in the company, hired between June 10 and July 22.",SELECT * FROM employees WHERE salary IN (SELECT salary FROM employees ORDER BY salary DESC LIMIT (SELECT CEIL(0.1 * COUNT(*)) FROM employees)) AND hire_date BETWEEN '2023-06-10' AND '2023-07-22';"
"Get all customer records where the last name starts with ""D"", the account balance is zero, and the account was created between June 10 and July 22.",SELECT * FROM customers WHERE last_name LIKE 'D%' AND account_balance = 0 AND account_creation_date BETWEEN '2023-06-10' AND '2023-07-22';"
"Find all products with a category ID of 5, a price higher than the average price of the products in their category divided by 2, and added between June 10 and July 22.",SELECT * FROM products WHERE category_id = 5 AND price > (SELECT AVG(price) / 2 FROM products WHERE category_id = 5) AND date_added BETWEEN '2023-06-10' AND '2023-07-22';"
"Retrieve all orders placed between June 10 and July 22, in the current month, by customers with a specific loyalty points balance.",SELECT * FROM orders WHERE order_date BETWEEN '2023-06-10' AND '2023-07-22' AND MONTH(order_date) = MONTH(CURDATE()) AND customer_loyalty_points = <loyalty_points>;"
"Get all invoices with a due date within the next 5 days, a total amount below $2000, and due between June 10 and July 22.","SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 5 DAY) AND total_amount < 2000 AND due_date BETWEEN '2023-06-10' AND '2023-07-22';"
"Find all transactions made in the previous year, between June 10 and July 22, by customers with a specific gender.","SELECT * FROM transactions WHERE YEAR(transaction_date) = YEAR(DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AND transaction_date BETWEEN '2023-06-10' AND '2023-07-22' AND customer_gender = '<gender>';"
"Retrieve all product records with a price greater than the average price of the products in their category multiplied by 1.5, and added between June 10 and July 22.",SELECT * FROM products AS p WHERE p.price > (SELECT AVG(price) * 1.5 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-06-10' AND '2023-07-22';"
"Get all employee records with a hire date in the previous 3 months, between June 10 and July 22, and a job title of ""Supervisor"".","SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND hire_date BETWEEN '2023-06-10' AND '2023-07-22' AND job_title = 'Supervisor';"
"Find all orders placed by customers with a specific age group, between June 10 and July 22, and a minimum order amount of $100.",SELECT * FROM orders WHERE customer_age_group = '<age_group>' AND order_date BETWEEN '2023-06-10' AND '2023-07-22' AND order_amount >= 100;"
"Retrieve all customer records where the account was created between July 1 and July 31, and the account status is ""active"".",SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-07-01' AND '2023-07-31' AND account_status = 'active';"
"Find all orders placed between July 1 and July 31, by customers with a specific loyalty level.",SELECT * FROM orders WHERE order_date BETWEEN '2023-07-01' AND '2023-07-31' AND customer_loyalty_level = '<loyalty_level>';"
"Get all employee records with a hire date between July 1 and July 31, and a job title of ""Manager"".",SELECT * FROM employees WHERE hire_date BETWEEN '2023-07-01' AND '2023-07-31' AND job_title = 'Manager';"
"Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.9, within the date range of July 1 and July 31.",SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.9 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-07-01' AND '2023-07-31';"
"Find all transactions made between July 1 and July 31, by customers with a specific age range.",SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-07-01' AND '2023-07-31' AND customer_age BETWEEN <min_age> AND <max_age>;"
"Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of July 1 and July 31.",SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees) AND hire_date BETWEEN '2023-07-01' AND '2023-07-31';"
"Get all customer records where the account was created between July 1 and July 31, within the last 90 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-07-01' AND '2023-07-31' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) AND account_balance > 0;"
"Find all orders placed between July 1 and July 31, in the previous month, by customers with a specific payment method.","SELECT * FROM orders WHERE order_date BETWEEN '2023-07-01' AND '2023-07-31' AND MONTH(order_date) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND payment_method = '<payment_method>';"
"Retrieve all invoices with a due date between July 1 and July 31, in the current year, and a total amount over $5000.",SELECT * FROM invoices WHERE due_date BETWEEN '2023-07-01' AND '2023-07-31' AND YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 5000;"
"Get all customer records where the account was created between July 1 and July 31, within the last 180 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-07-01' AND '2023-07-31' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 180 DAY) AND account_balance > 0;"
"Find all products with a discount percentage higher than 60%, a stock quantity below 10, and added between July 1 and July 31.",SELECT * FROM products WHERE discount_percentage > 60 AND stock_quantity < 10 AND date_added BETWEEN '2023-07-01' AND '2023-07-31';"
"Retrieve all employee records with a salary within the top 10% highest salaries in the company, hired between July 1 and July 31.",SELECT * FROM employees WHERE salary IN (SELECT salary FROM employees ORDER BY salary DESC LIMIT (SELECT CEIL(0.1 * COUNT(*)) FROM employees)) AND hire_date BETWEEN '2023-07-01' AND '2023-07-31';"
"Get all customer records where the last name starts with ""D"", the account balance is zero, and the account was created between July 1 and July 31.",SELECT * FROM customers WHERE last_name LIKE 'D%' AND account_balance = 0 AND account_creation_date BETWEEN '2023-07-01' AND '2023-07-31';"
"Find all products with a category ID of 5, a price higher than the average price of the products in their category divided by 2, and added between July 1 and July 31.",SELECT * FROM products WHERE category_id = 5 AND price > (SELECT AVG(price) / 2 FROM products WHERE category_id = 5) AND date_added BETWEEN '2023-07-01' AND '2023-07-31';"
"Retrieve all orders placed between July 1 and July 31, in the current month, by customers with a specific loyalty points balance.",SELECT * FROM orders WHERE order_date BETWEEN '2023-07-01' AND '2023-07-31' AND MONTH(order_date) = MONTH(CURDATE()) AND customer_loyalty_points = <loyalty_points>;"
"Get all invoices with a due date within the next 5 days, a total amount below $2000, and due between July 1 and July 31.","SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 5 DAY) AND total_amount < 2000 AND due_date BETWEEN '2023-07-01' AND '2023-07-31';"
"Find all transactions made in the previous year, between July 1 and July 31, by customers with a specific gender.","SELECT * FROM transactions WHERE YEAR(transaction_date) = YEAR(DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AND transaction_date BETWEEN '2023-07-01' AND '2023-07-31' AND customer_gender = '<gender>';"
"Retrieve all product records with a price greater than the average price of the products in their category multiplied by 1.5, and added between July 1 and July 31.",SELECT * FROM products AS p WHERE p.price > (SELECT AVG(price) * 1.5 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-07-01' AND '2023-07-31';"
"Get all employee records with a hire date in the previous 3 months, between July 1 and July 31, and a job title of ""Supervisor"".","SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND hire_date BETWEEN '2023-07-01' AND '2023-07-31' AND job_title = 'Supervisor';"
"Find all orders placed by customers with a specific age group, between July 1 and July 31, and a minimum order amount of $100.",SELECT * FROM orders WHERE customer_age_group = '<age_group>' AND order_date BETWEEN '2023-07-01' AND '2023-07-31' AND order_amount >= 100;"
"Retrieve all customer records where the account was created between August 15 and September 30, and the account status is ""verified"".",SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-08-15' AND '2023-09-30' AND account_status = 'verified';"
"Find all orders placed between August 1 and October 31, by customers with a specific loyalty level.",SELECT * FROM orders WHERE order_date BETWEEN '2023-08-01' AND '2023-10-31' AND customer_loyalty_level = '<loyalty_level>';"
"Get all employee records with a hire date between August 1 and November 30, and a job title of ""Senior Engineer"".",SELECT * FROM employees WHERE hire_date BETWEEN '2023-08-01' AND '2023-11-30' AND job_title = 'Senior Engineer';"
"Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.8, within the date range of August 1 and September 30.",SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.8 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-08-01' AND '2023-09-30';"
"Find all transactions made between September 1 and November 30, by customers with a specific age range.",SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-09-01' AND '2023-11-30' AND customer_age BETWEEN <min_age> AND <max_age>;"
"Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of October 1 and December 31.",SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees) AND hire_date BETWEEN '2023-10-01' AND '2023-12-31';"
"Get all customer records where the account was created between September 1 and November 30, within the last 120 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-09-01' AND '2023-11-30' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 120 DAY) AND account_balance > 0;"
"Find all orders placed between October 1 and December 31, in the previous month, by customers with a specific payment method.","SELECT * FROM orders WHERE order_date BETWEEN '2023-10-01' AND '2023-12-31' AND MONTH(order_date) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND payment_method = '<payment_method>';"
"Retrieve all invoices with a due date between November 1 and December 31, in the current year, and a total amount over $5000.",SELECT * FROM invoices WHERE due_date BETWEEN '2023-11-01' AND '2023-12-31' AND YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 5000;"
"Get all customer records where the account was created between October 1 and December 31, within the last 240 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-10-01' AND '2023-12-31' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 240 DAY) AND account_balance > 0;"
"Find all products with a discount percentage higher than 70%, a stock quantity below 5, and added between August 1 and September 30.",SELECT * FROM products WHERE discount_percentage > 70 AND stock_quantity < 5 AND date_added BETWEEN '2023-08-01' AND '2023-09-30';"
"Retrieve all employee records with a salary within the top 5% highest salaries in the company, hired between September 1 and November 30.",SELECT * FROM employees WHERE salary IN (SELECT salary FROM employees ORDER BY salary DESC LIMIT (SELECT CEIL(0.05 * COUNT(*)) FROM employees)) AND hire_date BETWEEN '2023-09-01' AND '2023-11-30';"
"Get all customer records where the last name starts with ""S"", the account balance is zero, and the account was created between October 1 and December 31.",SELECT * FROM customers WHERE last_name LIKE 'S%' AND account_balance = 0 AND account_creation_date BETWEEN '2023-10-01' AND '2023-12-31';"
"Find all products with a category ID of 8, a price higher than the average price of the products in their category divided by 3, and added between November 1 and December 31.",SELECT * FROM products WHERE category_id = 8 AND price > (SELECT AVG(price) / 3 FROM products WHERE category_id = 8) AND date_added BETWEEN '2023-11-01' AND '2023-12-31';"
"Retrieve all orders placed between November 1 and December 31, in the current month, by customers with a specific loyalty points balance.",SELECT * FROM orders WHERE order_date BETWEEN '2023-11-01' AND '2023-12-31' AND MONTH(order_date) = MONTH(CURDATE()) AND customer_loyalty_points = <loyalty_points>;"
"Get all invoices with a due date within the next 10 days, a total amount below $3000, and due between October 1 and December 31.","SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 10 DAY) AND total_amount < 3000 AND due_date BETWEEN '2023-10-01' AND '2023-12-31';"
"Find all transactions made in the previous year, between September 1 and November 30, by customers with a specific gender.","SELECT * FROM transactions WHERE YEAR(transaction_date) = YEAR(DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AND transaction_date BETWEEN '2023-09-01' AND '2023-11-30' AND customer_gender = '<gender>';"
"Retrieve all product records with a price greater than the average price of the products in their category multiplied by 1.2, and added between October 1 and December 31.",SELECT * FROM products AS p WHERE p.price > (SELECT AVG(price) * 1.2 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-10-01' AND '2023-12-31';"
"Get all employee records with a hire date in the previous 4 months, between October 1 and December 31, and a job title of ""Manager"".","SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 4 MONTH) AND hire_date BETWEEN '2023-10-01' AND '2023-12-31' AND job_title = 'Manager';"
"Find all orders placed by customers with a specific age group, between November 1 and December 31, and a minimum order amount of $200.",SELECT * FROM orders WHERE customer_age_group = '<age_group>' AND order_date BETWEEN '2023-11-01' AND '2023-12-31' AND order_amount >= 200;"
"Retrieve all customer records where the account was created between January 1 and March 31, and the account status is ""active"".",SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-01-01' AND '2023-03-31' AND account_status = 'active';"
"Find all orders placed between February 1 and April 30, by customers with a specific loyalty level.",SELECT * FROM orders WHERE order_date BETWEEN '2023-02-01' AND '2023-04-30' AND customer_loyalty_level = '<loyalty_level>';"
"Get all employee records with a hire date between March 1 and May 31, and a job title of ""Analyst"".",SELECT * FROM employees WHERE hire_date BETWEEN '2023-03-01' AND '2023-05-31' AND job_title = 'Analyst';"
"Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.9, within the date range of April 1 and June 30.",SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.9 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-04-01' AND '2023-06-30';"
"Find all transactions made between May 1 and July 31, by customers with a specific age range.",SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-05-01' AND '2023-07-31' AND customer_age BETWEEN <min_age> AND <max_age>;"
"Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of June 1 and August 31.",SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees) AND hire_date BETWEEN '2023-06-01' AND '2023-08-31';"
"Get all customer records where the account was created between July 1 and September 30, within the last 150 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-07-01' AND '2023-09-30' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 150 DAY) AND account_balance > 0;"
"Find all orders placed between August 1 and October 31, in the previous month, by customers with a specific payment method.","SELECT * FROM orders WHERE order_date BETWEEN '2023-08-01' AND '2023-10-31' AND MONTH(order_date) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND payment_method = '<payment_method>';"
"Retrieve all invoices with a due date between September 1 and November 30, in the current year, and a total amount over $4000.",SELECT * FROM invoices WHERE due_date BETWEEN '2023-09-01' AND '2023-11-30' AND YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 4000;"
"Get all customer records where the account was created between October 1 and December 31, within the last 200 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-10-01' AND '2023-12-31' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 200 DAY) AND account_balance > 0;"
"Find all products with a discount percentage higher than 60%, a stock quantity below 10, and added between November 1 and December 31.",SELECT * FROM products WHERE discount_percentage > 60 AND stock_quantity < 10 AND date_added BETWEEN '2023-11-01' AND '2023-12-31';"
"Retrieve all employee records with a salary within the top 10% highest salaries in the company, hired between September 1 and November 30.",SELECT * FROM employees WHERE salary IN (SELECT salary FROM employees ORDER BY salary DESC LIMIT (SELECT CEIL(0.1 * COUNT(*)) FROM employees)) AND hire_date BETWEEN '2023-09-01' AND '2023-11-30';"
"Get all customer records where the last name starts with ""M"", the account balance is zero, and the account was created between October 1 and December 31.",SELECT * FROM customers WHERE last_name LIKE 'M%' AND account_balance = 0 AND account_creation_date BETWEEN '2023-10-01' AND '2023-12-31';"
"Find all products with a category ID of 9, a price higher than the average price of the products in their category divided by 2, and added between November 1 and December 31.",SELECT * FROM products WHERE category_id = 9 AND price > (SELECT AVG(price) / 2 FROM products WHERE category_id = 9) AND date_added BETWEEN '2023-11-01' AND '2023-12-31';"
"Retrieve all orders placed between November 1 and December 31, in the current month, by customers with a specific loyalty points balance.",SELECT * FROM orders WHERE order_date BETWEEN '2023-11-01' AND '2023-12-31' AND MONTH(order_date) = MONTH(CURDATE()) AND customer_loyalty_points = <loyalty_points>;"
"Get all invoices with a due date within the next 15 days, a total amount below $2500, and due between October 1 and December 31.","SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 15 DAY) AND total_amount < 2500 AND due_date BETWEEN '2023-10-01' AND '2023-12-31';"
"Find all transactions made in the previous year, between September 1 and November 30, by customers with a specific gender.","SELECT * FROM transactions WHERE YEAR(transaction_date) = YEAR(DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AND transaction_date BETWEEN '2023-09-01' AND '2023-11-30' AND customer_gender = '<gender>';"
"Retrieve all product records with a price greater than the average price of the products in their category multiplied by 1.5, and added between October 1 and December 31.",SELECT * FROM products AS p WHERE p.price > (SELECT AVG(price) * 1.5 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-10-01' AND '2023-12-31';"
"Get all employee records with a hire date in the previous 6 months, between October 1 and December 31, and a job title of ""Supervisor"".","SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND hire_date BETWEEN '2023-10-01' AND '2023-12-31' AND job_title = 'Supervisor';"
"Find all orders placed by customers with a specific age group, between November 1 and December 31, and a minimum order amount of $150.",SELECT * FROM orders WHERE customer_age_group = '<age_group>' AND order_date BETWEEN '2023-11-01' AND '2023-12-31' AND order_amount >= 150;"
"Retrieve all customer records where the account was created between January 1 and March 31, and the account status is ""pending approval"".",SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-01-01' AND '2023-03-31' AND account_status = 'pending approval';"
"Find all orders placed between February 1 and April 30, by customers with a specific loyalty level and a preferred shipping method.",SELECT * FROM orders WHERE order_date BETWEEN '2023-02-01' AND '2023-04-30' AND customer_loyalty_level = '<loyalty_level>' AND shipping_method = '<shipping_method>';"
"Get all employee records with a hire date between March 1 and May 31, and a job title of ""Senior Developer"".",SELECT * FROM employees WHERE hire_date BETWEEN '2023-03-01' AND '2023-05-31' AND job_title = 'Senior Developer';"
"Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.8, within the date range of April 1 and June 30.",SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.8 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-04-01' AND '2023-06-30';"
"Find all transactions made between May 1 and July 31, by customers with a specific age range and payment method.",SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-05-01' AND '2023-07-31' AND customer_age BETWEEN <min_age> AND <max_age> AND payment_method = '<payment_method>';"
"Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of June 1 and August 31.",SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees) AND hire_date BETWEEN '2023-06-01' AND '2023-08-31';"
"Get all customer records where the account was created between July 1 and September 30, within the last 180 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-07-01' AND '2023-09-30' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 180 DAY) AND account_balance > 0;"
"Find all orders placed between August 1 and October 31, in the previous month, by customers with a specific payment method and order status.","SELECT * FROM orders WHERE order_date BETWEEN '2023-08-01' AND '2023-10-31' AND MONTH(order_date) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND payment_method = '<payment_method>' AND order_status = '<order_status>';"
"Retrieve all invoices with a due date between September 1 and November 30, in the current year, and a total amount over $5000.",SELECT * FROM invoices WHERE due_date BETWEEN '2023-09-01' AND '2023-11-30' AND YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 5000;"
"Get all customer records where the account was created between October 1 and December 31, within the last 250 days, and the account balance is positive.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-10-01' AND '2023-12-31' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 250 DAY) AND account_balance > 0;"
"Find all products with a discount percentage higher than 70%, a stock quantity below 5, and added between November 1 and December 31.",SELECT * FROM products WHERE discount_percentage > 70 AND stock_quantity < 5 AND date_added BETWEEN '2023-11-01' AND '2023-12-31';"
"Retrieve all employee records with a salary within the top 5% highest salaries in the company, hired between September 1 and November 30.",SELECT * FROM employees WHERE salary IN (SELECT salary FROM employees ORDER BY salary DESC LIMIT (SELECT CEIL(0.05 * COUNT(*)) FROM employees)) AND hire_date BETWEEN '2023-09-01' AND '2023-11-30';"
"Get all customer records where the account was created between January 1 and March 31, the account balance is zero, and the account status is ""inactive"".",SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-01-01' AND '2023-03-31' AND account_balance = 0 AND account_status = 'inactive';"
"Find all products with a category ID of 7, a price higher than the average price of the products in their category divided by 3, and added between November 1 and December 31.",SELECT * FROM products WHERE category_id = 7 AND price > (SELECT AVG(price) / 3 FROM products WHERE category_id = 7) AND date_added BETWEEN '2023-11-01' AND '2023-12-31';"
"Retrieve all orders placed between November 1 and December 31, in the current month, by customers with a specific loyalty points balance.",SELECT * FROM orders WHERE order_date BETWEEN '2023-11-01' AND '2023-12-31' AND MONTH(order_date) = MONTH(CURDATE()) AND customer_loyalty_points = <loyalty_points>;"
"Get all invoices with a due date within the next 10 days, a total amount below $3000, and due between October 1 and December 31.","SELECT * FROM invoices WHERE due_date <= DATE_ADD(CURDATE(), INTERVAL 10 DAY) AND total_amount < 3000 AND due_date BETWEEN '2023-10-01' AND '2023-12-31';"
"Find all transactions made in the previous year, between September 1 and November 30, by customers with a specific gender and transaction amount.","SELECT * FROM transactions WHERE YEAR(transaction_date) = YEAR(DATE_SUB(CURDATE(), INTERVAL 1 YEAR)) AND transaction_date BETWEEN '2023-09-01' AND '2023-11-30' AND customer_gender = '<gender>' AND transaction_amount > <amount>;"
"Retrieve all product records with a price greater than the average price of the products in their category multiplied by 1.2, and added between October 1 and December 31.",SELECT * FROM products AS p WHERE p.price > (SELECT AVG(price) * 1.2 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-10-01' AND '2023-12-31';"
"Get all employee records with a hire date in the previous 4 months, between October 1 and December 31, and a job title of ""Manager"".","SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 4 MONTH) AND hire_date BETWEEN '2023-10-01' AND '2023-12-31' AND job_title = 'Manager';"
"Find all orders placed by customers with a specific age group, between November 1 and December 31, and a minimum order amount of $200.",SELECT * FROM orders WHERE customer_age_group = '<age_group>' AND order_date BETWEEN '2023-11-01' AND '2023-12-31' AND order_amount >= 200;"
"Retrieve all customer records where the account was created between January 1 and March 31, and the account status is either ""active"" or ""pending verification"".","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-01-01' AND '2023-03-31' AND account_status IN ('active', 'pending verification');"
"Find all orders placed between February 1 and April 30, by customers with a specific loyalty level, preferred shipping method, and order status.",SELECT * FROM orders WHERE order_date BETWEEN '2023-02-01' AND '2023-04-30' AND customer_loyalty_level = '<loyalty_level>' AND shipping_method = '<shipping_method>' AND order_status = '<order_status>';"
"Get all employee records with a hire date between March 1 and May 31, a job title of ""Data Analyst"", and a salary above the company's average salary.",SELECT * FROM employees WHERE hire_date BETWEEN '2023-03-01' AND '2023-05-31' AND job_title = 'Data Analyst' AND salary > (SELECT AVG(salary) FROM employees);"
"Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.75, within the date range of April 1 and June 30.",SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.75 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-04-01' AND '2023-06-30';"
"Find all transactions made between May 1 and July 31, by customers with a specific age range, payment method, and transaction status.",SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-05-01' AND '2023-07-31' AND customer_age BETWEEN <min_age> AND <max_age> AND payment_method = '<payment_method>' AND transaction_status = '<transaction_status>';"
"Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of June 1 and August 31, and a job title of ""Senior Manager"".","Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of June 1 and August 31, and a job title of ""Senior Manager""."
"Get all customer records where the account was created between July 1 and September 30, within the last 200 days, the account balance is positive, and the customer has made at least 3 orders.","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-07-01' AND '2023-09-30' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 200 DAY) AND account_balance > 0 AND (SELECT COUNT(*) FROM orders WHERE customer_id = customers.id) >= 3;"
"Find all orders placed between August 1 and October 31, in the previous month, by customers with a specific payment method, order status, and order amount greater than $1000.","Find all orders placed between August 1 and October 31, in the previous month, by customers with a specific payment method, order status, and order amount greater than $1000."
"Retrieve all invoices with a due date between September 1 and November 30, in the current year, a total amount over $5000, and issued by a specific employee.",SELECT * FROM invoices WHERE due_date BETWEEN '2023-09-01' AND '2023-11-30' AND YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 5000 AND issued_by_employee = '<employee_name>';"
"Find all products with a category ID of 7, a price higher than the average price of the products in their category divided by 4, and added between November 1 and December 31.",SELECT * FROM products WHERE category_id = 7 AND price > (SELECT AVG(price) / 4 FROM products WHERE category_id = 7) AND date_added BETWEEN '2023-11-01' AND '2023-12-31';"
"Retrieve all customer records where the account was created between January 1 and March 31, the account status is ""active,"" and the customer has placed at least 2 orders.",SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-01-01' AND '2023-03-31' AND account_status = 'active' AND (SELECT COUNT(*) FROM orders WHERE customer_id = customers.id) >= 2;"
"Get all orders placed between February 1 and April 30, by customers with a specific loyalty level, preferred shipping method, and a total order amount exceeding $100.",SELECT * FROM orders WHERE order_date BETWEEN '2023-02-01' AND '2023-04-30' AND customer_loyalty_level = '<loyalty_level>' AND shipping_method = '<shipping_method>' AND order_amount > 100;"
"Find all employee records with a hire date between March 1 and May 31, a job title of ""Sales Representative,"" and a commission percentage higher than 5%.",SELECT * FROM employees WHERE hire_date BETWEEN '2023-03-01' AND '2023-05-31' AND job_title = 'Sales Representative' AND commission_percentage > 0.05;"
"Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.9, added between April 1 and June 30, and currently in stock.",SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.9 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-04-01' AND '2023-06-30' AND p.stock_quantity > 0;"
"Get all transactions made between May 1 and July 31, by customers with a specific age range, payment method, and transaction status of ""completed.""",SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-05-01' AND '2023-07-31' AND customer_age BETWEEN <min_age> AND <max_age> AND payment_method = '<payment_method>' AND transaction_status = 'completed';"
"Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of June 1 and August 31, and a job title of ""Human Resources Manager.""",SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees) AND hire_date BETWEEN '2023-06-01' AND '2023-08-31' AND job_title = 'Human Resources Manager';"
"Find all customer records where the account was created between July 1 and September 30, within the last 180 days, the account balance is positive, and the customer's preferred payment method is ""Credit Card.""","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-07-01' AND '2023-09-30' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 180 DAY) AND account_balance > 0 AND preferred_payment_method = 'Credit Card';"
"Get all orders placed between August 1 and October 31, in the previous month, by customers with a specific payment method, order status, and order amount between $50 and $200.","SELECT * FROM orders WHERE order_date BETWEEN '2023-08-01' AND '2023-10-31' AND MONTH(order_date) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND payment_method = '<payment_method>' AND order_status = '<order_status>' AND order_amount BETWEEN 50 AND 200;"
"Retrieve all invoices with a due date between September 1 and November 30, in the current year, a total amount over $500, and issued by a specific employee.",SELECT * FROM invoices WHERE due_date BETWEEN '2023-09-01' AND '2023-11-30' AND YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 500 AND issued_by_employee = '<employee_name>';"
"Find all products with a category ID of 7, a price higher than the average price of the products in their category divided by 2, and added between November 1 and December 31.",SELECT * FROM products WHERE category_id = 7 AND price > (SELECT AVG(price) / 2 FROM products WHERE category_id = 7) AND date_added BETWEEN '2023-11-01' AND '2023-12-31';"
"Retrieve all customer records where the account was created between January 1 and March 31, the account status is ""active,"" and the customer has placed at least 2 orders with a total order amount exceeding $1000.",SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-01-01' AND '2023-03-31' AND account_status = 'active' AND (SELECT COUNT(*) FROM orders WHERE customer_id = customers.id) >= 2 AND (SELECT SUM(order_amount) FROM orders WHERE customer_id = customers.id) > 1000;"
"Get all orders placed between February 1 and April 30, by customers with a specific loyalty level, preferred shipping method, and a total order quantity exceeding 10 items.",SELECT * FROM orders WHERE order_date BETWEEN '2023-02-01' AND '2023-04-30' AND customer_loyalty_level = '<loyalty_level>' AND shipping_method = '<shipping_method>' AND (SELECT SUM(order_quantity) FROM order_items WHERE order_id = orders.id) > 10;"
"Find all employee records with a hire date between March 1 and May 31, a job title of ""Marketing Specialist,"" and a performance rating higher than 4.5.",SELECT * FROM employees WHERE hire_date BETWEEN '2023-03-01' AND '2023-05-31' AND job_title = 'Marketing Specialist' AND performance_rating > 4.5;"
"Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.8, added between April 1 and June 30, and currently out of stock.",SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.8 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-04-01' AND '2023-06-30' AND p.stock_quantity = 0;"
"Get all transactions made between May 1 and July 31, by customers with a specific age range, payment method, and transaction status of ""refunded.""",SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-05-01' AND '2023-07-31' AND customer_age BETWEEN <min_age> AND <max_age> AND payment_method = '<payment_method>' AND transaction_status = 'refunded';"
"Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of June 1 and August 31, and a job title of ""Software Engineer.""",SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees) AND hire_date BETWEEN '2023-06-01' AND '2023-08-31' AND job_title = 'Software Engineer';"
"Find all customer records where the account was created between July 1 and September 30, within the last 150 days, the account balance is positive, and the customer's preferred payment method is ""PayPal.""","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-07-01' AND '2023-09-30' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 150 DAY) AND account_balance > 0 AND preferred_payment_method = 'PayPal';"
"Get all orders placed between August 1 and October 31, in the previous month, by customers with a specific payment method, order status, and order amount between $200 and $500.","SELECT * FROM orders WHERE order_date BETWEEN '2023-08-01' AND '2023-10-31' AND MONTH(order_date) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND payment_method = '<payment_method>' AND order_status = '<order_status>' AND order_amount BETWEEN 200 AND 500;"
"Retrieve all invoices with a due date between September 1 and November 30, in the current year, a total amount over $1000, and issued by a specific employee.",SELECT * FROM invoices WHERE due_date BETWEEN '2023-09-01' AND '2023-11-30' AND YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 1000 AND issued_by_employee = '<employee_name>';"
"Find all products with a category ID of 7, a price higher than the average price of the products in their category divided by 3, and added between November 1 and December 31.",SELECT * FROM products WHERE category_id = 7 AND price > (SELECT AVG(price) / 3 FROM products WHERE category_id = 7) AND date_added BETWEEN '2023-11-01' AND '2023-12-31';"
"Retrieve all customer records where the account was created between January 1 and March 31, the account status is ""active,"" and the customer has placed at least 3 orders with a total order amount exceeding $2000.",SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-01-01' AND '2023-03-31' AND account_status = 'active' AND (SELECT COUNT(*) FROM orders WHERE customer_id = customers.id) >= 3 AND (SELECT SUM(order_amount) FROM orders WHERE customer_id = customers.id) > 2000;"
"Get all orders placed between February 1 and April 30, by customers with a specific loyalty level, preferred shipping method, and a total order quantity exceeding 20 items.",SELECT * FROM orders WHERE order_date BETWEEN '2023-02-01' AND '2023-04-30' AND customer_loyalty_level = '<loyalty_level>' AND shipping_method = '<shipping_method>' AND (SELECT SUM(order_quantity) FROM order_items WHERE order_id = orders.id) > 20;"
"Find all employee records with a hire date between March 1 and May 31, a job title of ""Accountant,"" and a performance rating higher than 4.8.",SELECT * FROM employees WHERE hire_date BETWEEN '2023-03-01' AND '2023-05-31' AND job_title = 'Accountant' AND performance_rating > 4.8;"
"Retrieve all product records with a price lower than the average price of the products in their category multiplied by 0.7, added between April 1 and June 30, and currently out of stock.",SELECT * FROM products AS p WHERE p.price < (SELECT AVG(price) * 0.7 FROM products WHERE category_id = p.category_id) AND p.date_added BETWEEN '2023-04-01' AND '2023-06-30' AND p.stock_quantity = 0;"
"Get all transactions made between May 1 and July 31, by customers with a specific age range, payment method, and transaction status of ""pending.""",SELECT * FROM transactions WHERE transaction_date BETWEEN '2023-05-01' AND '2023-07-31' AND customer_age BETWEEN <min_age> AND <max_age> AND payment_method = '<payment_method>' AND transaction_status = 'pending';"
"Retrieve all employee records with a salary increase percentage higher than the company's average salary increase percentage, within the date range of June 1 and August 31, and a job title of ""Marketing Manager.""",SELECT * FROM employees WHERE salary_increase_percentage > (SELECT AVG(salary_increase_percentage) FROM employees) AND hire_date BETWEEN '2023-06-01' AND '2023-08-31' AND job_title = 'Marketing Manager';"
"Find all customer records where the account was created between July 1 and September 30, within the last 120 days, the account balance is positive, and the customer's preferred payment method is ""Bank Transfer.""","SELECT * FROM customers WHERE account_creation_date BETWEEN '2023-07-01' AND '2023-09-30' AND account_creation_date >= DATE_SUB(CURDATE(), INTERVAL 120 DAY) AND account_balance > 0 AND preferred_payment_method = 'Bank Transfer';"
"Get all orders placed between August 1 and October 31, in the previous month, by customers with a specific payment method, order status, and order amount between $100 and $300.","SELECT * FROM orders WHERE order_date BETWEEN '2023-08-01' AND '2023-10-31' AND MONTH(order_date) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND payment_method = '<payment_method>' AND order_status = '<order_status>' AND order_amount BETWEEN 100 AND 300;"
"Retrieve all invoices with a due date between September 1 and November 30, in the current year, a total amount over $1500, and issued by a specific employee.",SELECT * FROM invoices WHERE due_date BETWEEN '2023-09-01' AND '2023-11-30' AND YEAR(due_date) = YEAR(CURDATE()) AND total_amount > 1500 AND issued_by_employee = '<employee_name>';"
"Find all products with a category ID of 7, a price higher than the average price of the products in their category divided by 4, and added between November 1 and December 31.",SELECT * FROM products WHERE category_id = 7 AND price > (SELECT AVG(price) / 4 FROM products WHERE category_id = 7) AND date_added BETWEEN '2023-11-01' AND '2023-12-31';"
"Retrieve all facility records with a name containing the keyword ""hospital"" and an address in a specific city.",SELECT * FROM facility WHERE name LIKE '%hospital%' AND address1 LIKE '%<city>%';"
"Find all facilities with an address in a specific state and an address2 containing the keyword ""building.""",SELECT * FROM facility WHERE address1 LIKE '%<state>%' AND address2 LIKE '%building%';"
"Retrieve all facilities with a name starting with the letter ""A"" and an address in a specific country.",SELECT * FROM facility WHERE name LIKE 'A%' AND address1 LIKE '%<country>%';"
Get all facilities with an address in a specific city and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address2 IS NOT NULL AND address2 != '';"
"Find all facilities with a name containing the keyword ""clinic"" and an address1 in a specific state.",SELECT * FROM facility WHERE name LIKE '%clinic%' AND address1 LIKE '%<state>%';"
"Retrieve all facilities with a name starting with the letter ""B"" and an address2 containing the keyword ""suite.""",SELECT * FROM facility WHERE name LIKE 'B%' AND address2 LIKE '%suite%'
Get all facilities with an address in a specific country and an address1 that is not empty.,FROM facility WHERE address1 LIKE '%<country>%' AND address1 IS NOT NULL AND address1 != '';"
"Find all facilities with a name containing the keyword ""center"" and an address1 in a specific city.",SELECT * FROM facility WHERE name LIKE '%center%' AND address1 LIKE '%<city>%';"
"Retrieve all facilities with a name starting with the letter ""H"" and an address2 containing the keyword ""floor.""",SELECT * FROM facility WHERE name LIKE 'H%' AND address2 LIKE '%floor%';"
Get all facilities with an address in a specific country and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<country>%' AND address1 IS NOT NULL AND address1 != '';"
Retrieve all facility records with a specific facility ID and an address1 that is not empty.,SELECT * FROM facility WHERE id = <facility_id> AND address1 IS NOT NULL AND address1 != '';"
"Find all facilities with a name containing the keyword ""center"" and an address2 in a specific city.",SELECT * FROM facility WHERE name LIKE '%center%' AND address2 LIKE '%<city>%';"
Get all facilities with an address in a specific state and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<state>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""S"" and an address1 containing the keyword ""street.""",SELECT * FROM facility WHERE name LIKE 'S%' AND address1 LIKE '%street%';"
Find all facilities with an address in a specific city and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""M"" and an address2 containing the keyword ""suite.""",SELECT * FROM facility WHERE name LIKE 'M%' AND address2 LIKE '%suite%';"
Get all facilities with an address in a specific country and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<country>%' AND address1 IS NOT NULL AND address1 != '';"
"Find all facilities with a name containing the keyword ""medical"" and an address1 in a specific state.",SELECT * FROM facility WHERE name LIKE '%medical%' AND address1 LIKE '%<state>%';"
"Retrieve all facilities with a name starting with the letter ""P"" and an address2 containing the keyword ""floor.""",SELECT * FROM facility WHERE name LIKE 'P%' AND address2 LIKE '%floor%';"
Get all facilities with an address in a specific country and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<country>%' AND address1 IS NOT NULL AND address1 != '';"
Retrieve all facilities with a specific facility ID and an address1 that is not empty.,SELECT * FROM facility WHERE id = <facility_id> AND address1 IS NOT NULL AND address1 != '';"
"Find all facilities with a name containing the keyword ""center"" and an address2 in a specific city.",SELECT * FROM facility WHERE name LIKE '%center%' AND address2 LIKE '%<city>%';"
Get all facilities with an address in a specific state and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<state>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""S"" and an address1 containing the keyword ""street.""",SELECT * FROM facility WHERE name LIKE 'S%' AND address1 LIKE '%street%';"
Find all facilities with an address in a specific city and an address2 that is not empty,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""M"" and an address2 containing the keyword ""suite.""",SELECT * FROM facility WHERE name LIKE 'M%' AND address2 LIKE '%suite%';"
Get all facilities with an address in a specific country and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<country>%' AND address1 IS NOT NULL AND address1 != '';"
"Find all facilities with a name containing the keyword ""medical"" and an address1 in a specific state.",SELECT * FROM facility WHERE name LIKE '%medical%' AND address1 LIKE '%<state>%';"
"Retrieve all facilities with a name starting with the letter ""P"" and an address2 containing the keyword ""floor.""",SELECT * FROM facility WHERE name LIKE 'P%' AND address2 LIKE '%floor%';"
Get all facilities with an address in a specific country and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<country>%' AND address1 IS NOT NULL AND address1 != '';"
"Retrieve all facilities with a name containing the keyword ""park"" and an address1 in a specific city.",SELECT * FROM facility WHERE name LIKE '%park%' AND address1 LIKE '%<city>%';"
Find all facilities with an address in a specific state and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<state>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""G"" and an address1 containing the keyword ""avenue.""",SELECT * FROM facility WHERE name LIKE 'G%' AND address1 LIKE '%avenue%';"
Get all facilities with an address in a specific city and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""L"" and an address2 containing the keyword ""room.""",SELECT * FROM facility WHERE name LIKE 'L%' AND address2 LIKE '%room%';"
Find all facilities with an address in a specific country and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<country>%' AND address1 IS NOT NULL AND address1 != '';"
"Retrieve all facilities with a name containing the keyword ""center"" and an address1 in a specific city.",SELECT * FROM facility WHERE name LIKE '%center%' AND address1 LIKE '%<city>%';"
Get all facilities with an address in a specific state and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<state>%' AND address2 IS NOT NULL AND address2 != '';"
"Find all facilities with a name starting with the letter ""T"" and an address1 containing the keyword ""road.""",SELECT * FROM facility WHERE name LIKE 'T%' AND address1 LIKE '%road%';"
Get all facilities with an address in a specific city and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name containing the keyword ""clinic"" and an address1 in a specific state.",SELECT * FROM facility WHERE name LIKE '%clinic%' AND address1 LIKE '%<state>%';"
Find all facilities with an address in a specific country and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<country>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""H"" and an address2 containing the keyword ""floor.""",SELECT * FROM facility WHERE name LIKE 'H%' AND address2 LIKE '%floor%';"
Get all facilities with an address in a specific city and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address1 IS NOT NULL AND address1 != '';"
"Retrieve all facilities with a name containing the keyword ""medical"" and an address1 in a specific state.",SELECT * FROM facility WHERE name LIKE '%medical%' AND address1 LIKE '%<state>%';"
Find all facilities with an address in a specific country and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<country>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""P"" and an address2 containing the keyword ""floor.""",SELECT * FROM facility WHERE name LIKE 'P%' AND address2 LIKE '%floor%';"
Get all facilities with an address in a specific city and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address1 IS NOT NULL AND address1 != '';"
"Retrieve all facilities with a name containing the keyword ""center"" and an address1 in a specific city.",SELECT * FROM facility WHERE name LIKE '%center%' AND address1 LIKE '%<city>%';"
Get all facilities with an address in a specific state and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<state>%' AND address2 IS NOT NULL AND address2 != '';"
"Find all facilities with a name starting with the letter ""T"" and an address1 containing the keyword ""road.""",SELECT * FROM facility WHERE name LIKE 'T%' AND address1 LIKE '%road%';"
Get all facilities with an address in a specific city and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name containing the keyword ""clinic"" and an address1 in a specific state.",SELECT * FROM facility WHERE name LIKE '%clinic%' AND address1 LIKE '%<state>%';"
Find all facilities with an address in a specific country and an address2 that is not empty.,FROM facility WHERE address1 LIKE '%<country>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""H"" and an address2 containing the keyword ""floor.""",SELECT * FROM facility WHERE name LIKE 'H%' AND address2 LIKE '%floor%';"
Get all facilities with an address in a specific city and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address1 IS NOT NULL AND address1 != '';"
"Retrieve all facilities with a name containing the keyword ""medical"" and an address1 in a specific state.",SELECT * FROM facility WHERE name LIKE '%medical%' AND address1 LIKE '%<state>%';"
Find all facilities with an address in a specific country and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<country>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name starting with the letter ""P"" and an address2 containing the keyword ""floor.""",SELECT * FROM facility WHERE name LIKE 'P%' AND address2 LIKE '%floor%';"
Get all facilities with an address in a specific city and an address1 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address1 IS NOT NULL AND address1 != '';"
"Retrieve all facilities with a name containing the keyword ""center"" and an address1 in a specific city.",SELECT * FROM facility WHERE name LIKE '%center%' AND address1 LIKE '%<city>%';"
Get all facilities with an address in a specific state and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<state>%' AND address2 IS NOT NULL AND address2 != '';"
"Find all facilities with a name starting with the letter ""T"" and an address1 containing the keyword ""road.""",SELECT * FROM facility WHERE name LIKE 'T%' AND address1 LIKE '%road%';"
Get all facilities with an address in a specific city and an address2 that is not empty.,SELECT * FROM facility WHERE address1 LIKE '%<city>%' AND address2 IS NOT NULL AND address2 != '';"
"Retrieve all facilities with a name containing the keyword ""clinic"" and an address1 in a specific state.",SELECT * FROM facility WHERE name LIKE '%clinic%' AND address1 LIKE '%<state>%';"
Retrieve the ID for events created in the last week:,SELECT id FROM event WHERE created_at >= NOW() - INTERVAL 1 WEEK;"
Retrieve the event type for events created in the last month:,SELECT event_type FROM event WHERE created_at >= NOW() - INTERVAL 1 MONTH;"
Retrieve the updated timestamp and event status (is_open) for events created in the last year:,"SELECT updated_at, is_open FROM event WHERE created_at >= NOW() - INTERVAL 1 YEAR;"
Retrieve the facility ID and user ID for events created between two specific dates:,"SELECT facility_id, user_id FROM event WHERE created_at BETWEEN '2023-06-01' AND '2023-06-30';"
Retrieve the description for events created between two specific timestamps:,SELECT description FROM event WHERE created_at BETWEEN '2023-06-01 12:00:00' AND '2023-06-30 18:00:00';"
Retrieve the closed timestamp and ID for events created in the last 7 days:,"SELECT closed_at, id FROM event WHERE created_at >= NOW() - INTERVAL 7 DAY;"
Retrieve all columns for events created in the last 30 days,SELECT * FROM event WHERE created_at >= NOW() - INTERVAL 30 DAY;"
Retrieve the facility ID and user ID for events created on a specific day of the week:,"SELECT facility_id, user_id FROM event WHERE DAYOFWEEK(created_at) = 2;"
Retrieve the description for events created on a specific month of the year:,SELECT description FROM event WHERE MONTH(created_at) = 6;"
Retrieve the event type for events created in the current year:,SELECT event_type FROM event WHERE YEAR(created_at) = YEAR(NOW());"
Retrieve the updated timestamp and event status (is_open) for events created in the current month:,"SELECT updated_at, is_open FROM event WHERE YEAR(created_at) = YEAR(NOW()) AND MONTH(created_at) = MONTH(NOW());"
Retrieve the closed timestamp and ID for events created in the current week:,"SELECT closed_at, id FROM event WHERE YEARWEEK(created_at) = YEARWEEK(NOW());"
Retrieve all columns for events created in the current day:,SELECT * FROM event WHERE DATE(created_at) = CURDATE();"
Retrieve the facility ID and user ID for events created in the current hour,"SELECT facility_id, user_id FROM event WHERE HOUR(created_at) = HOUR(NOW());"
Retrieve the description for events created in the current minute:,SELECT description FROM event WHERE MINUTE(created_at) = MINUTE(NOW());"
Retrieve the event type for events created in the current second:,SELECT event_type FROM event WHERE SECOND(created_at) = SECOND(NOW());"
Retrieve the updated timestamp and event status (is_open) for events created in the current microsecond:,"SELECT updated_at, is_open FROM event WHERE MICROSECOND(created_at) = MICROSECOND(NOW());"
Retrieve the closed timestamp and ID for events created in the current time zone:,"SELECT closed_at, id FROM event WHERE CONVERT_TZ(created_at, 'UTC', 'America/New_York') = NOW();"
Retrieve all columns for events created in the current year and month:,SELECT * FROM event WHERE YEAR(created_at) = YEAR(NOW()) AND MONTH(created_at) = MONTH(NOW());"
Retrieve the facility ID and user ID for events created in the current day of the week,"SELECT facility_id, user_id FROM event WHERE DAYOFWEEK(created_at) = DAYOFWEEK(NOW());"
Retrieve the description for events created in the current month of the year,SELECT description FROM event WHERE MONTH(created_at) = MONTH(NOW());"
Retrieve the event type for events created in the current hour of the day:,SELECT event_type FROM event WHERE HOUR(created_at) = HOUR(NOW());"
Retrieve the updated timestamp and event status (is_open) for events created in the current minute of the hour:,"SELECT updated_at, is_open FROM event WHERE MINUTE(created_at) = MINUTE(NOW());"
Retrieve the closed timestamp and ID for events created in the current second of the minute:,"SELECT closed_at, id FROM event WHERE SECOND(created_at) = SECOND(NOW());"
Retrieve all columns for events created in the current microsecond of the second:,SELECT * FROM event WHERE MICROSECOND(created_at) = MICROSECOND(NOW());"
Retrieve the facility ID and user ID for events created in the current time zone offset:,"SELECT facility_id, user_id FROM event WHERE CONVERT_TZ(created_at, 'UTC', @@session.time_zone) = NOW();"
"Retrieve the description for events created in the current year and month, sorted in ascending order of IDs:",SELECT description FROM event WHERE YEAR(created_at) = YEAR(NOW()) AND MONTH(created_at) = MONTH(NOW()) ORDER BY id ASC;"
"Retrieve the event type for events created in the current day of the week, sorted in descending order of IDs:",SELECT event_type FROM event WHERE DAYOFWEEK(created_at) = DAYOFWEEK(NOW()) ORDER BY id DESC;"
"Retrieve the updated timestamp and event status (is_open) for events created in the current hour of the day, sorted by facility ID:","SELECT updated_at, is_open FROM event WHERE HOUR(created_at) = HOUR(NOW()) ORDER BY facility_id;"
"Retrieve the closed timestamp and ID for events created in the current minute of the hour, sorted by user ID in descending order:","SELECT closed_at, id FROM event WHERE MINUTE(created_at) = MINUTE(NOW()) ORDER BY user_id DESC;"
"Retrieve all columns for events created in the current second of the minute, sorted by created timestamp in ascending order:",SELECT * FROM event WHERE SECOND(created_at) = SECOND(NOW()) ORDER BY created_at ASC;"
"Retrieve the facility ID and user ID for events created in the current time zone offset, sorted by ID in descending order","SELECT facility_id, user_id FROM event WHERE CONVERT_TZ(created_at, 'UTC', @@session.time_zone) = NOW() ORDER BY id DESC;"
"Retrieve the description for events created in the current year and month, limited to 10 rows:",SELECT description FROM event WHERE YEAR(created_at) = YEAR(NOW()) AND MONTH(created_at) = MONTH(NOW()) LIMIT 10;"
"Retrieve the event type for events created in the current day of the week, limited to 5 rows:",SELECT event_type FROM event WHERE DAYOFWEEK(created_at) = DAYOFWEEK(NOW()) LIMIT 5;"
"Retrieve the updated timestamp and event status (is_open) for events created in the current hour of the day, limited to 3 rows:","SELECT updated_at, is_open FROM event WHERE HOUR(created_at) = HOUR(NOW()) LIMIT 3;"
"Retrieve the closed timestamp and ID for events created in the current minute of the hour, limited to 7 rows:","SELECT closed_at, id FROM event WHERE MINUTE(created_at) = MINUTE(NOW()) LIMIT 7;"
"Retrieve all columns for events created in the current second of the minute, limited to 12 rows:",SELECT * FROM event WHERE SECOND(created_at) = SECOND(NOW()) LIMIT 12;"
"Retrieve the facility ID and user ID for events created in the current time zone offset, limited to 20 rows:","SELECT facility_id, user_id FROM event WHERE CONVERT_TZ(created_at, 'UTC', @@session.time_zone) = NOW() LIMIT 20;"
Retrieve the description for events created before a specific timestamp:,SELECT description FROM event WHERE created_at < '2023-06-01 00:00:00';"
Retrieve the event type for events created after a specific timestamp:,SELECT event_type FROM event WHERE created_at > '2023-06-30 23:59:59';"
"Retrieve all columns for events created between two specific timestamps, sorted in descending order of IDs:",SELECT * FROM event WHERE created_at BETWEEN '2023-06-01 00:00:00' AND '2023-06-30 23:59:59' ORDER BY id DESC;"
Give an sql query to Retrieve all records from the orders table within the last 2 months,"SELECT * FROM orders WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 2 MONTH);"
Provide an sql query to retrieve all records from the orders table within the last 2 months,"SELECT * FROM orders WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 2 MONTH);"
Get the data from the log table between today's date and the previous week.,"SELECT * FROM log_table WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) AND CURDATE();"
Give an sql query to get the data from the log table between today's date and the previous week.,"SELECT * FROM log_table WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 7 DAY) AND CURDATE();"
I need the records from the events table where the timestamp is between 9 PM and 9:45 PM today,SELECT * FROM events WHERE DATE(timestamp) = CURDATE() AND TIME(timestamp) BETWEEN '21:00:00' AND '21:45:00';"
Give an sql query to retrieve the events table where the timestamp is between 9 PM and 9:45 PM today,SELECT * FROM events WHERE DATE(timestamp) = CURDATE() AND TIME(timestamp) BETWEEN '21:00:00' AND '21:45:00';"
Show me the entries from the messages table for the past 24 hours,SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Retrieve the entries from the ""messages"" table that have been recorded in the past 24 hours.",SELECT * FROM messages  WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Provide the entries from the ""messages"" table that occurred in the past 24 hours.",SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Display all the messages recorded in the last 24 hours in the ""messages"" table.",SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Give me the messages from the ""messages"" table that have timestamps within the past 24 hours.",SELECT *  FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Show the entries from the ""messages"" table that were logged in the last 24 hours.",SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Provide a list of messages recorded within the last 24 hours in the ""messages"" table.",SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
"Give me all the messages logged within the last 24 hours in the ""messages"" table.",SELECT * FROM messages WHERE timestamp_column >= NOW() - INTERVAL '24 hours';"
Get the data from the sensor readings table between yesterday at 6 AM and today at 10 AM,"SELECT * FROM sensor_readings WHERE reading_timestamp >= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()) - 1, '06:00:00') AND reading_timestamp <= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), '10:00:00');"
Give an sql query to get the data from the sensor readings table between yesterday at 6 AM and today at 10 AM,"SELECT * FROM sensor_readings WHERE reading_timestamp >= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()) - 1, '06:00:00')  AND reading_timestamp <= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), '10:00:00');"
Give an sql query to retrieve the data from the sensor readings table between yesterday at 6 AM and today at 10 AM,"SELECT * FROM sensor_readings WHERE reading_timestamp >= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()) - 1, '06:00:00') AND reading_timestamp <= DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), '10:00:00');"
Export the Incident details for my facilities created in last 3 months,"SELECT * FROM event WHERE facility_id IN (  SELECT facility_id  FROM event  WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
Give an SQL query to obtain the incident details for my facilities that have been created in the past 3 months,"SELECT * FROM event WHERE facility_id IN (SELECT facility_id FROM event WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
SQL query should I use to retrieve the incident details for my facilities created within the last 3 months,"SELECT * FROM event WHERE facility_id IN ( SELECT facility_id FROM event  WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
What is the SQL query syntax to obtain the incident details for my facilities that were created in the last 3 months?,"SELECT * FROM event WHERE facility_id IN ( SELECT facility_id  FROM event  WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
"Can you provide a SQL query to extract the incident details specifically for my facilities, limited to the past 3 months","SELECT * FROM event WHERE facility_id IN ( SELECT facility_id FROM event  WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)) ORDER BY created_at DESC;"
Give an sql query to insert a new event,SELECT * FROM event;"
Give an sql query to Select all events,SELECT * FROM event;"
provide an sql query to select events with a facility_id is 1,SELECT * FROM event WHERE facility_id = 1;"
Sql query to select events with a specific facility_id,SELECT * FROM event WHERE facility_id = [faculty_id];"
Select events that are still open,SELECT * FROM event WHERE is_open = 1;"
sql query to update the description of an event,UPDATE event SET description = 'Updated Event Description' WHERE id = [id];"
Sql query to delete an event by its id,DELETE FROM event WHERE id = [id];"
Sql query to Count the total number of events,SELECT COUNT(*) FROM event;"
Provide an sql query to find the latest updated event,SELECT * FROM event ORDER BY updated_at DESC LIMIT 1;"
"To create a prompt for the SQL query ""SELECT * FROM event WHERE created_at BETWEEN '2023-01-01 00:00:00' AND '2023-06-30 23:59:59",SELECT * FROM event WHERE created_at BETWEEN '2023-01-01 00:00:00' AND '2023-06-30 23:59:59';"
Retrieve events with a specific harm_level_id,SELECT * FROM event WHERE harm_level_id = 4;"
Retrieve events with a range of harm_level_id values,SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Give an sql query to retrieve events with a range of harm_level_id values,SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Provide an sql query to retrieve events with a range of harm_level_id values,SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Count the number of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Sql query to count the number of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Generate an sql query to count the number of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Give sql query to count the number of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Update harm_level_id for a specific event,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Sql query to update harm_level_id for a specific event,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Give an sql query to update harm_level_id for a specific event,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Generate an sql query update harm_level_id for a specific event,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Delete events with a specific harm_level_id,DELETE FROM event WHERE harm_level_id = 3;"
Sql query to delete events with a specific harm_level_id,DELETE FROM event WHERE harm_level_id = 3;"
Give an sql query to delete events with a specific harm_level_id,DELETE FROM event WHERE harm_level_id = [id];"
Retrieve all events with a specific harm_level_id,SELECT * FROM event WHERE harm_level_id = 4;"
Sql query to retrieve all events with a specific harm_level_id,SELECT * FROM event WHERE harm_level_id = 4;"
Give an sql query to retrieve all events with a specific harm_level_id,SELECT * FROM event WHERE harm_level_id = 4;"
Retrieve the count of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Give an sql query to retrieve the count of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Generate an sql query to retrieve the count of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Retrieve events with a range of harm_level_id values,SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Given a sql query to retrieve harm_level_id values between 2 and 5,SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Provide an sql query to retrieve harm_level_id values between 2 and 5,SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Generate an sql query to retrieve events with a range of harm_level_id values between 2 to 5,SELECT * FROM event WHERE harm_level_id BETWEEN 2 AND 5;"
Retrieve events with a specific harm_level_id and event_type_id,SELECT * FROM event WHERE harm_level_id = 3 AND event_type_id = 2;"
Sql query to update the harm_level_id for a specific event,UPDATE event SET harm_level_id = [harm_level_id] WHERE id = [id];"
Update the harm_level_id  to 7 where the id is 123,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Sql query to update the harm_level_id  to 7 where the id is 123,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Give an sql query to update the harm_level_id  to 7 where the id is 123,UPDATE event SET harm_level_id = 7 WHERE id = 123;"
Delete events with a specific harm_level_id,DELETE FROM event WHERE harm_level_id = [harm_level_id];"
Delete events where the  harm_level_id is equal to 1,DELETE FROM event WHERE harm_level_id = 1;"
Give an sql query to delete events where the  harm_level_id is equal to 1,DELETE FROM event WHERE harm_level_id = 1;"
Provide an sql query to delete events where the  harm_level_id is equal to 1,DELETE FROM event WHERE harm_level_id = 1;"
Retrieve events sorted by harm_level_id in ascending order,SELECT * FROM event ORDER BY harm_level_id ASC;"
Sql query to retrieve events sorted by harm_level_id in ascending order,SELECT * FROM event ORDER BY harm_level_id ASC;"
Generate an sql query to retrieve events sorted by harm_level_id in ascending order,SELECT * FROM event ORDER BY harm_level_id ASC;"
Retrieve the highest harm_level_id value in the event table,SELECT MAX(harm_level_id) AS highest_harm_level FROM event;"
Sql query to retrieve the highest harm_level_id value in the event table,SELECT MAX(harm_level_id) AS highest_harm_level FROM event;"
Give an sql query to retrieve the highest harm_level_id value in the event table,SELECT MAX(harm_level_id) AS highest_harm_level FROM event;"
Generate an sql query to retrieve the highest harm_level_id value in the event table,SELECT MAX(harm_level_id) AS highest_harm_level FROM event;"
Calculate the average harm_level_id for all events,SELECT AVG(harm_level_id) AS average_harm_level FROM event;"
Give an sql query to calculate the average harm_level_id for all events,SELECT AVG(harm_level_id) AS average_harm_level FROM event;"
provide an sql command to calculate the average harm_level_id for all events,SELECT AVG(harm_level_id) AS average_harm_level FROM event;"
Retrieve events with non-null harm_level_id values,SELECT * FROM event WHERE harm_level_id IS NOT NULL;"
Give an sql query to retrieve events with non-null harm_level_id values,SELECT * FROM event WHERE harm_level_id IS NOT NULL;"
Provide an sql query to retrieve events with non-null harm_level_id values,SELECT * FROM event WHERE harm_level_id IS NOT NULL;"
Generate an sql query to retrieve events with non-null harm_level_id values,SELECT * FROM event WHERE harm_level_id IS NOT NULL;"
Retrieve events where the harm level is greater than 4,SELECT * FROM event WHERE harm_level_id > 4;
Sql query to retrieve events where the harm level is higher than,SELECT * FROM event WHERE harm_level_id > 4;
Generate an sql query to retrieve events where the harm level is higher than,SELECT * FROM event WHERE harm_level_id > 4;
Get the  events where the harm level is higher than,SELECT * FROM event WHERE harm_level_id > 4;
Retrieve the distinct harm levels present in the event table,SELECT DISTINCT harm_level_id FROM event;
Get  the distinct harm levels present in the event table,SELECT DISTINCT harm_level_id FROM event;
Give an sql query to get the distinct harm levels present in the event table,SELECT DISTINCT harm_level_id FROM event;
Generate the sql query to retrieve the distinct harm levels present in the event table,SELECT DISTINCT harm_level_id FROM event;
Retrieve events with a specific event_type_id,SELECT * FROM event WHERE event_type_id = [event_type_id];
Get the  events with a specified event_type_id,SELECT * FROM event WHERE event_type_id = [event_type_id];
Retrieve events where the event_type_id is 2,SELECT * FROM event WHERE event_type_id = 2;
Get the events where the event_type_id is 2,SELECT * FROM event WHERE event_type_id = 2;
Retrieve events sorted by event_type_id in descending order,SELECT * FROM event ORDER BY event_type_id DESC;"
Get the events sorted by event_type_id in descending order,SELECT * FROM event ORDER BY event_type_id DESC;"
Sql query to retrieve events sorted by event_type_id in descending order,SELECT * FROM event ORDER BY event_type_id DESC;"
Give an sql query to retrieve events sorted by event_type_id in descending order,SELECT * FROM event ORDER BY event_type_id DESC;"
Retrieve the distinct event_type_id values present in the event table,SELECT DISTINCT event_type_id FROM event;"
Sql query to retrieve the distinct event_type_id values present in the event table,SELECT DISTINCT event_type_id FROM event;"
Give an sql query to retrieve the distinct event_type_id values present in the event table,SELECT DISTINCT event_type_id FROM event;"
Calculate the average event_type_id for all events,SELECT AVG(event_type_id) AS average_event_type_id FROM event;"
Sql query to calculate the average event_type_id for all events,SELECT AVG(event_type_id) AS average_event_type_id FROM event;"
Get  the average event_type_id for all events,
Get  the average event_type_id for all events,SELECT AVG(event_type_id) AS average_event_type_id FROM event;"
Give an sql query to calculate the average event_type_id for all events,SELECT AVG(event_type_id) AS average_event_type_id FROM event;"
Retrieve events with non-null event_type_id values,SELECT * FROM event WHERE event_type_id IS NOT NULL;"
Get the events with non-null event_type_id values,SELECT * FROM event WHERE event_type_id IS NOT NULL;"
Give an sql query to retrieve events with non-null event_type_id values,SELECT * FROM event WHERE event_type_id IS NOT NULL;"
Generate an sql query to retrieve events with non-null event_type_id values,SELECT * FROM event WHERE event_type_id IS NOT NULL;"
Retrieve the count of events for each event_type_id along with the corresponding event type name,"SELECT et.name AS event_type_name COUNT(*) AS event_count FROM event e JOIN event_type et ON e.event_type_id = et.id GROUP BY et.name;"
Get the count of events for each event_type_id along with the corresponding event type name,"SELECT et.name AS event_type_name, COUNT(*) AS event_count FROM event e JOIN event_type et ON e.event_type_id = et.id GROUP BY et.name;"
Retrieve events where the event type is not equal to a specific event_type_id,SELECT * FROM event WHERE event_type_id <> [event_type_id];"
Retrieve the distinct event types present in the event table,SELECT DISTINCT event_type_id FROM event;"
Get the distinct event types present in the event table,SELECT DISTINCT event_type_id FROM event;"
Generate an sql query to retrieve the distinct event types present in the event table,SELECT DISTINCT event_type_id FROM event;"
Get the percentage of events for each event type,"SELECT  event_type_id, COUNT(*) AS event_count,  (COUNT(*) * 100 / (SELECT COUNT(*) FROM event)) AS percentage FROM event GROUP BY event_type_id;"
Give an sql query to calculate the percentage of events for each event type,"SELECT event_type_id, COUNT(*) AS event_count, (COUNT(*) * 100 / (SELECT COUNT(*) FROM event)) AS percentage FROM event GROUP BY event_type_id;"
Retrieve events ordered by event_type_id and then by created_at in ascending order,"SELECT * FROM event ORDER BY event_type_id ASC, created_at ASC;"
Get the events ordered by event_type_id and then by created_at in ascending order,"SELECT * FROM event ORDER BY event_type_id ASC, created_at ASC;"
Retrieve the total count of events for each event type in descending order,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id ORDER BY event_count DESC;"
Get the total count of events for each event type in descending order,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id ORDER BY event_count DESC;"
Retrieve the maximum event_type_id value in the event table,SELECT MAX(event_type_id) AS max_event_type_id FROM event;"
Get the maximum event_type_id value in the event table,SELECT MAX(event_type_id) AS max_event_type_id FROM event;"
Sql query to retrieve the maximum event_type_id value in the event table,SELECT MAX(event_type_id) AS max_event_type_id FROM event;"
Retrieve events that have a non-null event_type_id and a non-null harm_level_id,SELECT * FROM event WHERE event_type_id IS NOT NULL AND harm_level_id IS NOT NULL;"
Get the events that have a non-null event_type_id and a non-null harm_level_id,SELECT * FROM event WHERE event_type_id IS NOT NULL AND harm_level_id IS NOT NULL;"
Sql query to retrieve events that have a non-null event_type_id and a non-null harm_level_id,SELECT * FROM event WHERE event_type_id IS NOT NULL AND harm_level_id IS NOT NULL;"
Give an Sql query to retrieve events that have a non-null event_type_id and a non-null harm_level_id,SELECT * FROM event WHERE event_type_id IS NOT NULL AND harm_level_id IS NOT NULL;"
Calculate the average event_type_id for events associated with each facility,"SELECT f.name, AVG(e.event_type_id) AS average_event_type_id FROM event e JOIN facility f ON e.facility_id = f.id GROUP BY f.name;"
Get  the average event_type_id for events associated with each facility,"SELECT f.name, AVG(e.event_type_id) AS average_event_type_id FROM event e JOIN facility f ON e.facility_id = f.id GROUP BY f.name;"
Retrieve events with a specific event_type_id and a created date after a specified date,SELECT * FROM event WHERE event_type_id = 3 AND created_at > '[DATE]';"
Retrieve events with the same event_type_id and harm_level_id values,SELECT e1.* FROM event e1 JOIN event e2 ON e1.event_type_id = e2.event_type_id AND e1.harm_level_id = e2.harm_level_id WHERE e1.id <> e2.id;"
Get the sql query to retrieve events with the same event_type_id and harm_level_id values,SELECT e1.* FROM event e1 JOIN event e2 ON e1.event_type_id = e2.event_type_id AND e1.harm_level_id = e2.harm_level_id WHERE e1.id <> e2.id;"
Retrieve the event type with the highest occurrence,"SELECT event_type_id, COUNT(*) AS occurrence FROM event  GROUP BY event_type_id ORDER BY occurrence DESC LIMIT 1;"
Get the event type with the highest occurrence,"SELECT event_type_id, COUNT(*) AS occurrence FROM event GROUP BY event_type_id ORDER BY occurrence DESC LIMIT 1;"
Retrieve events with a specific event_type_id and a closed date that is null,SELECT * FROM event WHERE event_type_id =  [event_type_id] AND closed_at IS NULL;"
Retrieve the earliest created event for each event_type_id,"SELECT event_type_id, MIN(created_at) AS earliest_created_at FROM event GROUP BY event_type_id;"
Get the earliest created event for each event_type_id,"SELECT event_type_id, MIN(created_at) AS earliest_created_at FROM event GROUP BY event_type_id;"
Sql query to retrieve the earliest created event for each event_type_id,"SELECT event_type_id, MIN(created_at) AS earliest_created_at FROM event GROUP BY event_type_id;"
"Retrieve events with a specific event_type_id and a harm level that is not ""none""",SELECT * FROM event WHERE event_type_id = 3  AND harm_level_id <> 3;"
"Get the  events with a specific event_type_id and a harm level that is not ""none""",SELECT * FROM event WHERE event_type_id = 1 AND harm_level_id <> 3;"
Retrieve all events with their corresponding harm levels,SELECT * FROM event;"
Retrieve events with unknown harm levels,SELECT * FROM event  WHERE harm_level_id = 'Unknown';"
Get the events with unknown harm levels,SELECT * FROM event WHERE harm_level_id = 'Unknown';"
Sql query to retrieve events with unknown harm levels,SELECT * FROM event WHERE harm_level_id = 'Unknown';"
Retrieve events with no harm,SELECT * FROM event WHERE harm_level_id = 'None';"
Sql query to retrieve events with no harm,SELECT * FROM event WHERE harm_level_id = 'None';"
Generate sql query to retrieve events with 'none',SELECT * FROM event WHERE harm_level_id = 'None';"
Retrieve events with mild harm,SELECT * FROM event WHERE harm_level_id = 'Mild';"
Sql query to retrieve events with mild harm,SELECT * FROM event WHERE harm_level_id = 'Mild';"
Give an sql query to retrieve events with mild harm,SELECT * FROM event WHERE harm_level_id = 'Mild';"
Retrieve events with moderate harm,SELECT * FROM event WHERE harm_level_id = 'Moderate';"
Sql query to retrieve events with moderate harm,SELECT * FROM event WHERE harm_level_id = 'Moderate';"
Retrieve events with severe harm,SELECT * FROM event WHERE harm_level_id = 'Severe';"
Sql query to retrieve events with severe harm,SELECT * FROM event WHERE harm_level_id = 'Severe';"
Give an sql query to retrieve events with severe harm,SELECT * FROM event WHERE harm_level_id = 'Severe';"
Get the  events with severe harm,SELECT * FROM event WHERE harm_level_id = 'Severe';"
Retrieve events resulting in death,SELECT * FROM event WHERE harm_level_id = 'Death';"
Retrieve events resulting in death,SELECT * FROM event WHERE harm_level_id = 'Death';"
Get the events events resulting in death,SELECT * FROM event WHERE harm_level_id = 'Death';"
Sql query to retrieve events resulting in death,SELECT * FROM event WHERE harm_level_id = 'Death';"
Retrieve events with no harm or unknown harm levels,"SELECT * FROM event WHERE harm_level_id IN ('None', 'Unknown');"
Retrieve events with no harm or unknown harm levels,"SELECT * FROM event WHERE harm_level_id IN ('None', 'Unknown');"
Get the  events with no harm or unknown harm levels,"SELECT * FROM event WHERE harm_level_id IN ('None', 'Unknown');"
Sql query to retrieve events with no harm or unknown harm levels,"SELECT * FROM event WHERE harm_level_id IN ('None', 'Unknown');"
Count the number of events for each harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Get the count the number of events for each harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Give an sql query to count the number of events for each harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
"Retrieve events with harm levels categorized as mild, moderate, or severe","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate', 'Severe');"
"Get the  events with harm levels categorized as mild, moderate, or severe","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate', 'Severe');"
"Sql query to retrieve events with harm levels categorized as mild, moderate, or severe","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate', 'Severe');"
"Give an sql query to retrieve events with harm levels categorized as mild, moderate, or severe","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate', 'Severe');"
"Retrieve events with harm levels other than ""No Harm",SELECT * FROM event WHERE harm_level_id != 'No Harm';"
"Get the events with harm levels other than ""No Harm",SELECT * FROM event WHERE harm_level_id != 'No Harm';"
"Give an sql query to get the  events with harm levels other than ""No Harm",SELECT * FROM event WHERE harm_level_id != 'No Harm';"
"Retrieve events with harm levels of ""Mild"" or ""Moderate""","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate');"
"Sql query to retrieve the  events with harm levels of ""Mild"" or ""Moderate","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate');"
"Get the  events with harm levels of ""Mild"" or ""Moderate","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate');"
"Give an sql query to Retrieve events with harm levels of ""Mild"" or ""Moderate""","SELECT * FROM event WHERE harm_level_id IN ('Mild', 'Moderate');"
"Retrieve events with harm levels of ""Severe"" or ""Death"" and are open","SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND is_open = true;"
"Get the  events with harm levels of ""Severe"" or ""Death"" and are open","SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND is_open = true;"
"Give an sql query to retrieve events with harm levels of ""Severe"" or ""Death"" and are open","SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND is_open = true;"
"Generate an sql query to retrieve events with harm levels of ""Severe"" or ""Death"" and are open","SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND is_open = true;"
"Retrieve events that were closed and had a harm level of ""Severe""",SELECT * FROM event WHERE harm_level_id = 'Severe' AND closed_at IS NOT NULL;"
"Get the events that were closed and had a harm level of ""Severe""",SELECT * FROM event WHERE harm_level_id = 'Severe' AND closed_at IS NOT NULL;"
"Give the sql query to retrieve events that were closed and had a harm level of ""Severe""",SELECT * FROM event WHERE harm_level_id = 'Severe' AND closed_at IS NOT NULL;"
"Retrieve events with harm levels of ""Unknown"" or ""None"" and were created after a specific date","SELECT * FROM event WHERE harm_level_id IN ('Unknown', 'None') AND created_at > '[created_at_Date]';"
"Retrieve events with harm levels of ""Unknown"" or ""None"" and were created after a specific date","SELECT * FROM event WHERE harm_level_id IN ('Unknown', 'None') AND created_at > '[created_at_date]';"
"Give an sql query to retrieve events with harm levels of ""Unknown"" or ""None"" and were created after a specific date","SELECT * FROM event WHERE harm_level_id IN ('Unknown', 'None') AND created_at > '[created_at_Date];"
Retrieve the count of events for each distinct harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
Get  the count of events for each distinct harm level,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id;"
"Retrieve the average, minimum, and maximum harm levels for all events","SELECT AVG(harm_level_id) AS avg_harm_level, MIN(harm_level_id) AS min_harm_level, MAX(harm_level_id) AS max_harm_level FROM event;"
"Get the average, minimum, and maximum harm levels for all events","SELECT AVG(harm_level_id) AS avg_harm_level, MIN(harm_level_id) AS min_harm_level, MAX(harm_level_id) AS max_harm_level FROM event;"
Retrieve the total number of events grouped by harm level for closed events only,"SELECT harm_level_id, COUNT(*) AS event_count FROM event WHERE closed_at IS NOT NULL GROUP BY harm_level_id;"
Get the total number of events grouped by harm level for closed events only,"SELECT harm_level_id, COUNT(*) AS event_count FROM event WHERE closed_at IS NOT NULL GROUP BY harm_level_id;"
Retrieve the latest event with the highest harm level,SELECT * FROM event WHERE harm_level_id = (SELECT MAX(harm_level_id) FROM event) ORDER BY created_at DESC LIMIT 1;"
Get the latest event with the highest harm level,SELECT * FROM event WHERE harm_level_id = (SELECT MAX(harm_level_id) FROM event) ORDER BY created_at DESC LIMIT 1;"
Retrieve events with harm levels in alphabetical order,SELECT * FROM event ORDER BY harm_level_id ASC;"
Get the events with harm levels in alphabetical order,SELECT * FROM event ORDER BY harm_level_id ASC;"
"Retrieve events that are open and have a harm level other than ""No Harm""",SELECT * FROM event WHERE is_open = true AND harm_level_id != 'No Harm';"
"Get the events that are open and have a harm level other than ""No Harm""",SELECT * FROM event WHERE is_open = true AND harm_level_id != 'No Harm';"
Retrieve the number of events for each harm level in descending order,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id ORDER BY event_count DESC;"
Get the number of events for each harm level in descending order,"SELECT harm_level_id, COUNT(*) AS event_count FROM event GROUP BY harm_level_id ORDER BY event_count DESC;"
Retrieve the average harm level for events created in a specific month,SELECT AVG(harm_level_id) AS avg_harm_level FROM event WHERE MONTH(created_at) = [month];"
Retrieve the average harm level for events created in a specific month,SELECT AVG(harm_level_id) AS avg_harm_level FROM event WHERE MONTH(created_at) = [month];"
Retrieve the oldest event with a specific harm level,SELECT * FROM event WHERE harm_level_id = 'Severe' ORDER BY created_at ASC LIMIT 1;"
Get the oldest event with a specific harm level,SELECT * FROM event WHERE harm_level_id = 'Severe' ORDER BY created_at ASC LIMIT 1;"
Retrieve events with harm levels categorized as severe or death that were created in the last month,"SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND created_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"
Get the events with harm levels categorized as severe or death that were created in the last month,"SELECT * FROM event WHERE harm_level_id IN ('Severe', 'Death') AND created_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"
"Retrieve events categorized as ""Incident""",SELECT * FROM event WHERE event_type_id = 'Incident';"
"Get the  events categorized as ""Incident""",SELECT * FROM event WHERE event_type_id = 'Incident';"
"Retrieve events categorized as ""Near Miss""",SELECT * FROM event WHERE event_type_id = 'Near Miss';"
"Get the events categorized as ""Near Miss""",SELECT * FROM event WHERE event_type_id = 'Near Miss';"
Retrieve events with a specific event type ID,SELECT * FROM event WHERE event_type_id = [ event_type_id];"
Get the  events with a specific event type ID,SELECT * FROM event WHERE event_type_id =[event_type_id];"
Count the number of events for each event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
Get the count the number of events for each event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
"Retrieve events with event types categorized as ""Incident"" or ""Near Miss""","SELECT * FROM event WHERE event_type_id IN ('Incident', 'Near Miss');"
"Get the events with event types categorized as ""Incident"" or ""Near Miss""","SELECT * FROM event WHERE event_type_id IN ('Incident', 'Near Miss');"
"Retrieve events with event types other than ""Incident""",SELECT * FROM event WHERE event_type_id != 'Incident';"
"Get the events with event types other than ""Incident""",SELECT * FROM event WHERE event_type_id != 'Incident';"
"Retrieve events with event types containing the word ""Fire""",SELECT * FROM event WHERE event_type_id LIKE '%Fire%';"
"Get the events with event types containing the word ""Fire""",SELECT * FROM event WHERE event_type_id LIKE '%Fire%';"
Retrieve the most recent event for each event type,"SELECT * FROM event WHERE (event_type_id, created_at) IN (SELECT event_type_id, MAX(created_at) FROM event GROUP BY event_type_id);"
Get the most recent event for each event type,"SELECT * FROM event WHERE (event_type_id, created_at) IN (SELECT event_type_id, MAX(created_at) FROM event GROUP BY event_type_id);"
"Retrieve events with event types categorized as ""Incident"" and harm levels categorized as ""Severe""",SELECT * FROM event WHERE event_type_id = 'Incident' AND harm_level_id = 'Severe';"
"Get the events with event types categorized as ""Incident"" and harm levels categorized as ""Severe""",SELECT * FROM event WHERE event_type_id = 'Incident' AND harm_level_id = 'Severe';"
"Retrieve events with event types categorized as ""Incident"" or ""Near Miss"" that are open","SELECT * FROM event WHERE event_type_id IN ('Incident', 'Near Miss') AND is_open = true;"
"Get the events with event types categorized as ""Incident"" or ""Near Miss"" that are open","SELECT * FROM event WHERE event_type_id IN ('Incident', 'Near Miss') AND is_open = true;"
Retrieve the count of events for each distinct event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
Get the count of events for each distinct event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id;"
"Retrieve the average, minimum, and maximum event types for all events","SELECT AVG(event_type_id) AS avg_event_type, MIN(event_type_id) AS min_event_type, MAX(event_type_id) AS max_event_type FROM event;"
"Get the average, minimum, and maximum event types for all events","SELECT AVG(event_type_id) AS avg_event_type, MIN(event_type_id) AS min_event_type, MAX(event_type_id) AS max_event_type FROM event;"
Retrieve events that are closed and have a specific event type,SELECT * FROM event WHERE event_type_id = 'Incident' AND closed_at IS NOT NULL;"
Get the events that are closed and have a specific event type,SELECT * FROM event WHERE event_type_id = 'Incident' AND closed_at IS NOT NULL;"
Retrieve the total number of events grouped by event type for closed events only,"SELECT event_type_id, COUNT(*) AS event_count FROM event WHERE closed_at IS NOT NULL GROUP BY event_type_id;"
Get  the total number of events grouped by event type for closed events only,"SELECT event_type_id, COUNT(*) AS event_count FROM event WHERE closed_at IS NOT NULL GROUP BY event_type_id;"
"Retrieve events with event types other than ""Incident"" and ""Near Miss""","SELECT * FROM event WHERE event_type_id NOT IN ('Incident', 'Near Miss');"
"Get the events with event types other than ""Incident"" and ""Near Miss""","SELECT * FROM event WHERE event_type_id NOT IN ('Incident', 'Near Miss');"
"Retrieve events with event types containing the word ""Maintenance""",SELECT * FROM event WHERE event_type_id LIKE '%Maintenance%';"
"Retrieve events with event types categorized as ""Incident"" and have a specific harm level",SELECT * FROM event WHERE event_type_id = 'Incident' AND harm_level_id = 'Severe';"
"Get the events with event types categorized as ""Incident"" and have a specific harm level",SELECT * FROM event WHERE event_type_id = 'Incident' AND harm_level_id = 'Severe';"
Retrieve events with the highest occurrence for each event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id HAVING COUNT(*) = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM event GROUP BY event_type_id) AS subquery);"
Get the events with the highest occurrence for each event type,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id HAVING COUNT(*) = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM event GROUP BY event_type_id) AS subquery);"
Retrieve events that were created in a specific month and have a specific event type,SELECT * FROM event WHERE event_type_id = 'Incident' AND MONTH(created_at) = 6;"
Get the events that were created in a specific month and have a specific event type:,SELECT * FROM event WHERE event_type_id = 'Incident' AND MONTH(created_at) = [month];"
"Retrieve events with event types categorized as ""Near Miss"" and have a harm level of ""None""",SELECT * FROM event WHERE event_type_id = 'Near Miss' AND harm_level_id = 'None';"
Retrieve the number of events for each event type in descending order,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id ORDER BY event_count DESC;"
Get the number of events for each event type in descending order,"SELECT event_type_id, COUNT(*) AS event_count FROM event GROUP BY event_type_id ORDER BY event_count DESC;"
"Retrieve events with event types categorized as ""Incident"" and created within a specific date range",SELECT * FROM event WHERE event_type_id = 'Incident' AND created_at BETWEEN '2023-01-01' AND '2023-06-30';"
"Get the events with event types categorized as ""Incident"" and created between ""2023-01-01"" to ""2023-06-30""",SELECT * FROM event WHERE event_type_id = 'Incident' AND created_at BETWEEN '2023-01-01' AND '2023-06-30';"
"Retrieve events with event types categorized as ""Near Miss"" and ordered by their creation dates",SELECT * FROM event WHERE event_type_id = 'Near Miss' ORDER BY created_at DESC;"
"Get the events with event types categorized as ""Near Miss"" and ordered by their creation dates",SELECT * FROM event WHERE event_type_id = 'Near Miss' ORDER BY created_at DESC;"
Retrieve all facilities,SELECT * FROM facility;"
Get the all facilities,SELECT * FROM facility;"
Retrieve all events with their corresponding facility details,"SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2 FROM event JOIN facility ON event.facility_id = facility.id;"
Get all the events with their corresponding facility details,"SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2 FROM event JOIN facility ON event.facility_id = facility.id;"
Retrieve events with a specific facility ID,SELECT * FROM event WHERE facility_id = 123;"
Get the events with a specific facility ID,SELECT * FROM event WHERE facility_id = 123;"
Retrieve events with a specific facility name,SELECT event.* FROM event  JOIN facility ON event.facility_id = facility.id  WHERE facility.name = [Facility_name]';"
Retrieve the count of events for each facility,"SELECT facility.name, COUNT(*) AS event_count FROM event JOIN facility ON event.facility_id = facility.id GROUP BY facility.name;"
Get the count of events for each facility,"SELECT facility.name, COUNT(*) AS event_count FROM event JOIN facility ON event.facility_id = facility.id GROUP BY facility.name;"
Retrieve the count of events for each facility,"SELECT facility.name, COUNT(*) AS event_count FROM event JOIN facility ON event.facility_id = facility.id GROUP BY facility.name;"
Retrieve facilities with the highest number of events,"SELECT facility.name, COUNT(*) AS event_count FROM event JOIN facility ON event.facility_id = facility.id GROUP BY facility.name HAVING event_count = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM event GROUP BY facility_id) AS subquery);"
Get the facilities with the highest number of events,"SELECT facility.name, COUNT(*) AS event_count FROM event  JOIN facility ON event.facility_id = facility.id  GROUP BY facility.name HAVING event_count = (SELECT MAX(cnt) FROM (SELECT COUNT(*) AS cnt FROM event GROUP BY facility_id) AS subquery);"
"Retrieve facilities and their corresponding events with harm levels categorized as ""Severe""","SELECT facility.*, event.* FROM facility JOIN event ON facility.id = event.facility_id WHERE event.harm_level_id = 'Severe';"
"Get the facilities and their corresponding events with harm levels categorized as ""Severe""","SELECT facility.*, event.* FROM facility JOIN event ON facility.id = event.facility_id WHERE event.harm_level_id = 'Severe';"
Retrieve events and their corresponding facilities ordered by the creation date in descending order,"SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2  FROM event   JOIN facility ON event.facility_id = facility.id ORDER BY event.created_at DESC;"
Get the events and their corresponding facilities ordered by the creation date in descending order,"SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2   FROM event  JOIN facility ON event.facility_id = facility.id ORDER BY event.created_at DESC;"
Retrieve all facilities along with the total number of events associated with each facility,"SELECT facility.*, COUNT(event.id) AS event_count FROM facility  LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id;"
Get all facilities along with the total number of events associated with each facility,"SELECT facility.*, COUNT(event.id) AS event_count FROM facility LEFT JOIN event ON facility.id = event.facility_id;"
"Retrieve the count of events for each facility, ordered by the event count in descending order","SELECT facility.name, COUNT(event.id) AS event count  FROM facility LEFT JOIN event ON facility.id = event.facility_id  GROUP BY facility.id ORDER BY event_count DESC;"
"Get  the count of events for each facility, ordered by the event count in descending order:","SELECT facility.name, COUNT(event.id) AS event_count FROM facility LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id  ORDER BY event_count DESC;"
Retrieve facilities that have at least one event where the harm level is severe,SELECT facility.* FROM facility  JOIN event ON facility.id = event.facility_id  WHERE event.harm_level_id = 'Severe';"
Get the facilities that have at least one event with a specific harm level,SELECT facility.* FROM facility  JOIN event ON facility.id = event.facility_id  WHERE event.harm_level_id = 'Severe';"
Retrieve facilities and their corresponding events that are still open,"SELECT facility.*, event.* FROM facility JOIN event ON facility.id = event.facility_id  WHERE event.is_open = true;"
Get the facilities and their corresponding events that are still open,"SELECT facility.*, event.* FROM facility JOIN event  ON facility.id = event.facility_id WHERE event.is_open = true;"
Retrieve the average number of events per facility,"SELECT AVG(event_count) AS average_events_per_facility FROM (SELECT facility.id, COUNT(event.id) AS event_count  FROM facility LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id) AS subquery;"
Get  the average number of events per facility,"SELECT AVG(event_count) AS average_events_per_facility FROM (SELECT facility.id, COUNT(event.id) AS event_count  FROM facility LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id) AS subquery;"
Retrieve facilities that have no associated events,SELECT facility.* FROM facility LEFT JOIN event ON facility.id = event.facility_id WHERE event.id IS NULL;"
Get the facilities that have no associated events,SELECT facility.* FROM facility LEFT JOIN event ON facility.id = event.facility_id WHERE event.id IS NULL;"
"Retrieve the total count of events for each facility, including facilities with no events","SELECT facility.*, COUNT(event.id) AS event_count FROM facility LEFT JOIN event ON facility.id = event.facility_id GROUP BY facility.id;"
"Retrieve the total count of events for each facility, including facilities with no events","SELECT facility.*, COUNT(event.id) AS event_count FROM facility LEFT JOIN event ON facility.id = event.facility_id  GROUP BY  facility.id;"
"Retrieve events with their corresponding facility details, sorted by the creation date in descending order","SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2  FROM event   JOIN facility ON event.facility_id = facility.id   ORDER BY event.created_at DESC;"
"Get the events with their corresponding facility details, sorted by the creation date in descending order","SELECT event.*, facility.name AS facility_name, facility.address1, facility.address2  FROM event   JOIN facility ON event.facility_id = facility.id   ORDER BY event.created_at DESC;"
Retrieve the facility with the highest number of events,SELECT facility.* FROM facility JOIN event ON facility.id = event.facility_id GROUP BY facility.id ORDER BY COUNT(event.id) DESC LIMIT 1;"
Get the facility with the highest number of events,SELECT facility.* FROM facility JOIN event ON facility.id = event.facility_id GROUP BY facility.id ORDER BY COUNT(event.id) DESC LIMIT 1;"
Retrieve facilities that have more than a 10 number of events,SELECT facility.* FROM facility JOIN event ON facility.id = event.facility_id  GROUP BY facility.id HAVING COUNT(event.id) > 10;"
Get the facilities that have more than a certain number of events,SELECT facility.* FROM facility JOIN event ON facility.id = event.facility_id  GROUP BY facility.id HAVING COUNT(event.id) > 10;"
Get  the facility with the oldest event,SELECT facility.* FROM facility  JOIN event ON facility.id = event.facility_id ORDER BY event.created_at ASC LIMIT 1;"
Retrieve facilities with no associated events,SELECT facility.* FROM facility LEFT JOIN event ON facility.id = event.facility_id  WHERE event.id IS NULL;"
Get the facilities with no associated events,SELECT facility.* FROM facility LEFT JOIN event ON facility.id = event.facility_id  WHERE event.id IS NULL;"
"Retrieve facilities and their corresponding events, sorted by facility name in ascending order","SELECT facility.*, event.* FROM facility LEFT JOIN event ON facility.id = event.facility_id   ORDER BY facility.name ASC;"
"Get facilities and their corresponding events, sorted by facility name in ascending order","SELECT facility.*, event.* FROM facility LEFT JOIN event ON facility.id = event.facility_id   ORDER BY facility.name ASC;"
"Retrieve the total count of events for each facility, sorted in descending order of event count","SELECT facility.name, COUNT(event.id) AS event_count  FROM facility  LEFT JOIN event ON facility.id = event.facility_id  GROUP BY facility.id ORDER BY event_count DESC;"
"Get the total count of events for each facility, sorted in descending order of event count","SELECT facility.name, COUNT(event.id) AS event_count  FROM facility  LEFT JOIN event ON facility.id = event.facility_id  GROUP BY facility.id ORDER BY event_count DESC;"
Retrieve the description for the event with id 1:,"SELECT description FROM event WHERE id = 1;"
Retrieve the facility ID for the event with id 2:,"SELECT facility_id FROM event WHERE id = 2;"
Retrieve the user ID and event type for the event with id 3:,"SELECT user_id, event_type FROM event WHERE id = 3;"
Retrieve the created timestamp for the event with id 4:,"SELECT created_at FROM event WHERE id = 4;"
Retrieve the updated timestamp and event status (is_open) for the event with id 5:,"SELECT updated_at, is_open FROM event WHERE id = 5;"
Retrieve the closed timestamp and description for the event with id 6:,"SELECT closed_at, description FROM event WHERE id = 6;"
Retrieve all columns for the event with id 7:,"SELECT * FROM event WHERE id = 7;"
Retrieve the facility ID and user ID for the event with id 8:,"SELECT facility_id, user_id FROM event WHERE id = 8;"
Retrieve the description and event type for the event with id 9:,"SELECT description, event_type FROM event WHERE id = 9;"
Retrieve the created timestamp and event status (is_open) for the event with id 10:,"SELECT created_at, is_open FROM event WHERE id = 10;"
Retrieve the updated timestamp and closed timestamp for the event with id 11:,"SELECT updated_at, closed_at FROM event WHERE id = 11;"
Retrieve the user ID for the event with id 12:,"SELECT user_id FROM event WHERE id = 12;"
Retrieve the description and facility ID for the event with id 13:,"SELECT description, facility_id FROM event WHERE id = 13;"
Retrieve the created timestamp and event type for the event with id 14:,"SELECT created_at, event_type FROM event WHERE id = 14;"
Retrieve the updated timestamp and event status (is_open) for the event with id 15:,"SELECT updated_at, is_open FROM event WHERE id = 15;"
Retrieve all columns for the event with id 16:,"SELECT * FROM event WHERE id = 16;"
Retrieve the facility ID and user ID for the event with id 17:,"SELECT facility_id, user_id FROM event WHERE id = 17;"
Retrieve the description and event type for the event with id 18:,"SELECT description, event_type FROM event WHERE id = 18;"
Retrieve the created timestamp and event status (is_open) for the event with id 19:,"SELECT created_at, is_open FROM event WHERE id = 19;"
Retrieve the updated timestamp and closed timestamp for the event with id 20,"SELECT updated_at, closed_at FROM event WHERE id = 20;"
Retrieve the user ID for the event with id 21:,"SELECT user_id FROM event WHERE id = 21;"
Retrieve the description and facility ID for the event with id 22:,"SELECT description, facility_id FROM event WHERE id = 22;"
Retrieve the created timestamp and event type for the event with id 23:,"SELECT created_at, event_type FROM event WHERE id = 23;"
Retrieve the updated timestamp and event status (is_open) for the event with id 24:,"SELECT updated_at, is_open FROM event WHERE id = 24;"
Retrieve all columns for the event with id 25:,"SELECT * FROM event WHERE id = 25;"
Retrieve the facility ID and user ID for the event with id 26,"SELECT facility_id, user_id FROM event WHERE id = 26;"
Retrieve the description and event type for the event with id 27:,"SELECT description, event_type FROM event WHERE id = 27;"
Retrieve the created timestamp and event status (is_open) for the event with id 28:,"SELECT created_at, is_open FROM event WHERE id = 28;"
Retrieve the updated timestamp and closed timestamp for the event with id 29:,"SELECT updated_at, closed_at FROM event WHERE id = 29;"
Retrieve the user ID for the event with id 30:,"SELECT user_id FROM event WHERE id = 30;"
Retrieve the description and facility ID for the event with id 31:,"SELECT description, facility_id FROM event WHERE id = 31;"
Retrieve the updated timestamp and event status (is_open) for the event with id 33:,"SELECT updated_at, is_open FROM event WHERE id = 33;"
Retrieve all columns for the event with id 34:,"SELECT * FROM event WHERE id = 34;"
Retrieve the description and event type for the event with id 36:,"SELECT description, event_type FROM event WHERE id = 36;"
Retrieve the created timestamp and event status (is_open) for the event with id 37:,"SELECT created_at, is_open FROM event WHERE id = 37;"
Retrieve the updated timestamp and closed timestamp for the event with id 38:,"SELECT updated_at, closed_at FROM event WHERE id = 38;"
Retrieve the user ID for the event with id 39:,"SELECT user_id FROM event WHERE id = 39;"
Retrieve the description and facility ID for the event with id 40:,"SELECT description, facility_id FROM event WHERE id = 40;"
Retrieve the created timestamp and event type for the event with id 41:,"SELECT created_at, event_type FROM event WHERE id = 41;"
Retrieve the updated timestamp and event status (is_open) for the event with id 42:,"SELECT updated_at, is_open FROM event WHERE id = 42;"
Retrieve all columns for the event with id 43:,"SELECT * FROM event WHERE id = 43;"
Retrieve the facility ID and user ID for the event with id 44:,"SELECT facility_id, user_id FROM event WHERE id = 44;"
Retrieve the description and event type for the event with id 45:,"SELECT description, event_type FROM event WHERE id = 45;"
Retrieve the created timestamp and event status (is_open) for the event with id 46:,"SELECT created_at, is_open FROM event WHERE id = 46;"
Retrieve the updated timestamp and closed timestamp for the event with id 47:,"SELECT updated_at, closed_at FROM event WHERE id = 47;"
Retrieve the user ID for the event with id 48,"SELECT user_id FROM event WHERE id = 48;"
Retrieve the description and facility ID for the event with id 49:,"SELECT description, facility_id FROM event WHERE id = 49;"
Retrieve the created timestamp and event type for the event with id 50:,"SELECT created_at, event_type FROM event WHERE id = 50;"
"Retrieve the ID for the event with the description ""Event A"":","SELECT id FROM event WHERE description = 'Event A';"
"Retrieve the facility ID for the event with the description ""Conference"":","SELECT facility_id FROM event WHERE description = 'Conference';"
"Retrieve the user ID and event type for the event with the description ""Meeting"":","SELECT user_id, event_type FROM event WHERE description = 'Meeting';"
"Retrieve the created timestamp for the event with the description ""Training"":","SELECT created_at FROM event WHERE description = 'Training';"
"Retrieve the updated timestamp and event status (is_open) for the event with the description ""Workshop"":","SELECT updated_at, is_open FROM event WHERE description = 'Workshop';"
"Retrieve all columns for the event with description ""Event 7"":","SELECT * FROM event WHERE description = 'Event 7';"
"Retrieve the facility ID and user ID for the event with description ""Seminar"":","SELECT facility_id, user_id FROM event WHERE description = 'Seminar';"
"Retrieve the event type for the event with description ""Team Building"":","SELECT event_type FROM event WHERE description = 'Team Building';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Product Launch"":","SELECT created_at, is_open FROM event WHERE description = 'Product Launch';"
"Retrieve the updated timestamp and closed timestamp for the event with description ""Networking Event"":","SELECT updated_at, closed_at FROM event WHERE description = 'Networking Event';"
"Retrieve the user ID for the event with description ""Conference Call"":","SELECT user_id FROM event WHERE description = 'Conference Call';"
"Retrieve the facility ID and event type for the event with description ""Training Workshop"":","SELECT facility_id, event_type FROM event WHERE description = 'Training Workshop';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Team Meeting"":","SELECT created_at, is_open FROM event WHERE description = 'Team Meeting';"
"Retrieve the updated timestamp and closed timestamp for the event with description ""Product Demo"":","SELECT updated_at, closed_at FROM event WHERE description = 'Product Demo';"
"Retrieve all columns for the event with description ""Event 16"":","SELECT * FROM event WHERE description = 'Event 16';"
"Retrieve the facility ID and user ID for the event with description ""Workshop Session"":","SELECT facility_id, user_id FROM event WHERE description = 'Workshop Session';"
"Retrieve the event type for the event with description ""Lecture"":","SELECT event_type FROM event WHERE description = 'Lecture';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Conference Session"":","SELECT created_at, is_open FROM event WHERE description = 'Conference Session';"
"Retrieve the updated timestamp and closed timestamp for the event with description ""Product Training"":","SELECT updated_at, closed_at FROM event WHERE description = 'Product Training';"
"Retrieve the user ID for the event with description ""Webinar"":","SELECT user_id FROM event WHERE description = 'Webinar';"
"Retrieve the facility ID and event type for the event with description ""Presentation"":","SELECT facility_id, event_type FROM event WHERE description = 'Presentation';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Conference Workshop""","SELECT created_at, is_open FROM event WHERE description = 'Conference Workshop';"
"Retrieve the updated timestamp and closed timestamp for the event with description ""Panel Discussion"":","SELECT updated_at, closed_at FROM event WHERE description = 'Panel Discussion';"
"Retrieve all columns for the event with description ""Event 25"":","SELECT * FROM event WHERE description = 'Event 25';"
"Retrieve the facility ID and user ID for the event with description ""Training Session"":","SELECT facility_id, user_id FROM event WHERE description = 'Training Session';"
"Retrieve the event type for the event with description ""Workshop"":","SELECT event_type FROM event WHERE description = 'Workshop';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Meeting"":","SELECT created_at, is_open FROM event WHERE description = 'Meeting';"
"Retrieve the updated timestamp and closed timestamp for the event with description ""Conference"":","SELECT updated_at, closed_at FROM event WHERE description = 'Conference';"
"Retrieve the user ID for the event with description ""Seminar"":","SELECT user_id FROM event WHERE description = 'Seminar';"
"Retrieve the facility ID and event type for the event with description ""Team Building"":","SELECT facility_id, event_type FROM event WHERE description = 'Team Building';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Product Launch"":","SELECT created_at, is_open FROM event WHERE description = 'Product Launch';"
"Retrieve the updated timestamp and closed timestamp for the event with description ""Networking Event""","SELECT updated_at, closed_at FROM event WHERE description = 'Networking Event';"
"Retrieve all columns for the event with description ""Event 34"":","SELECT * FROM event WHERE description = 'Event 34';"
"Retrieve the facility ID and user ID for the event with description ""Conference Call"":","SELECT facility_id, user_id FROM event WHERE description = 'Conference Call';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Team Meeting"":","SELECT created_at, is_open FROM event WHERE description = 'Team Meeting';"
"Retrieve the updated timestamp and closed timestamp for the event with description ""Product Demo"":","SELECT updated_at, closed_at FROM event WHERE description = 'Product Demo';"
"Retrieve the user ID for the event with description ""Event 39"":","SELECT user_id FROM event WHERE description = 'Event 39';"
"Retrieve the facility ID and event type for the event with description ""Workshop Session"":","SELECT facility_id, event_type FROM event WHERE description = 'Workshop Session';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Lecture"":","SELECT created_at, is_open FROM event WHERE description = 'Lecture';"
"Retrieve the updated timestamp and closed timestamp for the event with description ""Conference Session"":","SELECT updated_at, closed_at FROM event WHERE description = 'Conference Session';"
"Retrieve all columns for the event with description ""Event 43"":","SELECT * FROM event WHERE description = 'Event 43';"
"Retrieve the facility ID and user ID for the event with description ""Product Training"":","SELECT facility_id, user_id FROM event WHERE description = 'Product Training';"
"Retrieve the event type for the event with description ""Webinar"":","SELECT event_type FROM event WHERE description = 'Webinar';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Presentation"":","SELECT created_at, is_open FROM event WHERE description = 'Presentation';"
"Retrieve the updated timestamp and closed timestamp for the event with description ""Conference Workshop"":","SELECT updated_at, closed_at FROM event WHERE description = 'Conference Workshop';"
"Retrieve the user ID for the event with description ""Panel Discussion"":","SELECT user_id FROM event WHERE description = 'Panel Discussion';"
"Retrieve the facility ID and event type for the event with description ""Event 49"":","SELECT facility_id, event_type FROM event WHERE description = 'Event 49';"
"Retrieve the created timestamp and event status (is_open) for the event with description ""Training Session"":","SELECT created_at, is_open FROM event WHERE description = 'Training Session';"
Retrieve the ID for events with event_type 1,"SELECT id FROM event WHERE event_type = 1;"
Retrieve the description for events with event_type 2,"SELECT description FROM event WHERE event_type = 2;"
Retrieve the facility ID and user ID for events with event_type 3:,"SELECT facility_id, user_id FROM event WHERE event_type = 3;"
Retrieve the created timestamp for events with event_type 4:,"SELECT created_at FROM event WHERE event_type = 4;"
Retrieve the updated timestamp and event status (is_open) for events with event_type 5,"SELECT updated_at, is_open FROM event WHERE event_type = 5;"
Retrieve the closed timestamp and ID for events with event_type 6:,"SELECT closed_at, id FROM event WHERE event_type = 6;"
Retrieve all columns for events with event_type 7:,"SELECT * FROM event WHERE event_type = 7;"
Retrieve the description for events with event_type 9:,"SELECT description FROM event WHERE event_type = 9;"
Retrieve the created timestamp and event status (is_open) for events with event_type 10,"SELECT created_at, is_open FROM event WHERE event_type = 10;"
Retrieve the updated timestamp and closed timestamp for events with event_type 11:,"SELECT updated_at, closed_at FROM event WHERE event_type = 11;"
Retrieve the user ID for events with event_type 12:,"SELECT user_id FROM event WHERE event_type = 12;"
Retrieve the facility ID and description for events with event_type 13,"SELECT facility_id, description FROM event WHERE event_type = 13;"
Retrieve the created timestamp and event status (is_open) for events with event_type 14:,"SELECT created_at, is_open FROM event WHERE event_type = 14;"
Retrieve the updated timestamp and closed timestamp for events with event_type 15:,"SELECT updated_at, closed_at FROM event WHERE event_type = 15;"
Retrieve all columns for events with event_type 16:,"SELECT * FROM event WHERE event_type = 16;"
Retrieve the facility ID and user ID for events with event_type 17:,"SELECT facility_id, user_id FROM event WHERE event_type = 17;"
Retrieve the description for events with event_type 18:,"SELECT description FROM event WHERE event_type = 18;"
Retrieve the created timestamp and event status (is_open) for events with event_type 19:,"SELECT created_at, is_open FROM event WHERE event_type = 19;"
Retrieve the updated timestamp and closed timestamp for events with event_type 20:,"SELECT updated_at, closed_at FROM event WHERE event_type = 20;"
Retrieve the user ID for events with event_type 21:,"SELECT user_id FROM event WHERE event_type = 21;"
Retrieve the facility ID and description for events with event_type 22:,"SELECT facility_id, description FROM event WHERE event_type = 22;"
Retrieve the created timestamp and event status (is_open) for events with event_type 23,"SELECT created_at, is_open FROM event WHERE event_type = 23;"
Retrieve the updated timestamp and closed timestamp for events with event_type 24:,"SELECT updated_at, closed_at FROM event WHERE event_type = 24;"
Retrieve all columns for events with event_type 25:,"SELECT * FROM event WHERE event_type = 25;"
Retrieve the facility ID and user ID for events with event_type 26:,"SELECT facility_id, user_id FROM event WHERE event_type = 26;"
Retrieve the description for events with event_type 27:,"SELECT description FROM event WHERE event_type = 27;"
Retrieve the created timestamp and event status (is_open) for events with event_type 28:,"SELECT created_at, is_open FROM event WHERE event_type = 28;"
Retrieve the updated timestamp and closed timestamp for events with event_type 29:,"SELECT updated_at, closed_at FROM event WHERE event_type = 29;"
Retrieve the user ID for events with event_type 30:,"SELECT user_id FROM event WHERE event_type = 30;"
Retrieve the facility ID and description for events with event_type 31:","SELECT facility_id, description FROM event WHERE event_type = 31;"
Retrieve the created timestamp and event status (is_open) for events with event_type 32:,"SELECT created_at, is_open FROM event WHERE event_type = 32;"
Retrieve the updated timestamp and closed timestamp for events with event_type 33:,"SELECT updated_at, closed_at FROM event WHERE event_type = 33;"
Retrieve all columns for events with event_type 34:,"SELECT * FROM event WHERE event_type = 34;"
Retrieve the facility ID and user ID for events with event_type 35:,"SELECT facility_id, user_id FROM event WHERE event_type = 35;"
Retrieve the description for events with event_type 36:,"SELECT description FROM event WHERE event_type = 36;"
Retrieve the created timestamp and event status (is_open) for events with event_type 37:,"SELECT created_at, is_open FROM event WHERE event_type = 37;"
Retrieve the updated timestamp and closed timestamp for events with event_type 38:,"SELECT updated_at, closed_at FROM event WHERE event_type = 38;"
Retrieve the user ID for events with event_type 39:,"SELECT user_id FROM event WHERE event_type = 39;"
Retrieve the facility ID and description for events with event_type 40:,"SELECT facility_id, description FROM event WHERE event_type = 40;"
Retrieve the created timestamp and event status (is_open) for events with event_type 41:,"SELECT created_at, is_open FROM event WHERE event_type = 41;"
Retrieve the updated timestamp and closed timestamp for events with event_type 42:,"SELECT updated_at, closed_at FROM event WHERE event_type = 42;"
Retrieve all columns for events with event_type 43:,"SELECT * FROM event WHERE event_type = 43;"
Retrieve the facility ID and user ID for events with event_type 44:,"SELECT facility_id, user_id FROM event WHERE event_type = 44;"
Retrieve the description for events with event_type 45:,"SELECT description FROM event WHERE event_type = 45;"
Retrieve the created timestamp and event status (is_open) for events with event_type 46:,"SELECT created_at, is_open FROM event WHERE event_type = 46;"
Retrieve the updated timestamp and closed timestamp for events with event_type 47:","SELECT updated_at, closed_at FROM event WHERE event_type = 47;"
Retrieve the user ID for events with event_type 48:,"SELECT user_id FROM event WHERE event_type = 48;"
Retrieve the facility ID and description for events with event_type 49:,"SELECT facility_id, description FROM event WHERE event_type = 49;"
Retrieve the created timestamp and event status (is_open) for events with event_type 50,"SELECT created_at, is_open FROM event WHERE event_type = 50;"
Retrieve the ID for events created on a specific date:,"SELECT id FROM event WHERE DATE(created_at) = '2023-06-29';"
Retrieve the description for events created on a specific date,"SELECT description FROM event WHERE DATE(created_at) = '2023-06-29';"
Retrieve the facility ID and user ID for events created on a specific date:,"SELECT facility_id, user_id FROM event WHERE DATE(created_at) = '2023-06-29';"
Retrieve the event type for events created on a specific date:,"SELECT event_type FROM event WHERE DATE(created_at) = '2023-06-29';"
Retrieve the updated timestamp and event status (is_open) for events created on a specific date:,"SELECT updated_at, is_open FROM event WHERE DATE(created_at) = '2023-06-29';"
Retrieve the closed timestamp and ID for events created on a specific date:,"SELECT closed_at, id FROM event WHERE DATE(created_at) = '2023-06-29';"
Retrieve all columns for events created on a specific date:,"SELECT * FROM event WHERE DATE(created_at) = '2023-06-29';"
Retrieve the facility ID and user ID for events created on a specific date and time","SELECT facility_id, user_id FROM event WHERE created_at = '2023-06-29 15:30:00';"
Retrieve the description for events created in the last 24 hours:,"SELECT description FROM event WHERE created_at >= NOW() - INTERVAL 1 DAY;"
Retrieve the ID for events created in the last week,"SELECT id FROM event WHERE created_at >= NOW() - INTERVAL 1 WEEK;"
Get the data from the log table between today's date and the previous week.,"SELECT *FROM logWHERE log_date BETWEEN DATEADD(DAY, -7, CAST(GETDATE() AS DATE)) AND CAST(GETDATE() AS DATE);"
Retrieve all records from the orders table within the last 2 months.,"SELECT *FROM ordersWHERE order_date >= DATEADD(MONTH, -2, GETDATE());"
I need the records from the events table where the timestamp is between 9 PM and 9:45 PM today.,"SELECT *FROM eventsWHERE timestamp >= CAST(GETDATE() AS DATE) + CAST('21:00:00' AS TIME)AND timestamp <= CAST(GETDATE() AS DATE) + CAST('21:45:00' AS TIME);"
Show me the entries from the messages table for the past 24 hours.,"SELECT *FROM messagesWHERE message_date >= DATEADD(HOUR, -24, GETDATE());"
Get the data from the sensor readings table between yesterday at 6 AM and today at 10 AM.,"SELECT *FROM sensor_readings WHERE reading_date >= DATEADD(HOUR, -24, CAST(GETDATE() AS DATE) + CAST('06:00:00' AS TIME))AND reading_date <= CAST(GETDATE() AS DATE) + CAST('10:00:00' AS TIME);"
Retrieve the total sales amount from the transactions table for the month of May 2023.,"SELECT SUM(amount) AS total_sales_amountFROM transactionsWHERE transaction_date >= '2023-05-01' AND transaction_date <= '2023-05-31;"
"Retrieve the count of customers from the customers table.","SELECT COUNT(*) AS customer_countFROM customers;"
Get the average rating from the reviews table.,"SELECT AVG(rating) AS average_rating FROM reviews;"
Retrieve the highest salary from the employees table.,"SELECT MAX(salary) AS highest_salaryFROM employees;"
Get the minimum price from the products table.,"SELECT MIN(price) AS minimum_price FROM products;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the distinct categories from the products table.,"SELECT DISTINCT category FROM products;"
Retrieve the average age of customers from the customers table.,"SELECT AVG(age) AS average_age FROM customers;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest order date from the orders table.,"SELECT MIN(order_date) AS earliest_order_date FROM orders;"
Retrieve the earliest timestamp from the log table.,"SELECT MAX(login_timestamp) AS latest_login_timestamp FROM users;"
Get the latest post date from the posts table.,"SELECT MAX(post_date) AS latest_post_datev FROM posts;"
Retrieve the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_soldFROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table.,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Retrieve the count of orders from the orders table.,"SELECT COUNT(*) AS order_count FROM orders;"
Get the average price from the products table,"SELECT AVG(price) AS average_price FROM products;"
Retrieve the highest sales amount from the transactions table,"SELECT MAX(amount) AS highest_sales_amount FROM transactions;"
Get the minimum rating from the reviews table.,"SELECT MIN(rating) AS minimum_rating FROM reviews;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Get the distinct countries from the customers table.,"SELECT DISTINCT country FROM customers;"
Retrieve the average duration of tasks from the tasks table.,"SELECT AVG(duration) AS average_duration FROM tasks;"
Retrieve the earliest login timestamp from the users table.,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_scor FROM exams;"
Get the minimum quantity available from the inventory table.,"SELECT MIN(quantity) AS minimum_quantity FROM inventory;"
Retrieve the total expenses from the expenses table.,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific product category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_dateFROM comments;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_soldFROM salesWHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Retrieve the count of products from the products table.,"SELECT COUNT(*) AS product_count FROM products;"
Get the average quantity from the inventory table.,"SELECT AVG(quantity) AS average_quantity FROM inventory;"
Retrieve the highest revenue from the sales table.,"SELECT MAX(revenue) AS highest_revenue FROM sales;"
Get the minimum price from the products table.,"SELECT MIN(price) AS minimum_price FROM products;"
Retrieve the total cost from the expenses table.,"SELECT SUM(cost) AS total_cost FROM expenses;"
Get the distinct cities from the customers table.,"SELECT DISTINCT city FROM customers;"
Retrieve the average duration of projects from the projects table.,"SELECT AVG(duration) AS average_duration FROM projects;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest login timestamp from the users table.,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Get the total number of likes for a specific post from the likes table.,"SELECT COUNT(*) AS total_likes FROM likes WHERE post_id = <specific_post_id>;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_score FROM exams;"
Get the minimum quantity available from the inventory table.,"SELECT MIN(quantity) AS minimum_quantity FROM inventory;"
Retrieve the total expenses from the expenses table,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table.,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_date FROM comments;"
Retrieve the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table.,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Retrieve the highest sales amount from the transactions table.,"SELECT MAX(amount) AS highest_sales_amount FROM transactions;"
Get the minimum rating from the reviews table.,"SELECT MIN(rating) AS minimum_rating FROM reviews;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Get the distinct countries from the customers table.,"SELECT DISTINCT country FROM customers;"
Retrieve the average duration of tasks from the tasks table.,"SELECT AVG(duration) AS average_duration FROM tasks;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest login timestamp from the users table.,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Get the total number of comments for a specific post from the comments table.,"SELECT COUNT(*) AS total_comments FROM comments WHERE post_id = <specific_post_id>;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_score FROM exams;"
Retrieve the total expenses from the expenses table.,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table.,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_date FROM comments;"
Retrieve the average price from the products table,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the average price from the products table.,"SELECT AVG(price) AS average_priceFROM products;"
Retrieve the count of customers from the customers table.,"SELECT COUNT(*) AS customer_count FROM customers;"
Get the average rating from the reviews table.,"SELECT AVG(rating) AS average_rating FROM reviews;"
Retrieve the highest sales amount from the transactions table.,"SELECT MAX(amount) AS highest_sales_amount FROM transactions;"
Get the minimum price from the products table.,"SELECT MIN(price) AS minimum_price FROM products;"
Retrieve the total cost from the expenses table.,"SELECT SUM(cost) AS total_cost FROM expenses;"
Get the distinct cities from the customers table,"SELECT DISTINCT city FROM customers;"
Retrieve the average duration of tasks from the tasks table.,"SELECT AVG(duration) AS average_duration FROM tasks;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest login timestamp from the users table.,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Get the total number of likes for a specific post from the likes table.,"SELECT COUNT(*) AS total_likes FROM likes WHERE post_id = <specific_post_id>;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_score FROM exams;"
Get the minimum quantity available from the inventory table.,"SELECT MIN(quantity) AS minimum_quantity FROM inventory;"
Retrieve the total expenses from the expenses table.,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table.,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_date FROM comments;"
Retrieve the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table.,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the average price from the products table,"SELECT AVG(price) AS average_price FROM products;"
Retrieve the highest sales amount from the transactions table.,"SELECT MAX(amount) AS highest_sales_amount FROM transactions;"
Get the minimum rating from the reviews table.,"SELECT MIN(rating) AS minimum_rating FROM reviews;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Get the distinct countries from the customers table,"SELECT DISTINCT country FROM customers;"
Retrieve the average duration of tasks from the tasks table.,"SELECT AVG(duration) AS average_duration FROM tasks;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest login timestamp from the users table,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Get the total number of comments for a specific post from the comments table,"SELECT COUNT(*) AS total_comments FROM comments WHERE post_id = <specific_post_id>;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_score FROM exams;"
Get the minimum quantity available from the inventory table.,"SELECT MIN(quantity) AS minimum_quantity FROM inventory;"
Retrieve the total expenses from the expenses table.,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table.,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_date FROM comments;"
Retrieve the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table.,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Retrieve the count of orders placed by each customer from the orders table.,"SELECT customer_id, COUNT(*) AS order_count FROM orders GROUP BY customer_id;"
Get the average duration of tasks for each project from the tasks table.,"SELECT project_id, AVG(duration) AS average_duration FROM tasks GROUP BY project_id;"
Retrieve the total revenue generated by each category from the sales table.,"SELECT category, SUM(revenue) AS total_revenue FROM sales GROUP BY category;"
Get the minimum and maximum age of customers from the customers table,"SELECT MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM customers;"
Retrieve the total profit for each year from the sales table,"SELECT YEAR(sale_date) AS sales_year, SUM(profit) AS total_profit FROM sales GROUP BY YEAR(sale_date);"
Get the average price of products in each category from the products table,"SELECT category, AVG(price) AS average_price FROM products GROUP BY category;"
Retrieve the count of logins made by each user from the login table.,"SELECT user_id, COUNT(*) AS login_count FROM login GROUP BY user_id;"
Get the minimum and maximum rating for each product from the reviews table,"SELECT product_id, MIN(rating) AS minimum_rating, MAX(rating) AS maximum_rating FROM reviews GROUP BY product_id;"
Retrieve the total quantity sold for each product from the sales table,"SELECT product_id, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id;"
Get the average salary for each department from the employees table.,"SELECT department, AVG(salary) AS average_salary FROM employees GROUP BY department;"
Retrieve the count of likes received for each post from the likes table.,"SELECT post_id, COUNT(*) AS like_count FROM likes GROUP BY post_id;"
Get the minimum and maximum price for each category from the products table.,"SELECT category, MIN(price) AS minimum_price, MAX(price) AS maximum_price FROM products GROUP BY category;"
Retrieve the total revenue for each month from the sales table.,"SELECT YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(revenue) AS total_revenue FROM sales GROUP BY YEAR(sale_date), MONTH(sale_date);"
Get the average rating for each product from the reviews table.,"SELECT product_id, AVG(rating) AS average_rating FROM reviews GROUP BY product_id;"
Retrieve the count of comments posted on each post from the comments table.,"SELECT post_id, COUNT(*) AS comment_count FROM comments GROUP BY post_id;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Retrieve the count of comments posted on each post from the comments table.,"SELECT post_id, COUNT(*) AS comment_count FROM comments GROUP BY post_id;"
Get the minimum and maximum duration of tasks for each project from the tasks table.,"SELECT project_id, MIN(duration) AS minimum_duration, MAX(duration) AS maximum_duration FROM tasks GROUP BY project_id;"
Retrieve the total revenue for each category and year from the sales table.,"SELECT category, YEAR(sale_date) AS sales_year, SUM(revenue) AS total_revenue FROM sales GROUP BY category, YEAR(sale_date);"
Get the average salary for each job title from the employees table.,"SELECT job_title, AVG(salary) AS average_salary FROM employees GROUP BY job_title;"
Retrieve the count of messages sent by each user from the messages table.,"SELECT sender_id, COUNT(*) AS message_count FROM messages GROUP BY sender_id;"
Get the minimum and maximum age of employees for each department from the employees table.,"SELECT department, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM employees GROUP BY department;"
Retrieve the total quantity sold for each product and month from the sales table.,"SELECT product_id, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id, YEAR(sale_date), MONTH(sale_date);"
Get the average rating for each product and category from the reviews table.,"SELECT product_id, category, AVG(rating) AS average_rating FROM reviews GROUP BY product_id, category;"
Retrieve the count of orders placed by each customer and year from the orders table.,"SELECT customer_id, YEAR(order_date) AS order_year, COUNT(*) AS order_count FROM orders GROUP BY customer_id, YEAR(order_date);"
Get the minimum and maximum price for each brand from the products table.,"SELECT brand, MIN(price) AS minimum_price, MAX(price) AS maximum_price FROM products GROUP BY brand;"
Retrieve the total revenue for each category and month from the sales table.,"SELECT category, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(revenue) AS total_revenue FROM sales GROUP BY category, YEAR(sale_date), MONTH(sale_date);"
Get the average salary for each department and gender from the employees table.,"SELECT department, gender, AVG(salary) AS average_salary FROM employees GROUP BY department, gender;"
Retrieve the count of likes received for each post and month from the likes table.,"SELECT post_id, YEAR(like_date) AS like_year, MONTH(like_date) AS like_month, COUNT(*) AS like_count FROM likes GROUP BY post_id, YEAR(like_date), MONTH(like_date);"
Get the minimum and maximum rating for each product and category from the reviews table.,"SELECT product_id, category, MIN(rating) AS minimum_rating, MAX(rating) AS maximum_rating FROM reviews GROUP BY product_id, category;"
Retrieve the total quantity sold for each product and year from the sales table.,"SELECT product_id, YEAR(sale_date) AS sales_year, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id, YEAR(sale_date);"
Get the average duration of tasks for each project and employee from the tasks table.,"SELECT project_id, employee_id, AVG(duration) AS average_duration FROM tasks GROUP BY project_id, employee_id;"
Retrieve the count of logins made by each user and month from the login table.,"SELECT user_id, YEAR(login_timestamp) AS login_year, MONTH(login_timestamp) AS login_month, COUNT(*) AS login_count FROM login GROUP BY user_id, YEAR(login_timestamp), MONTH(login_timestamp);"
Get the minimum and maximum price for each category and brand from the products table.,"SELECT category, brand, MIN(price) AS minimum_price, MAX(price) AS maximum_price FROM products GROUP BY category, brand;"
Retrieve the total revenue for each month and year from the sales table.,"SELECT YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(revenue) AS total_revenue FROM sales GROUP BY YEAR(sale_date), MONTH(sale_date);"
Get the average rating for each product and brand from the reviews table.,"SELECT product_id, brand, AVG(rating) AS average_rating FROM reviews GROUP BY product_id, brand;"
Retrieve the count of comments posted on each post and month from the comments table,"SELECT post_id, YEAR(comment_date) AS comment_year, MONTH(comment_date) AS comment_month, COUNT(*) AS comment_count FROM comments GROUP BY post_id, YEAR(comment_date), MONTH(comment_date);"
Get the minimum and maximum duration of tasks for each project and employee from the tasks table.,"SELECT project_id, employee_id, MIN(duration) AS minimum_duration, MAX(duration) AS maximum_duration FROM tasks GROUP BY project_id, employee_id;"
Retrieve the total revenue for each category and year from the sales table.,"SELECT category, YEAR(sale_date) AS sales_year, SUM(revenue) AS total_revenue FROM sales GROUP BY category, YEAR(sale_date);"
Get the average salary for each department and job title from the employees table.,"SELECT department, job_title, AVG(salary) AS average_salary FROM employees GROUP BY department, job_title;"
Retrieve the count of messages sent by each user and month from the messages table,"SELECT sender_id, YEAR(message_date) AS message_year, MONTH(message_date) AS message_month, COUNT(*) AS message_count FROM messages GROUP BY sender_id, YEAR(message_date), MONTH(message_date);"
Get the minimum and maximum age of employees for each department and gender from the employees table.,"SELECT department, gender, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM employees GROUP BY department, gender;"
Retrieve the total quantity sold for each product and month and year from the sales table,"SELECT product_id, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id, YEAR(sale_date), MONTH(sale_date);"
Get the average rating for each product and category and brand from the reviews table.,"SELECT product_id, category, brand, AVG(rating) AS average_rating FROM reviews GROUP BY product_id, category, brand;"
Retrieve the count of orders placed by each customer and year and month from the orders table.,"SELECT customer_id, YEAR(order_date) AS order_year, MONTH(order_date) AS order_month, COUNT(*) AS order_count FROM orders GROUP BY customer_id, YEAR(order_date), MONTH(order_date);"
Get the minimum and maximum price for each brand and category from the products table.,"SELECT brand, category, MIN(price) AS minimum_price, MAX(price) AS maximum_price FROM products GROUP BY brand, category;"
Retrieve the total revenue for each category and month and year from the sales table.,"SELECT category, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(revenue) AS total_revenue FROM sales GROUP BY category, YEAR(sale_date), MONTH(sale_date);"
Get the average salary for each department and gender and job title from the employees table.,"SELECT department, gender, job_title, AVG(salary) AS average_salary FROM employees GROUP BY department, gender, job_title;"
Retrieve the count of likes received for each post and month and year from the likes table.,"SELECT post_id, YEAR(like_date) AS like_year, MONTH(like_date) AS like_month, COUNT(*) AS like_count FROM likes GROUP BY post_id, YEAR(like_date), MONTH(like_date);"
Get the minimum and maximum rating for each product and category and brand from the reviews table.,"SELECT product_id, category, brand, MIN(rating) AS minimum_rating, MAX(rating) AS maximum_rating FROM reviews GROUP BY product_id, category, brand;"
Retrieve the total quantity sold for each product and year and month from the sales table.,"SELECT product_id, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id, YEAR(sale_date), MONTH(sale_date);"
Get the average duration of tasks for each project and employee and category from the tasks table,"SELECT project_id, employee_id, category, AVG(duration) AS average_duration FROM tasks GROUP BY project_id, employee_id, category;"
"What are the events with ID 1?","SELECT * FROM event WHERE id = 1"
"What are the events with ID 2?","SELECT * FROM event WHERE id = 2"
"What are the events with ID 3?","SELECT * FROM event WHERE id = 3"
"What are the events with ID 4?","SELECT * FROM event WHERE id = 4"
"What are the events with ID 5?","SELECT * FROM event WHERE id = 5"
"What are the events with ID 6?","SELECT * FROM event WHERE id = 6"
"What are the events with ID 7?","SELECT * FROM event WHERE id = 7"
"What are the events with ID 8?","SELECT * FROM event WHERE id = 8"
"What are the events with ID 9?","SELECT * FROM event WHERE id = 9"
"What are the events with ID 10?","SELECT * FROM event WHERE id = 10"
"What are the events with description 'Event 1'?","SELECT * FROM event WHERE description = 'Event 1'"
"What are the events with description 'Event 2'?","SELECT * FROM event WHERE description = 'Event 2'"
"What are the events with description 'Event 3'?","SELECT * FROM event WHERE description = 'Event 3'"
"What are the events with description 'Event 4'?","SELECT * FROM event WHERE description = 'Event 4'"
"What are the events with description 'Event 5'?","SELECT * FROM event WHERE description = 'Event 5'"
"What are the events with description 'Event 6'?","SELECT * FROM event WHERE description = 'Event 6'"
"What are the events with description 'Event 7'?","SELECT * FROM event WHERE description = 'Event 7'"
"What are the events with description 'Event 8'?","SELECT * FROM event WHERE description = 'Event 8'"
"What are the events with description 'Event 9'?","SELECT * FROM event WHERE description = 'Event 9'"
"What are the events with description 'Event 10'?","SELECT * FROM event WHERE description = 'Event 10'"
"What are the events related to facility ID 1?","SELECT * FROM event WHERE facility_id = 1"
"What are the events related to facility ID 2?","SELECT * FROM event WHERE facility_id = 2"
"What are the events related to facility ID 3?","SELECT * FROM event WHERE facility_id = 3"
"What are the events related to facility ID 4?","SELECT * FROM event WHERE facility_id = 4"
"What are the events related to facility ID 5?","SELECT * FROM event WHERE facility_id = 5"
"What are the events related to facility ID 6?","SELECT * FROM event WHERE facility_id = 6"
"What are the events related to facility ID 7?","SELECT * FROM event WHERE facility_id = 7"
"What are the events related to facility ID 8?","SELECT * FROM event WHERE facility_id = 8"
"What are the events related to facility ID 9?","SELECT * FROM event WHERE facility_id = 9"
"What are the events related to facility ID 10?","SELECT * FROM event WHERE facility_id = 10"
"What are the events created by user ID 1?","SELECT * FROM event WHERE user_id = 1"
"What are the events created by user ID 2?","SELECT * FROM event WHERE user_id = 2"
"What are the events created by user ID 3?","SELECT * FROM event WHERE user_id = 3"
"What are the events created by user ID 4?","SELECT * FROM event WHERE user_id = 4"
"What are the events created by user ID 5?","SELECT * FROM event WHERE user_id = 5"
"What are the events created by user ID 6?","SELECT * FROM event WHERE user_id = 6"
"What are the events created by user ID 7?","SELECT * FROM event WHERE user_id = 7"
"What are the events created by user ID 8?","SELECT * FROM event WHERE user_id = 8"
"What are the events created by user ID 9?","SELECT * FROM event WHERE user_id = 9"
"What are the events created by user ID 10?","SELECT * FROM event WHERE user_id = 10"
"What are the events created in the last 2 months?","SELECT * FROM event WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 2 MONTH)"
"What are the events created in the last 2 days?","SELECT * FROM event WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 2 DAY)"
"What are the closed events?","SELECT * FROM event WHERE is_open = FALSE"
"What are the events closed by user ID 1?","SELECT * FROM event WHERE closed_by = 1"
"What are the events closed by user ID 2?","SELECT * FROM event WHERE closed_by = 2"
"What are the events closed by user ID 3?","SELECT * FROM event WHERE closed_by = 3"
"What are the events closed by user ID 4?","SELECT * FROM event WHERE closed_by = 4"
"What are the events closed by user ID 5?","SELECT * FROM event WHERE closed_by = 5"
"What are the events with harm level 1?","SELECT * FROM event WHERE harm_level_id = 1"
"What are the events with harm level 2?","SELECT * FROM event WHERE harm_level_id = 2"
"What are the events with harm level 3?","SELECT * FROM event WHERE harm_level_id = 3"
"List all near miss events generated only on facility XX.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'XX'"
"List all events generated only on facility XX.","SELECT * FROM event WHERE facility_id = 'XX'"
"List all near miss events.","SELECT * FROM event WHERE event_type_id = 'Near Miss'"
"Export the incident details for my facilities.","SELECT * FROM event WHERE event_type_id = 'Incident' AND facility_id IN ('Facility 1', 'Facility 2', 'Facility 3')"
"List all events created in the last 3 months.","SELECT * FROM event WHERE created_at >= DATE_SUB(CURRENT_TIMESTAMP, INTERVAL 3 MONTH)"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with no harm.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all near miss events generated only on facility YY.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'YY'"
"List all events generated only on facility YY.","SELECT * FROM event WHERE facility_id = 'YY'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all near miss events generated only on facility ZZ.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'ZZ'"
"List all events generated only on facility ZZ.","SELECT * FROM event WHERE facility_id = 'ZZ'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all near miss events generated only on facility AA.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'AA'"
"List all events generated only on facility AA.","SELECT * FROM event WHERE facility_id = 'AA'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all near miss events generated only on facility BB.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'BB'"
"List all events generated only on facility BB.","SELECT * FROM event WHERE facility_id = 'BB'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all near miss events generated only on facility CC.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'CC'"
"List all events generated only on facility CC.","SELECT * FROM event WHERE facility_id = 'CC'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility DD.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'DD'"
"List all events generated only on facility DD.","SELECT * FROM event WHERE facility_id = 'DD'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility EE.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'EE'"
"List all events generated only on facility EE.","SELECT * FROM event WHERE facility_id = 'EE'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all near miss events generated only on facility FF.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'FF'"
"List all events generated only on facility FF.","SELECT * FROM event WHERE facility_id = 'FF'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all near miss events generated only on facility GG.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'GG'"
"List all events generated only on facility GG.","SELECT * FROM event WHERE facility_id = 'GG'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all near miss events generated only on facility HH.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'HH'"
"List all events generated only on facility HH.","SELECT * FROM event WHERE facility_id = 'HH'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility II.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'II'"
"List all events generated only on facility II.","SELECT * FROM event WHERE facility_id = 'II'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all near miss events generated only on facility JJ.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'JJ'"
"List all events generated only on facility JJ.","SELECT * FROM event WHERE facility_id = 'JJ'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all near miss events generated only on facility KK.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'KK'"
"List all events generated only on facility KK.","SELECT * FROM event WHERE facility_id = 'KK'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility LL.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'LL'"
"List all events generated only on facility LL.","SELECT * FROM event WHERE facility_id = 'LL'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility MM.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'MM'"
"List all events generated only on facility MM.","SELECT * FROM event WHERE facility_id = 'MM'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all near miss events generated only on facility NN.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'NN'"
"List all events generated only on facility NN.","SELECT * FROM event WHERE facility_id = 'NN'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all near miss events generated only on facility OO.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'OO'"
"List all events generated only on facility OO.","SELECT * FROM event WHERE facility_id = 'OO'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all near miss events generated only on facility PP.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'PP'"
"List all events generated only on facility PP.","SELECT * FROM event WHERE facility_id = 'PP'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all near miss events generated only on facility QQ.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'QQ'"
"List all events generated only on facility QQ.","SELECT * FROM event WHERE facility_id = 'QQ'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility RR.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'RR'"
"List all events generated only on facility RR.","SELECT * FROM event WHERE facility_id = 'RR'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility SS.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'SS'"
"List all events generated only on facility SS.","SELECT * FROM event WHERE facility_id = 'SS'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all near miss events generated only on facility TT.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'TT'"
"List all events generated only on facility TT.","SELECT * FROM event WHERE facility_id = 'TT'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all near miss events generated only on facility UU.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'UU'"
"List all events generated only on facility UU.","SELECT * FROM event WHERE facility_id = 'UU'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all near miss events generated only on facility VV.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'VV'"
"List all events generated only on facility VV.","SELECT * FROM event WHERE facility_id = 'VV'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility WW.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'WW'"
"List all events generated only on facility WW.","SELECT * FROM event WHERE facility_id = 'WW'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility XX.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'XX'"
"List all events generated only on facility XX.","SELECT * FROM event WHERE facility_id = 'XX'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all near miss events generated only on facility YY.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'YY'"
"List all events generated only on facility YY.","SELECT * FROM event WHERE facility_id = 'YY'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all near miss events generated only on facility ZZ.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'ZZ'"
"List all events generated only on facility ZZ.","SELECT * FROM event WHERE facility_id = 'ZZ'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all near miss events generated only on facility AAA.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'AAA'"
"List all events generated only on facility AAA.","SELECT * FROM event WHERE facility_id = 'AAA'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility BBB.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'BBB'"
"List all events generated only on facility BBB.","SELECT * FROM event WHERE facility_id = 'BBB'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility CCC.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'CCC'"
"List all events generated only on facility CCC.","SELECT * FROM event WHERE facility_id = 'CCC'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility DDD.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'DDD'"
"List all events generated only on facility DDD.","SELECT * FROM event WHERE facility_id = 'DDD'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all near miss events generated only on facility EEE.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'EEE'"
"List all events generated only on facility EEE.","SELECT * FROM event WHERE facility_id = 'EEE'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all near miss events generated only on facility FFF.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'FFF'"
"List all events generated only on facility FFF.","SELECT * FROM event WHERE facility_id = 'FFF'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all near miss events generated only on facility GGG.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'GGG'"
"List all events generated only on facility GGG.","SELECT * FROM event WHERE facility_id = 'GGG'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility HHH.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'HHH'"
"List all events generated only on facility HHH.","SELECT * FROM event WHERE facility_id = 'HHH'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility III.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'III'"
"List all events generated only on facility III.","SELECT * FROM event WHERE facility_id = 'III'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility JJJ.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'JJJ'"
"List all events generated only on facility JJJ.","SELECT * FROM event WHERE facility_id = 'JJJ'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility KKK.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'KKK'"
"List all events generated only on facility KKK.","SELECT * FROM event WHERE facility_id = 'KKK'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility LLL.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'LLL'"
"List all events generated only on facility LLL.","SELECT * FROM event WHERE facility_id = 'LLL'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all near miss events generated only on facility MMM.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'MMM'"
"List all events generated only on facility MMM.","SELECT * FROM event WHERE facility_id = 'MMM'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all near miss events generated only on facility NNN.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'NNN'"
"List all events generated only on facility NNN.","SELECT * FROM event WHERE facility_id = 'NNN'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all near miss events generated only on facility OOO.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'OOO'"
"List all events generated only on facility OOO.","SELECT * FROM event WHERE facility_id = 'OOO'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility PPP.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'PPP'"
"List all events generated only on facility PPP.","SELECT * FROM event WHERE facility_id = 'PPP'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility QQQ.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'QQQ'"
"List all events generated only on facility QQQ.","SELECT * FROM event WHERE facility_id = 'QQQ'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility RRR.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'RRR'"
"List all events generated only on facility RRR.","SELECT * FROM event WHERE facility_id = 'RRR'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility SSS.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'SSS'"
"List all events generated only on facility SSS.","SELECT * FROM event WHERE facility_id = 'SSS'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility TTT.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'TTT'"
"List all events generated only on facility TTT.","SELECT * FROM event WHERE facility_id = 'TTT'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility UUU.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'UUU'"
"List all events generated only on facility UUU.","SELECT * FROM event WHERE facility_id = 'UUU'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility VVV.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'VVV'"
"List all events generated only on facility VVV.","SELECT * FROM event WHERE facility_id = 'VVV'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility WWW.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'WWW'"
"List all events generated only on facility WWW.","SELECT * FROM event WHERE facility_id = 'WWW'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility XXX.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'XXX'"
"List all events generated only on facility XXX.","SELECT * FROM event WHERE facility_id = 'XXX'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all near miss events generated only on facility YYY.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'YYY'"
"List all events generated only on facility YYY.","SELECT * FROM event WHERE facility_id = 'YYY'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"List all near miss events generated only on facility ZZZ.","SELECT * FROM event WHERE event_type_id = 'Near Miss' AND facility_id = 'ZZZ'"
"List all events generated only on facility ZZZ.","SELECT * FROM event WHERE facility_id = 'ZZZ'"
"List all events with harm level 'Severe Harm'.","SELECT * FROM event WHERE harm_level_id = 'Severe Harm'"
"List all events with harm level 'Mild'.","SELECT * FROM event WHERE harm_level_id = 'Mild'"
"List all events with harm level 'Death'.","SELECT * FROM event WHERE harm_level_id = 'Death'"
"List all events with harm level 'No Harm'.","SELECT * FROM event WHERE harm_level_id = 'No Harm'"
"List all events with harm level 'Unknown'.","SELECT * FROM event WHERE harm_level_id = 'Unknown'"
"List all events with harm level 'Moderate'.","SELECT * FROM event WHERE harm_level_id = 'Moderate'"
"Retrieve 3 records from the events table.","SELECT * FROM event LIMIT 3"
"Retrieve 5 records from the events table.","SELECT * FROM event LIMIT 5"
"Retrieve 10 records from the events table.","SELECT * FROM event LIMIT 10"
"Retrieve records from the events table for the past 2 days.","SELECT * FROM event WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)"
"Retrieve records from the events table for the past 7 days.","SELECT * FROM event WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY)"
"Retrieve records from the events table for the past 30 days.","SELECT * FROM event WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY)"
"Retrieve records from the events table between 15th and 17th August.","SELECT * FROM event WHERE created_at >= '2023-08-15' AND created_at <= '2023-08-17'"
"Retrieve records from the events table between 1st and 10th September.","SELECT * FROM event WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10'"
"Retrieve records from the events table between 1st January and 31st December.","SELECT * FROM event WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31'"
"Retrieve records from the events table where the timestamp is between 9 PM and 9:45 PM today.","SELECT * FROM event WHERE TIME(created_at) >= '21:00:00' AND TIME(created_at) <= '21:45:00'"
"Retrieve records from the events table where the timestamp is between 10 AM and 12 PM today.","SELECT * FROM event WHERE TIME(created_at) >= '10:00:00' AND TIME(created_at) <= '12:00:00'"
"Retrieve records from the events table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM event WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00'"
"Retrieve records from the messages table for the past 24 hours.","SELECT * FROM messages WHERE created_at >= DATE_SUB(NOW(), INTERVAL 24 HOUR)"
"Retrieve records from the messages table for the past 48 hours.","SELECT * FROM messages WHERE created_at >= DATE_SUB(NOW(), INTERVAL 48 HOUR)"
"Retrieve records from the messages table for the past 7 days.","SELECT * FROM messages WHERE created_at >= DATE_SUB(NOW(), INTERVAL 7 DAY)"
"Retrieve records from the messages table between 1st and 10th September.","SELECT * FROM messages WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10'"
"Retrieve records from the messages table between 1st January and 31st December.","SELECT * FROM messages WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31'"
"Retrieve records from the messages table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM messages WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00'"
"Retrieve records from the messages table where the timestamp is between 2 PM and 6 PM today.","SELECT * FROM messages WHERE TIME(created_at) >= '14:00:00' AND TIME(created_at) <= '18:00:00'"
"Retrieve records from the messages table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM messages WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00'"
"Retrieve records from the sensor readings table for the past 24 hours.","SELECT * FROM sensor_readings WHERE created_at >= DATE_SUB(NOW(), INTERVAL 24 HOUR)"
"Retrieve records from the sensor readings table for the past 48 hours.","SELECT * FROM sensor_readings WHERE created_at >= DATE_SUB(NOW(), INTERVAL 48 HOUR)"
"Retrieve records from the sensor readings table for the past 7 days.","SELECT * FROM sensor_readings WHERE created_at >= DATE_SUB(NOW(), INTERVAL 7 DAY)"
"Retrieve records from the sensor readings table between 1st and 10th September.","SELECT * FROM sensor_readings WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10'"
"Retrieve records from the sensor readings table between 1st January and 31st December.","SELECT * FROM sensor_readings WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31'"
"Retrieve records from the sensor readings table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM sensor_readings WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00'"
"Retrieve records from the sensor readings table where the timestamp is between 2 PM and 6 PM today.","SELECT * FROM sensor_readings WHERE TIME(created_at) >= '14:00:00' AND TIME(created_at) <= '18:00:00'"
"Retrieve records from the sensor readings table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM sensor_readings WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00'"
"Retrieve 3 records from the facility table.","SELECT * FROM facility LIMIT 3;"
"Retrieve 5 records from the facility table.","SELECT * FROM facility LIMIT 5;"
"Retrieve 10 records from the facility table.","SELECT * FROM facility LIMIT 10;"
"Retrieve records from the facility table for the past 2 days.","SELECT * FROM facility WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY);"
"Retrieve records from the facility table for the past 7 days.","SELECT * FROM facility WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY);"
"Retrieve records from the facility table for the past 30 days.","SELECT * FROM facility WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY);"
"Retrieve records from the facility table between 15th and 17th August.","SELECT * FROM facility WHERE created_at >= '2023-08-15' AND created_at <= '2023-08-17';"
"Retrieve records from the facility table between 1st and 10th September.","SELECT * FROM facility WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10';"
"Retrieve records from the facility table between 1st January and 31st December.","SELECT * FROM facility WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31';"
"Retrieve records from the facility table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM facility WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the facility table where the timestamp is between 2 PM and 6 PM today.","SELECT * FROM facility WHERE TIME(created_at) >= '14:00:00' AND TIME(created_at) <= '18:00:00';"
"Retrieve records from the facility table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM facility WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00';"
"Retrieve records from the messages table for the past 24 hours.","SELECT * FROM messages WHERE created_at >= DATE_SUB(NOW(), INTERVAL 24 HOUR);"
"Retrieve records from the messages table for the past 48 hours.","SELECT * FROM messages WHERE created_at >= DATE_SUB(NOW(), INTERVAL 48 HOUR);"
"Retrieve records from the messages table for the past 7 days.","SELECT * FROM messages WHERE created_at >= DATE_SUB(NOW(), INTERVAL 7 DAY);"
"Retrieve records from the messages table between 1st and 10th September.","SELECT * FROM messages WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10';"
"Retrieve records from the messages table between 1st January and 31st December.","SELECT * FROM messages WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31';"
"Retrieve records from the messages table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM messages WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the messages table where the timestamp is between 2 PM and 6 PM today.","SELECT * FROM messages WHERE TIME(created_at) >= '14:00:00' AND TIME(created_at) <= '18:00:00';"
"Retrieve records from the messages table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM messages WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00';"
"Retrieve 3 records from the sensor_readings table.","SELECT * FROM sensor_readings LIMIT 3;"
"Retrieve 5 records from the sensor_readings table.","SELECT * FROM sensor_readings LIMIT 5;"
"Retrieve 10 records from the sensor_readings table.","SELECT * FROM sensor_readings LIMIT 10;"
"Retrieve records from the sensor_readings table for the past 2 days.","SELECT * FROM sensor_readings WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY);"
"Retrieve records from the sensor_readings table for the past 7 days.","SELECT * FROM sensor_readings WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY);"
"Retrieve records from the sensor_readings table for the past 30 days.","SELECT * FROM sensor_readings WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY);"
"Retrieve records from the sensor_readings table between 15th and 17th August.","SELECT * FROM sensor_readings WHERE created_at >= '2023-08-15' AND created_at <= '2023-08-17';"
"Retrieve records from the sensor_readings table between 1st and 10th September.","SELECT * FROM sensor_readings WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10';"
"Retrieve records from the sensor_readings table between 1st January and 31st December.","SELECT * FROM sensor_readings WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31';"
"Retrieve records from the sensor_readings table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM sensor_readings WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the sensor_readings table where the timestamp is between 2 PM and 6 PM today.","SELECT * FROM sensor_readings WHERE TIME(created_at) >= '14:00:00' AND TIME(created_at) <= '18:00:00';"
"Retrieve records from the sensor_readings table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM sensor_readings WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00';"
"Retrieve 3 records from the facility_table.","SELECT * FROM facility_table LIMIT 3;"
"Retrieve 5 records from the facility_table.","SELECT * FROM facility_table LIMIT 5;"
"Retrieve 10 records from the facility_table.","SELECT * FROM facility_table LIMIT 10;"
"Retrieve records from the facility_table for the past 2 days.","SELECT * FROM facility_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY);"
"Retrieve records from the facility_table for the past 7 days.","SELECT * FROM facility_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY);"
"Retrieve records from the facility_table for the past 30 days.","SELECT * FROM facility_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY);"
"Retrieve records from the facility_table between 15th and 17th August.","SELECT * FROM facility_table WHERE created_at >= '2023-08-15' AND created_at <= '2023-08-17';"
"Retrieve records from the facility_table between 1st and 10th September.","SELECT * FROM facility_table WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10';"
"Retrieve records from the facility_table between 1st January and 31st December.","SELECT * FROM facility_table WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31';"
"Retrieve records from the facility_table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM facility_table WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the facility_table where the timestamp is between 2 PM and 6 PM today.","SELECT * FROM facility_table WHERE TIME(created_at) >= '14:00:00' AND TIME(created_at) <= '18:00:00';"
"Retrieve records from the facility_table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM facility_table WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00';"
"Retrieve records from the messages_table for the past 24 hours.","SELECT * FROM messages_table WHERE created_at >= DATE_SUB(NOW(), INTERVAL 24 HOUR);"
"Retrieve records from the messages_table for the past 48 hours.","SELECT * FROM messages_table WHERE created_at >= DATE_SUB(NOW(), INTERVAL 48 HOUR);"
"Retrieve records from the messages_table for the past 7 days.","SELECT * FROM messages_table WHERE created_at >= DATE_SUB(NOW(), INTERVAL 7 DAY);"
"Retrieve records from the messages_table between 1st and 10th September.","SELECT * FROM messages_table WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10';"
"Retrieve records from the messages_table between 1st January and 31st December.","SELECT * FROM messages_table WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31';"
"Retrieve records from the messages_table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM messages_table WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the messages_table where the timestamp is between 2 PM and 6 PM today.","SELECT * FROM messages_table WHERE TIME(created_at) >= '14:00:00' AND TIME(created_at) <= '18:00:00';"
"Retrieve records from the messages_table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM messages_table WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00';"
"Retrieve 3 records from the sensor_readings_table.","SELECT * FROM sensor_readings_table LIMIT 3;"
"Retrieve 5 records from the sensor_readings_table.","SELECT * FROM sensor_readings_table LIMIT 5;"
"Retrieve 10 records from the sensor_readings_table.","SELECT * FROM sensor_readings_table LIMIT 10;"
"Retrieve records from the sensor_readings_table for the past 2 days.","SELECT * FROM sensor_readings_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY);"
"Retrieve records from the sensor_readings_table for the past 7 days.","SELECT * FROM sensor_readings_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY);"
"Retrieve records from the sensor_readings_table for the past 30 days.","SELECT * FROM sensor_readings_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY);"
"Retrieve records from the sensor_readings_table between 15th and 17th August.","SELECT * FROM sensor_readings_table WHERE created_at >= '2023-08-15' AND created_at <= '2023-08-17';"
"Retrieve records from the sensor_readings_table between 1st and 10th September.","SELECT * FROM sensor_readings_table WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10';"
"Retrieve records from the sensor_readings_table between 1st January and 31st December.","SELECT * FROM sensor_readings_table WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31';"
"Retrieve records from the sensor_readings_table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM sensor_readings_table WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the sensor_readings_table where the timestamp is between 2 PM and 6 PM today.","SELECT * FROM sensor_readings_table WHERE TIME(created_at) >= '14:00:00' AND TIME(created_at) <= '18:00:00';"
"Retrieve records from the sensor_readings_table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM sensor_readings_table WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00';"
"Retrieve 7 records from the facility_table.","SELECT * FROM facility_table LIMIT 7;"
"Retrieve 15 records from the facility_table.","SELECT * FROM facility_table LIMIT 15;"
"Retrieve 20 records from the facility_table.","SELECT * FROM facility_table LIMIT 20;"
"Retrieve records from the facility_table for the past 3 days.","SELECT * FROM facility_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 DAY);"
"Retrieve records from the facility_table for the past 14 days.","SELECT * FROM facility_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 14 DAY);"
"Retrieve records from the facility_table for the past 60 days.","SELECT * FROM facility_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 60 DAY);"
"Retrieve records from the facility_table between 18th and 20th August.","SELECT * FROM facility_table WHERE created_at >= '2023-08-18' AND created_at <= '2023-08-20';"
"Retrieve records from the facility_table between 5th and 15th September.","SELECT * FROM facility_table WHERE created_at >= '2023-09-05' AND created_at <= '2023-09-15';"
"Retrieve records from the facility_table between 1st February and 28th February.","SELECT * FROM facility_table WHERE created_at >= '2023-02-01' AND created_at <= '2023-02-28';"
"Retrieve records from the facility_table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM facility_table WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the facility_table where the timestamp is between 3 PM and 6 PM today.","SELECT * FROM facility_table WHERE TIME(created_at) >= '15:00:00' AND TIME(created_at) <= '18:00:00';"
"Retrieve records from the facility_table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM facility_table WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00';"
"Retrieve 3 records from the messages_table.","SELECT * FROM messages_table LIMIT 3;"
"Retrieve 5 records from the messages_table.","SELECT * FROM messages_table LIMIT 5;"
"Retrieve 10 records from the messages_table.","SELECT * FROM messages_table LIMIT 10;"
"Retrieve records from the messages_table for the past 2 days.","SELECT * FROM messages_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY);"
"Retrieve records from the messages_table for the past 7 days.","SELECT * FROM messages_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY);"
"Retrieve records from the messages_table for the past 30 days.","SELECT * FROM messages_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY);"
"Retrieve records from the messages_table between 12th and 15th August.","SELECT * FROM messages_table WHERE created_at >= '2023-08-12' AND created_at <= '2023-08-15';"
"Retrieve records from the messages_table between 2nd and 10th September.","SELECT * FROM messages_table WHERE created_at >= '2023-09-02' AND created_at <= '2023-09-10';"
"Retrieve records from the messages_table between 1st March and 31st March.","SELECT * FROM messages_table WHERE created_at >= '2023-03-01' AND created_at <= '2023-03-31';"
"Retrieve records from the messages_table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM messages_table WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the messages_table where the timestamp is between 3 PM and 6 PM today.","SELECT * FROM messages_table WHERE TIME(created_at) >= '15:00:00' AND TIME(created_at) <= '18:00:00';"
"Retrieve records from the messages_table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM messages_table WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00';"
"Retrieve 3 records from the sensor_readings_table.","SELECT * FROM sensor_readings_table LIMIT 3;"
"Retrieve 5 records from the sensor_readings_table.","SELECT * FROM sensor_readings_table LIMIT 5;"
"Retrieve 10 records from the sensor_readings_table.","SELECT * FROM sensor_readings_table LIMIT 10;"
"Retrieve records from the sensor_readings_table for the past 2 days.","SELECT * FROM sensor_readings_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY);"
"Retrieve records from the sensor_readings_table for the past 7 days.","SELECT * FROM sensor_readings_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY);"
"Retrieve records from the sensor_readings_table for the past 30 days.","SELECT * FROM sensor_readings_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY);"
"Retrieve records from the sensor_readings_table between 12th and 15th August.","SELECT * FROM sensor_readings_table WHERE created_at >= '2023-08-12' AND created_at <= '2023-08-15';"
"Retrieve records from the sensor_readings_table between 2nd and 10th September.","SELECT * FROM sensor_readings_table WHERE created_at >= '2023-09-02' AND created_at <= '2023-09-10';"
"Retrieve records from the sensor_readings_table between 1st March and 31st March.","SELECT * FROM sensor_readings_table WHERE created_at >= '2023-03-01' AND created_at <= '2023-03-31';"
"Retrieve records from the sensor_readings_table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM sensor_readings_table WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the sensor_readings_table where the timestamp is between 3 PM and 6 PM today.","SELECT * FROM sensor_readings_table WHERE TIME(created_at) >= '15:00:00' AND TIME(created_at) <= '18:00:00';"
"Retrieve records from the sensor_readings_table where the timestamp is between 6 PM and 9 PM today.","SELECT * FROM sensor_readings_table WHERE TIME(created_at) >= '18:00:00' AND TIME(created_at) <= '21:00:00';"
"Retrieve 2 records from the facility_table.","SELECT * FROM facility_table LIMIT 2;"
"Retrieve 4 records from the facility_table.","SELECT * FROM facility_table LIMIT 4;"
"Retrieve 8 records from the facility_table.","SELECT * FROM facility_table LIMIT 8;"
"Retrieve records from the facility_table for the past 1 day.","SELECT * FROM facility_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY);"
"Retrieve records from the facility_table for the past 7 days.","SELECT * FROM facility_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 7 DAY);"
"Retrieve records from the facility_table for the past 30 days.","SELECT * FROM facility_table WHERE created_at >= DATE_SUB(CURRENT_DATE(), INTERVAL 30 DAY);"
"Retrieve records from the facility_table between 10th and 15th August.","SELECT * FROM facility_table WHERE created_at >= '2023-08-10' AND created_at <= '2023-08-15';"
"Retrieve records from the facility_table between 1st and 10th September.","SELECT * FROM facility_table WHERE created_at >= '2023-09-01' AND created_at <= '2023-09-10';"
"Retrieve records from the facility_table between 1st January and 31st December.","SELECT * FROM facility_table WHERE created_at >= '2023-01-01' AND created_at <= '2023-12-31';"
"Retrieve records from the facility_table where the timestamp is between 9 AM and 12 PM today.","SELECT * FROM facility_table WHERE TIME(created_at) >= '09:00:00' AND TIME(created_at) <= '12:00:00';"
"Retrieve records from the facility_table where the timestamp is between 1 PM and 4 PM today.","SELECT * FROM facility_table WHERE TIME(created_at) >= '13:00:00' AND TIME(created_at) <= '16:00:00';"
"Retrieve records from the facility_table where the timestamp is between 5 PM and 8 PM today.","SELECT * FROM facility_table WHERE TIME(created_at) >= '17:00:00' AND TIME(created_at) <= '20:00:00';"
"Retrieve 2 records from the messages_table.","SELECT * FROM messages_table LIMIT 2;"
"Retrieve 4 records from the messages_table.","SELECT * FROM messages_table LIMIT 4;"
"Retrieve 8 records from the messages_table.","SELECT * FROM messages_table LIMIT 8;"
Show all hazards with description containing the word 'safety',SELECT * FROM hazards WHERE description LIKE '%safety%';
List all pharmacies with organization_id 'OrgXYZ' or countries_id 'USA',SELECT * FROM pharmacies WHERE organization_id = 'OrgXYZ' OR countries_id = 'USA';
Get the events with harmt less than 100 and is_open set to FALSE,SELECT * FROM events WHERE harmt < 100 AND is_open = FALSE;
Retrieve all users with type 'Employee' and active set to TRUE,SELECT * FROM users WHERE type = 'Employee' AND active = TRUE;
Find staff members with the full_name 'Jane Doe' or locum_full_name 'John Smith',SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' OR locum_full_name = 'John Smith';
Get the assets with active status and asset_type_id 'AT007',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT007';
Retrieve events with harmt greater than 100 or is_open set to TRUE,SELECT * FROM events WHERE harmt > 100 OR is_open = TRUE;
List all users from organization_id 'Org789' and type 'Employee',SELECT * FROM users WHERE organization_id = 'Org789' AND type = 'Employee';
Get the pharmacies with created_at after '2023-01-01' and updated_at before '2023-06-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND updated_at < '2023-06-01';
Retrieve the organizations with trial_ends_at before '2023-12-31' or date_created after '2023-01-01',SELECT * FROM organizations WHERE trial_ends_at < '2023-12-31' OR date_created > '2023-01-01';
Show all events from users with roles_id 'Role123' and updated_at after '2023-07-01',SELECT * FROM events WHERE users_id IN (SELECT sf_id FROM users WHERE roles_id = 'Role123') AND updated_at > '2023-07-01';
Find the facilities with the oldest event and their corresponding event name,"SELECT facility.*, events.event_name FROM facility JOIN events ON facility.id = events.facility_id WHERE events.date_created = (SELECT MIN(date_created) FROM events);"
Get the users with type 'Admin' and profiles_id 'P789',SELECT * FROM users WHERE type = 'Admin' AND profiles_id = 'P789';
Retrieve all assets with asset_type_id 'AT008' or asset_type_id 'AT009',SELECT * FROM assets WHERE asset_type_id = 'AT008' OR asset_type_id = 'AT009';
List all users with roles_id 'Role789' and official_user_id 'OU002',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU002';
Get the events with harmt less than 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt < 50 AND is_open = TRUE;
Retrieve all staff members with official_user_id 'OU003' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU003' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT010',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT010';
Find events with harmt greater than 200 and is_open set to FALSE,SELECT * FROM events WHERE harmt > 200 AND is_open = FALSE;
Get all users with profiles_id 'P012' or type 'Admin',SELECT * FROM users WHERE profiles_id = 'P012' OR type = 'Admin';
List all assets associated with pharmacy 'Pharma4' or 'Pharma5',SELECT * FROM assets WHERE pharmacies_id = 'Pharma4' OR pharmacies_id = 'Pharma5';
Show all staff members from organization 'Org012' with is_active set to TRUE,SELECT * FROM staff_directory WHERE org_id = 'Org012' AND is_active = TRUE;
Find the facilities with trial_ends_at after '2023-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-06-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-06-01';
Retrieve all assets with asset_type_id 'AT011' or asset_type_id 'AT012',SELECT * FROM assets WHERE asset_type_id = 'AT011' OR asset_type_id = 'AT012';
List all users with roles_id 'Role234' and official_user_id 'OU003',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU003';
Retrieve all staff members with official_user_id 'OU004' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU004' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT013',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT013';
Get all users with profiles_id 'P013' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P013' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma6' or 'Pharma7',SELECT * FROM assets WHERE pharmacies_id = 'Pharma6' OR pharmacies_id = 'Pharma7';
Find the facilities with trial_ends_at after '2023-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-07-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-07-01';
Retrieve all assets with asset_type_id 'AT014' or asset_type_id 'AT015',SELECT * FROM assets WHERE asset_type_id = 'AT014' OR asset_type_id = 'AT015';
List all users with roles_id 'Role345' and official_user_id 'OU004',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU004';
Retrieve all staff members with official_user_id 'OU005' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU005' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT016',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT016';
Get all users with profiles_id 'P014' or type 'Employee',SELECT * FROM users WHERE profiles_id = 'P014' OR type = 'Employee';
List all assets associated with pharmacy 'Pharma8' or 'Pharma9',SELECT * FROM assets WHERE pharmacies_id = 'Pharma8' OR pharmacies_id = 'Pharma9';
Get the names of all users with type 'Manager' or roles_id 'Role345',SELECT full_name FROM users WHERE type = 'Manager' OR roles_id = 'Role345';
Find the facilities with trial_ends_at after '2023-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-08-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-08-01';
Retrieve all assets with asset_type_id 'AT017' or asset_type_id 'AT018',SELECT * FROM assets WHERE asset_type_id = 'AT017' OR asset_type_id = 'AT018';
List all users with roles_id 'Role456' and official_user_id 'OU005',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU005';
Retrieve all staff members with official_user_id 'OU006' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU006' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT019',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT019';
Get all users with profiles_id 'P015' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P015' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma10' or 'Pharma11',SELECT * FROM assets WHERE pharmacies_id = 'Pharma10' OR pharmacies_id = 'Pharma11';
Find the facilities with trial_ends_at after '2023-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-09-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-09-01';
Retrieve all assets with asset_type_id 'AT020' or asset_type_id 'AT021',SELECT * FROM assets WHERE asset_type_id = 'AT020' OR asset_type_id = 'AT021';
Get all users with profiles_id 'P016' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P016' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma12' or 'Pharma13',SELECT * FROM assets WHERE pharmacies_id = 'Pharma12' OR pharmacies_id = 'Pharma13';
Find the facilities with trial_ends_at after '2023-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-10-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-10-01';
Retrieve all assets with asset_type_id 'AT023' or asset_type_id 'AT024',SELECT * FROM assets WHERE asset_type_id = 'AT023' OR asset_type_id = 'AT024';
List all users with roles_id 'Role678' and official_user_id 'OU007',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU007';
Retrieve all staff members with official_user_id 'OU008' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU008' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT025',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT025';
Get all users with profiles_id 'P017' or type 'Employee',SELECT * FROM users WHERE profiles_id = 'P017' OR type = 'Employee';
List all assets associated with pharmacy 'Pharma14' or 'Pharma15',SELECT * FROM assets WHERE pharmacies_id = 'Pharma14' OR pharmacies_id = 'Pharma15';
Get the names of all users with type 'Manager' or roles_id 'Role678',SELECT full_name FROM users WHERE type = 'Manager' OR roles_id = 'Role678';
Find the facilities with trial_ends_at after '2023-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-11-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-11-01';
Retrieve all assets with asset_type_id 'AT026' or asset_type_id 'AT027',SELECT * FROM assets WHERE asset_type_id = 'AT026' OR asset_type_id = 'AT027';
List all users with roles_id 'Role789' and official_user_id 'OU008',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU008';
Retrieve all staff members with official_user_id 'OU009' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU009' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT028',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT028';
Get all users with profiles_id 'P018' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P018' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma16' or 'Pharma17',SELECT * FROM assets WHERE pharmacies_id = 'Pharma16' OR pharmacies_id = 'Pharma17';
Find the facilities with trial_ends_at after '2024-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-01';
Retrieve all assets with asset_type_id 'AT029' or asset_type_id 'AT030',SELECT * FROM assets WHERE asset_type_id = 'AT029' OR asset_type_id = 'AT030';
List all users with roles_id 'Role890' and official_user_id 'OU009',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU009';
Retrieve all staff members with official_user_id 'OU010' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU010' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT031',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT031';
Get all users with profiles_id 'P019' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P019' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma18' or 'Pharma19',SELECT * FROM assets WHERE pharmacies_id = 'Pharma18' OR pharmacies_id = 'Pharma19';
Find the facilities with trial_ends_at after '2024-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-02',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-02';
Retrieve all assets with asset_type_id 'AT032' or asset_type_id 'AT033',SELECT * FROM assets WHERE asset_type_id = 'AT032' OR asset_type_id = 'AT033';
List all users with roles_id 'Role901' and official_user_id 'OU010',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU010';
List all users with roles_id 'Role123' and official_user_id 'OU012',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU012';
Retrieve all staff members with official_user_id 'OU013' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU013' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT040',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT040';
Get all users with profiles_id 'P022' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P022' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma24' or 'Pharma25',SELECT * FROM assets WHERE pharmacies_id = 'Pharma24' OR pharmacies_id = 'Pharma25';
Find the facilities with trial_ends_at after '2024-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-05',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-05';
Retrieve all assets with asset_type_id 'AT041' or asset_type_id 'AT042',SELECT * FROM assets WHERE asset_type_id = 'AT041' OR asset_type_id = 'AT042';
List all users with roles_id 'Role234' and official_user_id 'OU013',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU013';
Retrieve all staff members with official_user_id 'OU014' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU014' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT043',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT043';
Get all users with profiles_id 'P023' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P023' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma26' or 'Pharma27',SELECT * FROM assets WHERE pharmacies_id = 'Pharma26' OR pharmacies_id = 'Pharma27';
Find the facilities with trial_ends_at after '2024-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-06',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-06';
Retrieve all assets with asset_type_id 'AT044' or asset_type_id 'AT045',SELECT * FROM assets WHERE asset_type_id = 'AT044' OR asset_type_id = 'AT045';
List all users with roles_id 'Role345' and official_user_id 'OU014',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU014';
Retrieve all staff members with official_user_id 'OU015' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU015' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT046',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT046';
Get all users with profiles_id 'P024' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P024' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma28' or 'Pharma29',SELECT * FROM assets WHERE pharmacies_id = 'Pharma28' OR pharmacies_id = 'Pharma29';
Find the facilities with trial_ends_at after '2024-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-07',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-07';
Retrieve all assets with asset_type_id 'AT047' or asset_type_id 'AT048',SELECT * FROM assets WHERE asset_type_id = 'AT047' OR asset_type_id = 'AT048';
List all users with roles_id 'Role456' and official_user_id 'OU015',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU015';
Retrieve all staff members with official_user_id 'OU016' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU016' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT049',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT049';
Get all users with profiles_id 'P025' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P025' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma30' or 'Pharma31',SELECT * FROM assets WHERE pharmacies_id = 'Pharma30' OR pharmacies_id = 'Pharma31';
Find the facilities with trial_ends_at after '2024-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-08',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-08';
Retrieve all assets with asset_type_id 'AT050' or asset_type_id 'AT051',SELECT * FROM assets WHERE asset_type_id = 'AT050' OR asset_type_id = 'AT051';
List all users with roles_id 'Role567' and official_user_id 'OU016',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU016';
Retrieve all staff members with official_user_id 'OU017' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU017' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT052',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT052';
Get all users with profiles_id 'P026' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P026' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma32' or 'Pharma33',SELECT * FROM assets WHERE pharmacies_id = 'Pharma32' OR pharmacies_id = 'Pharma33';
Find the facilities with trial_ends_at after '2024-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-09',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-09';
Retrieve all assets with asset_type_id 'AT053' or asset_type_id 'AT054',SELECT * FROM assets WHERE asset_type_id = 'AT053' OR asset_type_id = 'AT054';
List all users with roles_id 'Role678' and official_user_id 'OU017',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU017';
Retrieve all staff members with official_user_id 'OU018' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU018' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT055',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT055';
Get all users with profiles_id 'P027' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P027' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma34' or 'Pharma35',SELECT * FROM assets WHERE pharmacies_id = 'Pharma34' OR pharmacies_id = 'Pharma35';
Find the facilities with trial_ends_at after '2024-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-10',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-10';
Retrieve all assets with asset_type_id 'AT056' or asset_type_id 'AT057',SELECT * FROM assets WHERE asset_type_id = 'AT056' OR asset_type_id = 'AT057';
List all users with roles_id 'Role789' and official_user_id 'OU018',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU018';
Retrieve all staff members with official_user_id 'OU019' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU019' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT058',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT058';
Get all users with profiles_id 'P028' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P028' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma36' or 'Pharma37',SELECT * FROM assets WHERE pharmacies_id = 'Pharma36' OR pharmacies_id = 'Pharma37';
Find the facilities with trial_ends_at after '2024-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-11',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-11';
Retrieve all assets with asset_type_id 'AT059' or asset_type_id 'AT060',SELECT * FROM assets WHERE asset_type_id = 'AT059' OR asset_type_id = 'AT060';
List all users with roles_id 'Role890' and official_user_id 'OU019',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU019';
Retrieve all staff members with official_user_id 'OU020' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU020' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT061',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT061';
Get all users with profiles_id 'P029' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P029' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma38' or 'Pharma39',SELECT * FROM assets WHERE pharmacies_id = 'Pharma38' OR pharmacies_id = 'Pharma39';
Find the facilities with trial_ends_at after '2024-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-12',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-12';
Retrieve all assets with asset_type_id 'AT062' or asset_type_id 'AT063',SELECT * FROM assets WHERE asset_type_id = 'AT062' OR asset_type_id = 'AT063';
List all users with roles_id 'Role901' and official_user_id 'OU020',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU020';
Retrieve all staff members with official_user_id 'OU021' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU021' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT064',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT064';
Get all users with profiles_id 'P030' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P030' OR type = 'Manager';
Retrieve the facilities with organization_id 'Org109' and is_active set to FALSE,SELECT * FROM facilities WHERE organization_id = 'Org109' AND is_active = FALSE;
List all assets associated with pharmacy 'Pharma40' or 'Pharma41',SELECT * FROM assets WHERE pharmacies_id = 'Pharma40' OR pharmacies_id = 'Pharma41';
Show all staff members from organization 'Org109' with is_active set to TRUE,SELECT * FROM staff_directory WHERE org_id = 'Org109' AND is_active = TRUE;
Find the facilities with trial_ends_at after '2025-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-13',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-13';
Retrieve all assets with asset_type_id 'AT065' or asset_type_id 'AT066',SELECT * FROM assets WHERE asset_type_id = 'AT065' OR asset_type_id = 'AT066';
List all users with roles_id 'Role012' and official_user_id 'OU021',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU021';
Retrieve all staff members with official_user_id 'OU022' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU022' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT067',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT067';
Get all users with profiles_id 'P031' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P031' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma42' or 'Pharma43',SELECT * FROM assets WHERE pharmacies_id = 'Pharma42' OR pharmacies_id = 'Pharma43';
Find the facilities with trial_ends_at after '2025-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-14',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-14';
Retrieve all assets with asset_type_id 'AT068' or asset_type_id 'AT069',SELECT * FROM assets WHERE asset_type_id = 'AT068' OR asset_type_id = 'AT069';
List all users with roles_id 'Role123' and official_user_id 'OU022',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU022';
Retrieve all staff members with official_user_id 'OU023' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU023' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT070',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT070';
Get all users with profiles_id 'P032' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P032' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma44' or 'Pharma45',SELECT * FROM assets WHERE pharmacies_id = 'Pharma44' OR pharmacies_id = 'Pharma45';
Find the facilities with trial_ends_at after '2025-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-03-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-15',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-15';
Retrieve all assets with asset_type_id 'AT071' or asset_type_id 'AT072',SELECT * FROM assets WHERE asset_type_id = 'AT071' OR asset_type_id = 'AT072';
List all users with roles_id 'Role234' and official_user_id 'OU023',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU023';
Retrieve all staff members with official_user_id 'OU024' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU024' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT073',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT073';
Get all users with profiles_id 'P033' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P033' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma46' or 'Pharma47',SELECT * FROM assets WHERE pharmacies_id = 'Pharma46' OR pharmacies_id = 'Pharma47';
Find the facilities with trial_ends_at after '2025-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-04-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-16',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-16';
Retrieve all assets with asset_type_id 'AT074' or asset_type_id 'AT075',SELECT * FROM assets WHERE asset_type_id = 'AT074' OR asset_type_id = 'AT075';
List all users with roles_id 'Role345' and official_user_id 'OU024',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU024';
Retrieve all staff members with official_user_id 'OU025' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU025' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT076',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT076';
Get all users with profiles_id 'P034' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P034' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma48' or 'Pharma49',SELECT * FROM assets WHERE pharmacies_id = 'Pharma48' OR pharmacies_id = 'Pharma49';
Find the facilities with trial_ends_at after '2025-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-17',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-17';
Retrieve all assets with asset_type_id 'AT077' or asset_type_id 'AT078',SELECT * FROM assets WHERE asset_type_id = 'AT077' OR asset_type_id = 'AT078';
List all users with roles_id 'Role456' and official_user_id 'OU025',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU025';
Retrieve all staff members with official_user_id 'OU026' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU026' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT079',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT079';
Get all users with profiles_id 'P035' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P035' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma50' or 'Pharma51',SELECT * FROM assets WHERE pharmacies_id = 'Pharma50' OR pharmacies_id = 'Pharma51';
Find the facilities with trial_ends_at after '2025-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-18',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-18';
Retrieve all assets with asset_type_id 'AT080' or asset_type_id 'AT081',SELECT * FROM assets WHERE asset_type_id = 'AT080' OR asset_type_id = 'AT081';
List all users with roles_id 'Role567' and official_user_id 'OU026',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU026';
Retrieve all staff members with official_user_id 'OU027' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU027' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT082',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT082';
Get all users with profiles_id 'P036' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P036' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma52' or 'Pharma53',SELECT * FROM assets WHERE pharmacies_id = 'Pharma52' OR pharmacies_id = 'Pharma53';
Find the facilities with trial_ends_at after '2025-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-19',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-19';
Retrieve all assets with asset_type_id 'AT083' or asset_type_id 'AT084',SELECT * FROM assets WHERE asset_type_id = 'AT083' OR asset_type_id = 'AT084';
List all users with roles_id 'Role678' and official_user_id 'OU027',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU027';
Retrieve all staff members with official_user_id 'OU028' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU028' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT085',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT085';
Get all users with profiles_id 'P037' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P037' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma54' or 'Pharma55',SELECT * FROM assets WHERE pharmacies_id = 'Pharma54' OR pharmacies_id = 'Pharma55';
Find the facilities with trial_ends_at after '2025-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-20',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-20';
Retrieve all assets with asset_type_id 'AT086' or asset_type_id 'AT087',SELECT * FROM assets WHERE asset_type_id = 'AT086' OR asset_type_id = 'AT087';
List all users with roles_id 'Role789' and official_user_id 'OU028',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU028';
Retrieve all staff members with official_user_id 'OU029' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU029' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT088',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT088';
Get all users with profiles_id 'P038' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P038' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma56' or 'Pharma57',SELECT * FROM assets WHERE pharmacies_id = 'Pharma56' OR pharmacies_id = 'Pharma57';
Find the facilities with trial_ends_at after '2025-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-21',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-21';
Retrieve all assets with asset_type_id 'AT089' or asset_type_id 'AT090',SELECT * FROM assets WHERE asset_type_id = 'AT089' OR asset_type_id = 'AT090';
List all users with roles_id 'Role890' and official_user_id 'OU029',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU029';
Retrieve all staff members with official_user_id 'OU030' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU030' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT091',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT091';
Get all users with profiles_id 'P039' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P039' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma58' or 'Pharma59',SELECT * FROM assets WHERE pharmacies_id = 'Pharma58' OR pharmacies_id = 'Pharma59';
Find the facilities with trial_ends_at after '2025-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-22',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-22';
Retrieve all assets with asset_type_id 'AT091' or asset_type_id 'AT092',SELECT * FROM assets WHERE asset_type_id = 'AT091' OR asset_type_id = 'AT092';
List all users with roles_id 'Role901' and official_user_id 'OU030',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU030';
Retrieve all staff members with official_user_id 'OU031' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU031' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT093',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT093';
Get all users with profiles_id 'P040' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P040' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma60' or 'Pharma61',SELECT * FROM assets WHERE pharmacies_id = 'Pharma60' OR pharmacies_id = 'Pharma61';
Find the facilities with trial_ends_at after '2025-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-23',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-23';
Retrieve all assets with asset_type_id 'AT094' or asset_type_id 'AT095',SELECT * FROM assets WHERE asset_type_id = 'AT094' OR asset_type_id = 'AT095';
List all users with roles_id 'Role012' and official_user_id 'OU031',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU031';
Retrieve all staff members with official_user_id 'OU032' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU032' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT096',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT096';
Get all users with profiles_id 'P041' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P041' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma62' or 'Pharma63',SELECT * FROM assets WHERE pharmacies_id = 'Pharma62' OR pharmacies_id = 'Pharma63';
Find the facilities with trial_ends_at after '2025-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-24',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-24';
Retrieve all assets with asset_type_id 'AT097' or asset_type_id 'AT098',SELECT * FROM assets WHERE asset_type_id = 'AT097' OR asset_type_id = 'AT098';
List all users with roles_id 'Role123' and official_user_id 'OU032',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU032';
Retrieve all staff members with official_user_id 'OU033' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU033' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT099',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT099';
Get all users with profiles_id 'P042' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P042' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma64' or 'Pharma65',SELECT * FROM assets WHERE pharmacies_id = 'Pharma64' OR pharmacies_id = 'Pharma65';
Find the facilities with trial_ends_at after '2026-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-25',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-25';
Retrieve all assets with asset_type_id 'AT100' or asset_type_id 'AT101',SELECT * FROM assets WHERE asset_type_id = 'AT100' OR asset_type_id = 'AT101';
List all users with roles_id 'Role234' and official_user_id 'OU033',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU033';
Retrieve all staff members with official_user_id 'OU034' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU034' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT102',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT102';
Get all users with profiles_id 'P043' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P043' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma66' or 'Pharma67',SELECT * FROM assets WHERE pharmacies_id = 'Pharma66' OR pharmacies_id = 'Pharma67';
Find the facilities with trial_ends_at after '2026-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-26',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-26';
Retrieve all assets with asset_type_id 'AT103' or asset_type_id 'AT104',SELECT * FROM assets WHERE asset_type_id = 'AT103' OR asset_type_id = 'AT104';
List all users with roles_id 'Role345' and official_user_id 'OU034',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU034';
Retrieve all staff members with official_user_id 'OU035' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU035' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT105',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT105';
Get all users with profiles_id 'P044' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P044' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma68' or 'Pharma69',SELECT * FROM assets WHERE pharmacies_id = 'Pharma68' OR pharmacies_id = 'Pharma69';
Find the facilities with trial_ends_at after '2026-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-03-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-27',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-27';
Retrieve all assets with asset_type_id 'AT105' or asset_type_id 'AT106',SELECT * FROM assets WHERE asset_type_id = 'AT105' OR asset_type_id = 'AT106';
List all users with roles_id 'Role456' and official_user_id 'OU035',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU035';
Retrieve all staff members with official_user_id 'OU036' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU036' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT107',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT107';
Get all users with profiles_id 'P045' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P045' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma70' or 'Pharma71',SELECT * FROM assets WHERE pharmacies_id = 'Pharma70' OR pharmacies_id = 'Pharma71';
Find the facilities with trial_ends_at after '2026-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-04-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-28',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-28';
Retrieve all assets with asset_type_id 'AT108' or asset_type_id 'AT109',SELECT * FROM assets WHERE asset_type_id = 'AT108' OR asset_type_id = 'AT109';
List all users with roles_id 'Role567' and official_user_id 'OU036',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU036';
Retrieve all staff members with official_user_id 'OU037' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU037' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT110',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT110';
Get all users with profiles_id 'P046' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P046' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma72' or 'Pharma73',SELECT * FROM assets WHERE pharmacies_id = 'Pharma72' OR pharmacies_id = 'Pharma73';
Find the facilities with trial_ends_at after '2026-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-29',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-29';
Retrieve all assets with asset_type_id 'AT111' or asset_type_id 'AT112',SELECT * FROM assets WHERE asset_type_id = 'AT111' OR asset_type_id = 'AT112';
List all users with roles_id 'Role678' and official_user_id 'OU037',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU037';
Retrieve all staff members with official_user_id 'OU038' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU038' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT113',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT113';
Get all users with profiles_id 'P047' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P047' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma74' or 'Pharma75',SELECT * FROM assets WHERE pharmacies_id = 'Pharma74' OR pharmacies_id = 'Pharma75';
Find the facilities with trial_ends_at after '2026-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-30',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-30';
Retrieve all assets with asset_type_id 'AT113' or asset_type_id 'AT114',SELECT * FROM assets WHERE asset_type_id = 'AT113' OR asset_type_id = 'AT114';
List all users with roles_id 'Role789' and official_user_id 'OU038',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU038';
Retrieve all staff members with official_user_id 'OU039' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU039' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT115',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT115';
Get all users with profiles_id 'P048' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P048' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma76' or 'Pharma77',SELECT * FROM assets WHERE pharmacies_id = 'Pharma76' OR pharmacies_id = 'Pharma77';
Find the facilities with trial_ends_at after '2026-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT116' or asset_type_id 'AT117',SELECT * FROM assets WHERE asset_type_id = 'AT116' OR asset_type_id = 'AT117';
List all users with roles_id 'Role890' and official_user_id 'OU039',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU039';
Retrieve all staff members with official_user_id 'OU040' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU040' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT118',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT118';
Get all users with profiles_id 'P049' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P049' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma78' or 'Pharma79',SELECT * FROM assets WHERE pharmacies_id = 'Pharma78' OR pharmacies_id = 'Pharma79';
Find the facilities with trial_ends_at after '2026-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT119' or asset_type_id 'AT120',SELECT * FROM assets WHERE asset_type_id = 'AT119' OR asset_type_id = 'AT120';
List all users with roles_id 'Role901' and official_user_id 'OU040',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU040';
Retrieve all staff members with official_user_id 'OU041' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU041' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT121',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT121';
Get all users with profiles_id 'P050' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P050' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma80' or 'Pharma81',SELECT * FROM assets WHERE pharmacies_id = 'Pharma80' OR pharmacies_id = 'Pharma81';
Find the facilities with trial_ends_at after '2026-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT121' or asset_type_id 'AT122',SELECT * FROM assets WHERE asset_type_id = 'AT121' OR asset_type_id = 'AT122';
List all users with roles_id 'Role012' and official_user_id 'OU041',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU041';
Retrieve all staff members with official_user_id 'OU042' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU042' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT123',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT123';
Get all users with profiles_id 'P051' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P051' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma82' or 'Pharma83',SELECT * FROM assets WHERE pharmacies_id = 'Pharma82' OR pharmacies_id = 'Pharma83';
Find the facilities with trial_ends_at after '2026-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT124' or asset_type_id 'AT125',SELECT * FROM assets WHERE asset_type_id = 'AT124' OR asset_type_id = 'AT125';
List all users with roles_id 'Role123' and official_user_id 'OU042',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU042';
Retrieve all staff members with official_user_id 'OU043' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU043' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT126',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT126';
Get all users with profiles_id 'P052' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P052' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma84' or 'Pharma85',SELECT * FROM assets WHERE pharmacies_id = 'Pharma84' OR pharmacies_id = 'Pharma85';
Find the facilities with trial_ends_at after '2026-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT127' or asset_type_id 'AT128',SELECT * FROM assets WHERE asset_type_id = 'AT127' OR asset_type_id = 'AT128';
List all users with roles_id 'Role234' and official_user_id 'OU043',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU043';
Retrieve all staff members with official_user_id 'OU044' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU044' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT129',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT129';
Get all users with profiles_id 'P053' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P053' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma86' or 'Pharma87',SELECT * FROM assets WHERE pharmacies_id = 'Pharma86' OR pharmacies_id = 'Pharma87';
Find the facilities with trial_ends_at after '2026-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT130' or asset_type_id 'AT131',SELECT * FROM assets WHERE asset_type_id = 'AT130' OR asset_type_id = 'AT131';
List all users with roles_id 'Role345' and official_user_id 'OU044',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU044';
Retrieve all staff members with official_user_id 'OU045' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU045' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT132',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT132';
Get all users with profiles_id 'P054' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P054' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma88' or 'Pharma89',SELECT * FROM assets WHERE pharmacies_id = 'Pharma88' OR pharmacies_id = 'Pharma89';
Find the facilities with trial_ends_at after '2027-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT133' or asset_type_id 'AT134',SELECT * FROM assets WHERE asset_type_id = 'AT133' OR asset_type_id = 'AT134';
List all users with roles_id 'Role456' and official_user_id 'OU045',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU045';
Retrieve all staff members with official_user_id 'OU046' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU046' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT135',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT135';
Get all users with profiles_id 'P055' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P055' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma90' or 'Pharma91',SELECT * FROM assets WHERE pharmacies_id = 'Pharma90' OR pharmacies_id = 'Pharma91';
Find the facilities with trial_ends_at after '2027-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT136' or asset_type_id 'AT137',SELECT * FROM assets WHERE asset_type_id = 'AT136' OR asset_type_id = 'AT137';
List all users with roles_id 'Role567' and official_user_id 'OU046',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU046';
Retrieve all staff members with official_user_id 'OU047' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU047' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT138',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT138';
Get all users with profiles_id 'P056' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P056' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma92' or 'Pharma93',SELECT * FROM assets WHERE pharmacies_id = 'Pharma92' OR pharmacies_id = 'Pharma93';
Find the facilities with trial_ends_at after '2027-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT139' or asset_type_id 'AT140',SELECT * FROM assets WHERE asset_type_id = 'AT139' OR asset_type_id = 'AT140';
List all users with roles_id 'Role678' and official_user_id 'OU047',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU047';
Retrieve all staff members with official_user_id 'OU048' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU048' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT141',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT141';
Get all users with profiles_id 'P057' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P057' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma94' or 'Pharma95',SELECT * FROM assets WHERE pharmacies_id = 'Pharma94' OR pharmacies_id = 'Pharma95';
Find the facilities with trial_ends_at after '2027-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT142' or asset_type_id 'AT143',SELECT * FROM assets WHERE asset_type_id = 'AT142' OR asset_type_id = 'AT143';
List all users with roles_id 'Role789' and official_user_id 'OU048',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU048';
Retrieve all staff members with official_user_id 'OU049' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU049' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT144',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT144';
Get all users with profiles_id 'P058' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P058' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma96' or 'Pharma97',SELECT * FROM assets WHERE pharmacies_id = 'Pharma96' OR pharmacies_id = 'Pharma97';
Find the facilities with trial_ends_at after '2027-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT145' or asset_type_id 'AT146',SELECT * FROM assets WHERE asset_type_id = 'AT145' OR asset_type_id = 'AT146';
List all users with roles_id 'Role890' and official_user_id 'OU049',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU049';
Retrieve all staff members with official_user_id 'OU050' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU050' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT147',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT147';
Get all users with profiles_id 'P059' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P059' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma98' or 'Pharma99',SELECT * FROM assets WHERE pharmacies_id = 'Pharma98' OR pharmacies_id = 'Pharma99';
Find the facilities with trial_ends_at after '2027-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT147' or asset_type_id 'AT148',SELECT * FROM assets WHERE asset_type_id = 'AT147' OR asset_type_id = 'AT148';
List all users with roles_id 'Role012' and official_user_id 'OU050',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU050';
Retrieve all staff members with official_user_id 'OU051' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU051' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT149',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT149';
Get all users with profiles_id 'P060' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P060' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma100' or 'Pharma101',SELECT * FROM assets WHERE pharmacies_id = 'Pharma100' OR pharmacies_id = 'Pharma101';
Find the facilities with trial_ends_at after '2027-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT150' or asset_type_id 'AT151',SELECT * FROM assets WHERE asset_type_id = 'AT150' OR asset_type_id = 'AT151';
List all users with roles_id 'Role123' and official_user_id 'OU051',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU051';
Retrieve all staff members with official_user_id 'OU052' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU052' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT152',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT152';
Get all users with profiles_id 'P061' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P061' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma102' or 'Pharma103',SELECT * FROM assets WHERE pharmacies_id = 'Pharma102' OR pharmacies_id = 'Pharma103';
Find the facilities with trial_ends_at after '2027-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT153' or asset_type_id 'AT154',SELECT * FROM assets WHERE asset_type_id = 'AT153' OR asset_type_id = 'AT154';
List all users with roles_id 'Role234' and official_user_id 'OU052',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU052';
Retrieve all staff members with official_user_id 'OU053' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU053' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT155',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT155';
Get all users with profiles_id 'P062' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P062' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma104' or 'Pharma105',SELECT * FROM assets WHERE pharmacies_id = 'Pharma104' OR pharmacies_id = 'Pharma105';
Find the facilities with trial_ends_at after '2027-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT156' or asset_type_id 'AT157',SELECT * FROM assets WHERE asset_type_id = 'AT156' OR asset_type_id = 'AT157';
List all users with roles_id 'Role345' and official_user_id 'OU053',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU053';
Retrieve all staff members with official_user_id 'OU054' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU054' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT158',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT158';
Get all users with profiles_id 'P063' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P063' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma106' or 'Pharma107',SELECT * FROM assets WHERE pharmacies_id = 'Pharma106' OR pharmacies_id = 'Pharma107';
Find the facilities with trial_ends_at after '2027-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT159' or asset_type_id 'AT160',SELECT * FROM assets WHERE asset_type_id = 'AT159' OR asset_type_id = 'AT160';
List all users with roles_id 'Role456' and official_user_id 'OU054',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU054';
Retrieve all staff members with official_user_id 'OU055' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU055' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT161',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT161';
Get all users with profiles_id 'P064' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P064' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma108' or 'Pharma109',SELECT * FROM assets WHERE pharmacies_id = 'Pharma108' OR pharmacies_id = 'Pharma109';
Find the facilities with trial_ends_at after '2027-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT162' or asset_type_id 'AT163',SELECT * FROM assets WHERE asset_type_id = 'AT162' OR asset_type_id = 'AT163';
List all users with roles_id 'Role567' and official_user_id 'OU055',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU055';
Retrieve all staff members with official_user_id 'OU056' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU056' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT164',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT164';
Get all users with profiles_id 'P065' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P065' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma110' or 'Pharma111',SELECT * FROM assets WHERE pharmacies_id = 'Pharma110' OR pharmacies_id = 'Pharma111';
Find the facilities with trial_ends_at after '2027-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT165' or asset_type_id 'AT166',SELECT * FROM assets WHERE asset_type_id = 'AT165' OR asset_type_id = 'AT166';
List all users with roles_id 'Role678' and official_user_id 'OU056',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU056';
Retrieve all staff members with official_user_id 'OU057' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU057' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT167',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT167';
Get all users with profiles_id 'P066' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P066' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma112' or 'Pharma113',SELECT * FROM assets WHERE pharmacies_id = 'Pharma112' OR pharmacies_id = 'Pharma113';
Find the facilities with trial_ends_at after '2028-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT168' or asset_type_id 'AT169',SELECT * FROM assets WHERE asset_type_id = 'AT168' OR asset_type_id = 'AT169';
List all users with roles_id 'Role789' and official_user_id 'OU057',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU057';
Retrieve all staff members with official_user_id 'OU058' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU058' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT170',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT170';
Get all users with profiles_id 'P067' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P067' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma114' or 'Pharma115',SELECT * FROM assets WHERE pharmacies_id = 'Pharma114' OR pharmacies_id = 'Pharma115';
Find the facilities with trial_ends_at after '2028-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT171' or asset_type_id 'AT172',SELECT * FROM assets WHERE asset_type_id = 'AT171' OR asset_type_id = 'AT172';
List all users with roles_id 'Role890' and official_user_id 'OU058',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU058';
Retrieve all staff members with official_user_id 'OU059' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU059' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT173',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT173';
Get all users with profiles_id 'P068' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P068' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma116' or 'Pharma117',SELECT * FROM assets WHERE pharmacies_id = 'Pharma116' OR pharmacies_id = 'Pharma117';
Find the facilities with trial_ends_at after '2028-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT174' or asset_type_id 'AT175',SELECT * FROM assets WHERE asset_type_id = 'AT174' OR asset_type_id = 'AT175';
List all users with roles_id 'Role012' and official_user_id 'OU059',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU059';
Retrieve all staff members with official_user_id 'OU060' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU060' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT176',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT176';
Get all users with profiles_id 'P069' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P069' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma118' or 'Pharma119',SELECT * FROM assets WHERE pharmacies_id = 'Pharma118' OR pharmacies_id = 'Pharma119';
Find the facilities with trial_ends_at after '2028-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT177' or asset_type_id 'AT178',SELECT * FROM assets WHERE asset_type_id = 'AT177' OR asset_type_id = 'AT178';
List all users with roles_id 'Role123' and official_user_id 'OU060',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU060';
Retrieve all staff members with official_user_id 'OU061' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU061' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT179',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT179';
Get all users with profiles_id 'P070' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P070' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma120' or 'Pharma121',SELECT * FROM assets WHERE pharmacies_id = 'Pharma120' OR pharmacies_id = 'Pharma121';
Find the facilities with trial_ends_at after '2028-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT180' or asset_type_id 'AT181',SELECT * FROM assets WHERE asset_type_id = 'AT180' OR asset_type_id = 'AT181';
List all users with roles_id 'Role234' and official_user_id 'OU061',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU061';
Retrieve all staff members with official_user_id 'OU062' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU062' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT182',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT182';
Get all users with profiles_id 'P071' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P071' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma122' or 'Pharma123',SELECT * FROM assets WHERE pharmacies_id = 'Pharma122' OR pharmacies_id = 'Pharma123';
Find the facilities with trial_ends_at after '2028-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT183' or asset_type_id 'AT184',SELECT * FROM assets WHERE asset_type_id = 'AT183' OR asset_type_id = 'AT184';
List all users with roles_id 'Role345' and official_user_id 'OU062',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU062';
Retrieve all staff members with official_user_id 'OU063' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU063' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT185',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT185';
Get all users with profiles_id 'P072' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P072' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma124' or 'Pharma125',SELECT * FROM assets WHERE pharmacies_id = 'Pharma124' OR pharmacies_id = 'Pharma125';
Find the facilities with trial_ends_at after '2028-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT186' or asset_type_id 'AT187',SELECT * FROM assets WHERE asset_type_id = 'AT186' OR asset_type_id = 'AT187';
List all users with roles_id 'Role456' and official_user_id 'OU063',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU063';
Retrieve all staff members with official_user_id 'OU064' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU064' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT188',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT188';
Get all users with profiles_id 'P073' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P073' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma126' or 'Pharma127',SELECT * FROM assets WHERE pharmacies_id = 'Pharma126' OR pharmacies_id = 'Pharma127';
Find the facilities with trial_ends_at after '2028-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT189' or asset_type_id 'AT190',SELECT * FROM assets WHERE asset_type_id = 'AT189' OR asset_type_id = 'AT190';
List all users with roles_id 'Role567' and official_user_id 'OU064',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU064';
Retrieve all staff members with official_user_id 'OU065' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU065' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT191',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT191';
Get all users with profiles_id 'P074' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P074' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma128' or 'Pharma129',SELECT * FROM assets WHERE pharmacies_id = 'Pharma128' OR pharmacies_id = 'Pharma129';
Find the facilities with trial_ends_at after '2028-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT192' or asset_type_id 'AT193',SELECT * FROM assets WHERE asset_type_id = 'AT192' OR asset_type_id = 'AT193';
List all users with roles_id 'Role678' and official_user_id 'OU065',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU065';
Retrieve all staff members with official_user_id 'OU066' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU066' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT194',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT194';
Get all users with profiles_id 'P075' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P075' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma130' or 'Pharma131',SELECT * FROM assets WHERE pharmacies_id = 'Pharma130' OR pharmacies_id = 'Pharma131';
Find the facilities with trial_ends_at after '2028-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT195' or asset_type_id 'AT196',SELECT * FROM assets WHERE asset_type_id = 'AT195' OR asset_type_id = 'AT196';
List all users with roles_id 'Role789' and official_user_id 'OU066',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU066';
Retrieve all staff members with official_user_id 'OU067' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU067' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT197',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT197';
Get all users with profiles_id 'P076' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P076' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma132' or 'Pharma133',SELECT * FROM assets WHERE pharmacies_id = 'Pharma132' OR pharmacies_id = 'Pharma133';
Find the facilities with trial_ends_at after '2028-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT198' or asset_type_id 'AT199',SELECT * FROM assets WHERE asset_type_id = 'AT198' OR asset_type_id = 'AT199';
List all users with roles_id 'Role890' and official_user_id 'OU067',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU067';
Retrieve all staff members with official_user_id 'OU068' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU068' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT200',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT200';
Get all users with profiles_id 'P077' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P077' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma134' or 'Pharma135',SELECT * FROM assets WHERE pharmacies_id = 'Pharma134' OR pharmacies_id = 'Pharma135';
Find the facilities with trial_ends_at after '2028-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT201' or asset_type_id 'AT202',SELECT * FROM assets WHERE asset_type_id = 'AT201' OR asset_type_id = 'AT202';
List all users with roles_id 'Role012' and official_user_id 'OU068',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU068';
Retrieve all staff members with official_user_id 'OU069' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU069' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT203',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT203';
Get all users with profiles_id 'P078' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P078' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma136' or 'Pharma137',SELECT * FROM assets WHERE pharmacies_id = 'Pharma136' OR pharmacies_id = 'Pharma137';
Find the facilities with trial_ends_at after '2029-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT204' or asset_type_id 'AT205',SELECT * FROM assets WHERE asset_type_id = 'AT204' OR asset_type_id = 'AT205';
List all users with roles_id 'Role123' and official_user_id 'OU069',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU069';
Retrieve all staff members with official_user_id 'OU070' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU070' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT206',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT206';
Get all users with profiles_id 'P079' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P079' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma138' or 'Pharma139',SELECT * FROM assets WHERE pharmacies_id = 'Pharma138' OR pharmacies_id = 'Pharma139';
Find the facilities with trial_ends_at after '2029-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT207' or asset_type_id 'AT208',SELECT * FROM assets WHERE asset_type_id = 'AT207' OR asset_type_id = 'AT208';
List all users with roles_id 'Role234' and official_user_id 'OU070',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU070';
Retrieve all staff members with official_user_id 'OU071' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU071' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT209',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT209';
Get all users with profiles_id 'P080' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P080' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma140' or 'Pharma141',SELECT * FROM assets WHERE pharmacies_id = 'Pharma140' OR pharmacies_id = 'Pharma141';
Find the facilities with trial_ends_at after '2029-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT210' or asset_type_id 'AT211',SELECT * FROM assets WHERE asset_type_id = 'AT210' OR asset_type_id = 'AT211';
List all users with roles_id 'Role345' and official_user_id 'OU071',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU071';
Retrieve all staff members with official_user_id 'OU072' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU072' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT212',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT212';
Get all users with profiles_id 'P081' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P081' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma142' or 'Pharma143',SELECT * FROM assets WHERE pharmacies_id = 'Pharma142' OR pharmacies_id = 'Pharma143';
Find the facilities with trial_ends_at after '2029-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT213' or asset_type_id 'AT214',SELECT * FROM assets WHERE asset_type_id = 'AT213' OR asset_type_id = 'AT214';
List all users with roles_id 'Role456' and official_user_id 'OU072',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU072';
Retrieve all staff members with official_user_id 'OU073' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU073' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT215',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT215';
Get all users with profiles_id 'P082' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P082' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma144' or 'Pharma145',SELECT * FROM assets WHERE pharmacies_id = 'Pharma144' OR pharmacies_id = 'Pharma145';
Find the facilities with trial_ends_at after '2029-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT216' or asset_type_id 'AT217',SELECT * FROM assets WHERE asset_type_id = 'AT216' OR asset_type_id = 'AT217';
List all users with roles_id 'Role567' and official_user_id 'OU073',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU073';
Retrieve all staff members with official_user_id 'OU074' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU074' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT218',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT218';
Get all users with profiles_id 'P083' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P083' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma146' or 'Pharma147',SELECT * FROM assets WHERE pharmacies_id = 'Pharma146' OR pharmacies_id = 'Pharma147';
Find the facilities with trial_ends_at after '2029-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT219' or asset_type_id 'AT220',SELECT * FROM assets WHERE asset_type_id = 'AT219' OR asset_type_id = 'AT220';
List all users with roles_id 'Role678' and official_user_id 'OU074',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU074';
Retrieve all staff members with official_user_id 'OU075' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU075' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT221',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT221';
Get all users with profiles_id 'P084' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P084' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma148' or 'Pharma149',SELECT * FROM assets WHERE pharmacies_id = 'Pharma148' OR pharmacies_id = 'Pharma149';
Find the facilities with trial_ends_at after '2029-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT222' or asset_type_id 'AT223',SELECT * FROM assets WHERE asset_type_id = 'AT222' OR asset_type_id = 'AT223';
List all users with roles_id 'Role789' and official_user_id 'OU075',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU075';
Retrieve all staff members with official_user_id 'OU076' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU076' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT224',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT224';
Get all users with profiles_id 'P085' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P085' OR type = 'Manager';
Retrieve all users along with their associated roles,"SELECT u.*, r.* FROM users u JOIN roles r ON u.role_id = r.role_id;"
Get all facilities along with their associated organizations,"SELECT f.*, o.* FROM facilities f JOIN organizations o ON f.organization_id = o.organization_id;"
List all events along with their associated assets,"SELECT e.*, a.* FROM events e JOIN assets a ON e.asset_id = a.asset_id;"
Retrieve all pharmacies along with their associated staff members,"SELECT p.*, s.* FROM pharmacies p JOIN staff_members s ON p.pharmacy_id = s.pharmacy_id;"
Get all assets along with their associated pharmacies,"SELECT a.*, p.* FROM assets a JOIN pharmacies p ON a.pharmacy_id = p.pharmacy_id;"
List all events along with their associated users,"SELECT e.*, u.* FROM events e JOIN users u ON e.user_id = u.user_id;"
Retrieve all staff members along with their associated roles,"SELECT s.*, r.* FROM staff_members s JOIN roles r ON s.role_id = r.role_id;"
Get all users along with their associated profiles,"SELECT u.*, p.* FROM users u JOIN profiles p ON u.profile_id = p.profile_id;"
List all facilities along with their associated assets,"SELECT f.*, a.* FROM facilities f JOIN assets a ON f.asset_id = a.asset_id;"
Retrieve all pharmacies along with their associated events,"SELECT p.*, e.* FROM pharmacies p JOIN events e ON p.pharmacy_id = e.pharmacy_id;"
Get all assets along with their associated events,"SELECT a.*, e.* FROM assets a JOIN events e ON a.event_id = e.event_id;"
List all users along with their associated staff members,"SELECT u.*, s.* FROM users u JOIN staff_members s ON u.staff_id = s.staff_id;"
Retrieve all staff members along with their associated pharmacies,"SELECT s.*, p.* FROM staff_members s JOIN pharmacies p ON s.pharmacy_id = p.pharmacy_id;"
Get all facilities along with their associated assets and organizations,"SELECT f.*, a.*, o.* FROM facilities f JOIN assets a ON f.asset_id = a.asset_id JOIN organizations o ON f.organization_id = o.organization_id;"
List all events along with their associated users and assets,"SELECT e.*, u.*, a.* FROM events e JOIN users u ON e.user_id = u.user_id JOIN assets a ON e.asset_id = a.asset_id;"
Get all pharmacies along with their associated events and staff members,"SELECT p.*, e.*, s.* FROM pharmacies p JOIN events e ON p.pharmacy_id = e.pharmacy_id JOIN staff_members s ON p.staff_id = s.staff_id;"
Retrieve all users along with their associated roles and staff members,"SELECT u.*, r.*, s.* FROM users u JOIN roles r ON u.role_id = r.role_id JOIN staff_members s ON u.staff_id = s.staff_id;"
Retrieve all events with their associated facilities and users,"SELECT e.*, f.*, u.* FROM events e JOIN facilities f ON e.facility_id = f.facility_id JOIN users u ON e.user_id = u.user_id;"
List all staff members along with their associated roles and organizations,"SELECT s.*, r.*, o.* FROM staff_members s JOIN roles r ON s.role_id = r.role_id JOIN organizations o ON s.org_id = o.org_id;"
Retrieve all users along with their associated roles and profiles,"SELECT u.*, r.*, p.* FROM users u JOIN roles r ON u.role_id = r.role_id JOIN profiles p ON u.profile_id = p.profile_id;"
Get all organizations along with their associated pharmacies,"SELECT o.*, p.* FROM organizations o JOIN pharmacies p ON o.org_id = p.org_id;"
List all events along with their associated assets and users,"SELECT e.*, a.*, u.* FROM events e JOIN assets a ON e.event_id = a.event_id JOIN users u ON e.user_id = u.user_id;"
Fetch the records from the staff_directory table where the full_name contains 'John',SELECT * FROM staff_directory WHERE full_name LIKE '%John%';
List all assets with an active status and updated in the last 7 days,SELECT * FROM assets WHERE active = TRUE AND updated_at >= CURRENT_DATE - INTERVAL '7 days';
Get the hazards with a name starting with 'Fire',SELECT * FROM hazards WHERE name LIKE 'Fire%';
Retrieve events created by user_id '123' and updated after '2023-01-01',SELECT * FROM events WHERE user_id = '123' AND updated_at > '2023-01-01';
Find the staff members with fixed status and working in organization_id 'Org456',SELECT * FROM staff_directory WHERE fixed = TRUE AND org_id = 'Org456';
List all assets of type 'Computer' and associated with organization_id 'Org789',SELECT * FROM assets WHERE asset_type_id = (SELECT id FROM asset_types WHERE name = 'Computer') AND pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE organizations_id = 'Org789');
Retrieve the event staff roles ordered by name in ascending order,SELECT * FROM event_staff_roles ORDER BY name ASC;
Get the assets with serial number 'SN123' and active status,SELECT * FROM assets WHERE serial_number = 'SN123' AND active = TRUE;
Fetch all events where the user's full name contains 'Smith' and harmt is greater than 20,SELECT * FROM events WHERE users_fullname LIKE '%Smith%' AND harmt > 20;
List the users with profiles_id 'Profile123' and organization_id 'Org987',SELECT * FROM users WHERE profiles_id = 'Profile123' AND organization_id = 'Org987';
Retrieve all organizations with trial_ends_at in the future,SELECT * FROM organizations WHERE trial_ends_at > CURRENT_DATE;
Find the pharmacies that were created before '2023-03-01' and enabled after '2023-02-15',SELECT * FROM pharmacies WHERE created_at < '2023-03-01' AND activate_at > '2023-02-15';
"Get the event actions for the events with IDs '123', '456', and '789'","SELECT * FROM event_actions WHERE events_id IN ('123', '456', '789');"
Fetch the hazards with descriptions containing the word 'chemical',SELECT * FROM hazards WHERE description LIKE '%chemical%';
Retrieve the staff members with locum_full_name not equal to 'NULL',SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
List the assets that were updated between '2023-05-01' and '2023-06-30',SELECT * FROM assets WHERE updated_at BETWEEN '2023-05-01' AND '2023-06-30';
Get the event staff roles with order greater than or equal to 3,SELECT * FROM event_staff_roles WHERE order >= 3;
Fetch the events with harmt equal to 0 and prescribers_id is NULL,SELECT * FROM events WHERE harmt = 0 AND prescribers_id IS NULL;
Retrieve all organizations with names starting with 'ABC' and created after '2023-01-01',SELECT * FROM organizations WHERE name LIKE 'ABC%' AND created_at > '2023-01-01';
Find the pharmacies that were disabled in the last 30 days,SELECT * FROM pharmacies WHERE date_disabled >= CURRENT_DATE - INTERVAL '30 days';
List the event actions for the events created by user_id '789' and updated after '2023-02-28',SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789' AND updated_at > '2023-02-28');
Get the assets with asset_type_id 'AT001' and pharmacies_id 'Pharma1',SELECT * FROM assets WHERE asset_type_id = 'AT001' AND pharmacies_id = 'Pharma1';
Fetch the events that were created in the last 7 days and harmt is greater than or equal to 10,SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '7 days' AND harmt >= 10;
Retrieve the full names of all staff members in alphabetical order,SELECT full_name FROM staff_directory ORDER BY full_name ASC;
List all assets associated with pharmacies located in the city 'New York',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE city = 'New York');
Get the event staff roles with forms_id equal to 5 and facility_id equal to 10,SELECT * FROM event_staff_roles WHERE forms_id = 5 AND facility_id = 10;
Fetch the events with harmt greater than 50 and date_closed is NULL,SELECT * FROM events WHERE harmt > 50 AND date_closed IS NULL;
Retrieve the organizations that were updated after '2023-03-15' and have trial_ends_at in the future,SELECT * FROM organizations WHERE updated_at > '2023-03-15' AND trial_ends_at > CURRENT_DATE;
Find the staff members who are active and have the role_id 'Role123',SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id = 'Role123';
List the assets with asset_type_id 'AT002' or 'AT003',"SELECT * FROM assets WHERE asset_type_id IN ('AT002', 'AT003');"
Get the hazards with descriptions containing the word 'safety' and created in the last 30 days,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= CURRENT_DATE - INTERVAL '30 days';
Fetch the events with harmt greater than or equal to 10 and prescribers_id is not NULL,SELECT * FROM events WHERE harmt >= 10 AND prescribers_id IS NOT NULL;
Retrieve the full names of staff members whose official_user_id starts with 'USR',SELECT full_name FROM staff_directory WHERE official_user_id LIKE 'USR%';
List all assets associated with pharmacies created after '2023-04-01' and updated before '2023-06-30',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-04-01' AND updated_at < '2023-06-30');
Get the event staff roles with names containing the word 'supervisor',SELECT * FROM event_staff_roles WHERE name LIKE '%supervisor%';
Fetch the events with harmt less than 10 and date_closed is not NULL,SELECT * FROM events WHERE harmt < 10 AND date_closed IS NOT NULL;
Retrieve the organizations that have the trial_ends_at set to '2023-12-31' and are located in the city 'London',SELECT * FROM organizations WHERE trial_ends_at = '2023-12-31' AND city = 'London';
Find the staff members who are active and have the roles_id of 'Role456' or 'Role789',"SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id IN ('Role456', 'Role789');"
List the assets with asset_type_id 'AT004' and serial_number is not NULL,SELECT * FROM assets WHERE asset_type_id = 'AT004' AND serial_number IS NOT NULL;
Get the hazards with descriptions starting with 'Potential' and updated in the last 7 days,SELECT * FROM hazards WHERE description LIKE 'Potential%' AND updated_at >= CURRENT_DATE - INTERVAL '7 days';
Fetch the events with harmt between 20 and 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt BETWEEN 20 AND 50 AND is_open = TRUE;
Retrieve the full names of all staff members whose updated_at is equal to '2023-01-01',SELECT full_name FROM staff_directory WHERE updated_at = '2023-01-01';
List all assets associated with pharmacies enabled before '2023-02-01' and disabled after '2023-06-30',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at < '2023-02-01' AND disabled_at > '2023-06-30');
Get the event staff roles with forms_id not equal to 1 or 2,"SELECT * FROM event_staff_roles WHERE forms_id NOT IN (1, 2);"
Fetch the events with harmt equal to 0 and reporters_id is not NULL,SELECT * FROM events WHERE harmt = 0 AND reporters_id IS NOT NULL;
Retrieve the organizations that were created after '2023-01-01' and have trial_ends_at set to NULL,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND trial_ends_at IS NULL;
Find the pharmacies with names starting with 'ABC' and activated by 'User123',SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_by = 'User123';
List the event actions for the events created by user_id '456' and action_date between '2023-02-01' and '2023-03-31',SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '456') AND action_date BETWEEN '2023-02-01' AND '2023-03-31';
Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma2',SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma2';
Fetch the hazards with descriptions containing the word 'environment' and created before '2023-02-15',SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at < '2023-02-15';
Retrieve the full names of all staff members whose fixed status is FALSE,SELECT full_name FROM staff_directory WHERE fixed = FALSE;
Find all staff members,SELECT * FROM staff_directory;
Find all active staff members,SELECT * FROM staff_directory WHERE is_active = 1;
Find all staff members who are associated with pharmacy 123,SELECT * FROM staff_directory WHERE pharmacies_id = 123;
Find all assets,SELECT * FROM assets;
Find all assets that are active,SELECT * FROM assets WHERE active = 1;
Find all assets that are associated with pharmacy 123,SELECT * FROM assets WHERE pharmacies_id = 123;
Find all hazards,SELECT * FROM hazards;
"Find all hazards that have the name ""needle stick""","SELECT * FROM hazards WHERE name = ""needle stick"";"
Find all hazards that are associated with pharmacy 123,SELECT * FROM hazards WHERE pharmacies_id = 123;
Find all events,SELECT * FROM events;
Find all events that were created by user 123,SELECT * FROM events WHERE users_id = 123;
"Find all events that were created by user 123 and have the harm level of ""high""","SELECT * FROM events WHERE users_id = 123 AND harmt = ""high"";"
Find all actions that were taken on event 123,SELECT * FROM event_actions WHERE events_id = 123;
Find all summary tools that are configured for form 123,SELECT * FROM formsettings_summarytools WHERE forms_id = 123;
Find all summary tools that are configured for all forms in pharmacy 123,SELECT * FROM formsettings_summarytools WHERE forms_id IN (SELECT forms_id FROM forms WHERE pharmacies_id = 123);
Find all users who have created an event,"SELECT users_id, users_fullname FROM events GROUP BY users_id;"
Find all hazards that have been reported by user 123,"SELECT hazards.name, hazards.description FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id WHERE events.users_id = 123;"
Find all events that have been taken on by user 123,"SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123;"
"Find all events that have been taken on by user 123 and have the harm level of ""high""","SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123 AND events.harmt = ""high"";"
"Find all staff members who are associated with pharmacy 123 and have the role of ""manager""","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND role = ""manager"";"
Find all events that have been created in the past 30 days,SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
"Find all events that have been created in the past 30 days and have the harm level of ""high""","SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY AND harmt = ""high"";"
Find the average harm level of all events,SELECT AVG(harmt) AS average_harm_level FROM events;
Find the average harm level of all events that have been created in the past 30 days,SELECT AVG(harmt) AS average_harm_level FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
Find the top 10 hazards that have been reported the most often,"SELECT hazards.name, COUNT(*) AS count FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id GROUP BY hazards.name ORDER BY count DESC LIMIT 10;"
Find all staff members who are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM staff_directory WHERE pharmacies_id IN (123, 456);"
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name = ""John Smith"";"
"Find all assets that are associated with pharmacy 123 or pharmacy 456 and have the serial number ""1234567890"".","SELECT * FROM assets WHERE pharmacies_id IN (123, 456) AND serial_number = ""1234567890"";"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"".","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"");"
Find all events that were created by user 123 or user 456.,"SELECT * FROM events WHERE users_id IN (123, 456);"
"Find all events that were created by user 123 and have the harm level ""high"" or ""medium"".","SELECT * FROM events WHERE users_id = 123 AND harmt IN (""high"", ""medium"");"
Find all actions that were taken on event 123 or event 456.,"SELECT * FROM event_actions WHERE events_id IN (123, 456);"
Find all actions that were taken on event 123 by user 123 or user 456.,"SELECT * FROM event_actions WHERE events_id = 123 AND user_id IN (123, 456);"
Find all summary tools that are configured for form 123 or form 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456);"
Find all summary tools that are configured for form 123 and are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id = 123 AND pharmacies_id IN (123, 456);"
Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123;
"Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them, ordered by the number of actions taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of forms that have been used.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of events that have been created.",SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(events.id) DESC;
"Find all events that have been created by staff members who have created the most events, ordered by the number of events that have been created.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all assets that have been used in the most events that have been created by staff members who have created the most events, ordered by the number of events that have been used.",SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all hazards that have been associated with the most events that have been created by staff members who have created the most events, ordered by the number of events that have been associated.",SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all events that have had the most actions taken on them that have been created by staff members who have created the most events, ordered by the number of actions that have been taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for the most forms that have been used in events that have been created by staff members who have created the most events, ordered by the number of forms that have been configured.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with the hazard ""needle stick"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name WHERE hazards.name = ""needle stick"";"
Find all assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all hazards that have been associated with events that have been created by staff members who are associated with pharmacy 123 and have the harm level ""high"".","SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 AND events.harmt = ""high"";"
Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have the serial number ""1234567890"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number WHERE assets.serial_number = ""1234567890"";"
Find all events that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events that have been created by staff members who have created the most events.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events that have been created by staff members who have created the most events.,SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"" or the name ""Jane Doe"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name IN (""John Smith"", ""Jane Doe"");"
"Find all assets that are associated with pharmacy 123 and have the serial number ""1234567890"" or the serial number ""9876543210"".","SELECT * FROM assets WHERE pharmacies_id = 123 AND serial_number IN (""1234567890"", ""9876543210"");"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"" and are associated with pharmacy 123 or pharmacy 456.","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"") AND pharmacies_id IN (123, 456);"
"Find all events that were created by user 123 or user 456 and have the harm level ""high"" or ""medium"" and were created on or after January 1, 2023.","SELECT * FROM events WHERE users_id IN (123, 456) AND harmt IN (""high"", ""medium"") AND date_created >= '2023-01-01';"
"Find all actions that were taken on event 123 or event 456 by user 123 or user 456 and were taken on or after January 1, 2023.","SELECT * FROM event_actions WHERE events_id IN (123, 456) AND user_id IN (123, 456) AND date_created >= '2023-01-01';"
"Find all summary tools that are configured for form 123 or form 456 and are associated with pharmacy 123 or pharmacy 456 and were configured on or after January 1, 2023.","SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456) AND pharmacies_id IN (123, 456) AND updated_at >= '2023-01-01';"
Find all staff members who have created the most events.,SELECT * FROM staff_directory ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events.,SELECT * FROM assets ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events.,SELECT * FROM hazards ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them.,SELECT * FROM events ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for the most forms.,SELECT * FROM formsettings_summarytools ORDER BY COUNT(forms_id) DESC LIMIT 1;
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users, and only for events that were held in the last year","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id WHERE events.date >= '2022-01-01' GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, ordered by the number of organizations that have attended the event","SELECT events.id, events.name, COUNT(DISTINCT organizations.id) AS number_of_organizations FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id ORDER BY number_of_organizations DESC;"
"Get the list of events that have been attended by users from all organizations, and the number of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, COUNT(DISTINCT users.id) AS number_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY number_of_users DESC;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC;"
Get all events that have been attended by at least 100 users,SELECT events.* FROM events LEFT JOIN events_users ON events.id = events_users.event_id GROUP BY events.id HAVING COUNT(events_users.id) >= 100;
Get all hazards that have been reported by at least 5 different users,SELECT hazards.* FROM hazards LEFT JOIN hazards_reported_by ON hazards.id = hazards_reported_by.hazard_id GROUP BY hazards.id HAVING COUNT(hazards_reported_by.id) >= 5;
Get all assets that are used by at least 5 different events,SELECT assets.* FROM assets LEFT JOIN assets_used_in ON assets.id = assets_used_in.asset_id GROUP BY assets.id HAVING COUNT(assets_used_in.id) >= 5;
Get all pharmacies that have hosted at least 10 events,SELECT pharmacies.* FROM pharmacies LEFT JOIN events ON pharmacies.id = events.pharmacies_id GROUP BY pharmacies.id HAVING COUNT(events.id) >= 10;
Get all users who have attended at least 5 events,SELECT users.* FROM users LEFT JOIN events_users ON users.id = events_users.user_id GROUP BY users.id HAVING COUNT(events_users.id) >= 5;
Get all organizations that have held at least 10 events,SELECT organizations.* FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id GROUP BY organizations.id HAVING COUNT(events.id) >= 10;
Get all formsettings summarytools that have been used by at least 5 events,SELECT formsettings_summarytools.* FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id GROUP BY formsettings_summarytools.id HAVING COUNT(events.id) >= 5;
Get all users who have created at least 5 event actions,SELECT users.* FROM users LEFT JOIN event_actions ON users.id = event_actions.user_id GROUP BY users.id HAVING COUNT(event_actions.id) >= 5;
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at;"
"Get all users and the organizations they are employed by, ordered by the user's name","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity;"
"Get all event actions and the staff members who created those actions, ordered by the action's date","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC;"
"Get all users and the events they have attended, ordered by the number of events the user has attended","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC;"
Get all organizations,SELECT * FROM organizations;
Get all organizations that are active,SELECT * FROM organizations WHERE active = 1;
"Get all organizations whose name contains ""Acme""",SELECT * FROM organizations WHERE name LIKE '%Acme%';
"Get all organizations whose name is ""Acme Corporation""",SELECT * FROM organizations WHERE name = 'Acme Corporation';
Get all organizations whose ID is 12345,SELECT * FROM organizations WHERE id = 12345;
Get all organizations that were created on 2023-01-01,SELECT * FROM organizations WHERE created_at = '2023-01-01';
Get all organizations that were updated on 2023-02-02,SELECT * FROM organizations WHERE updated_at = '2023-02-02';
Get all organizations that were created on 2023-01-01 and are active,SELECT * FROM organizations WHERE created_at = '2023-01-01' AND active = 1;
Get all organizations that were updated on 2023-02-02 and are active,SELECT * FROM organizations WHERE updated_at = '2023-02-02' AND active = 1;
Get all users who were updated on 2023-02-02 and are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all users who are employed by pharmacy with ID 12345 and are active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 1;
Get all users who are employed by pharmacy with ID 12345 and are not active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 0;
Get all users,SELECT * FROM users;
Get all users that are active,SELECT * FROM users WHERE is_active = 1;
"Get all users whose name contains ""John""",SELECT * FROM users WHERE full_name LIKE '%John%';
"Get all users whose name is ""John Doe""",SELECT * FROM users WHERE full_name = 'John Doe';
Get all users whose ID is 12345,SELECT * FROM users WHERE id = 12345;
Get all users who are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345;
Get all users who were created on 2023-01-01,SELECT * FROM users WHERE created_at = '2023-01-01';
Get all events,SELECT * FROM events;
Get all events that are open,SELECT * FROM events WHERE is_open = 1;
Get all events that were created on 2023-01-01,SELECT * FROM events WHERE created_at = '2023-01-01';
Get all events that were updated on 2023-02-02,SELECT * FROM events WHERE updated_at = '2023-02-02';
Get all events that were created on 2023-01-01 and are open,SELECT * FROM events WHERE created_at = '2023-01-01' AND is_open = 1;
Get all events that were updated on 2023-02-02 and are open,SELECT * FROM events WHERE updated_at = '2023-02-02' AND is_open = 1;
Get all events that were created by user with ID 12345,SELECT * FROM events WHERE user_id = 12345;
Get all events that were updated by user with ID 12345,SELECT * FROM events WHERE updated_by = 12345;
Get the first event in the table,SELECT * FROM events LIMIT 1;
Get the last event in the table,SELECT * FROM events ORDER BY created_at DESC LIMIT 1;
Get all formsettings summarytools that are updated,SELECT * FROM formsettings_summarytools WHERE updated_at IS NOT NULL;
Get all formsettings summarytools that were updated on 2023-02-02,SELECT * FROM formsettings_summarytools WHERE updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345;
Get all formsettings summarytools that were created on 2023-01-01,SELECT * FROM formsettings_summarytools WHERE created_at = '2023-01-01';
Get all formsettings summarytools that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 1;
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 0;
Get the first formsettings summarytool in the table,SELECT * FROM formsettings_summarytools LIMIT 1;
Get the last formsettings summarytool in the table,SELECT * FROM formsettings_summarytools ORDER BY created_at DESC LIMIT 1;
Get all event actions,SELECT * FROM event_actions;
Get all event actions that are done,SELECT * FROM event_actions WHERE date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01,SELECT * FROM event_actions WHERE date_created = '2023-01-01';
Get all event actions that were created by user with ID 12345,SELECT * FROM event_actions WHERE user_id = 12345;
Get all event actions that were updated on 2023-02-02,SELECT * FROM event_actions WHERE updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_actions WHERE user_id = 12345 AND updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and are done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NOT NULL;
Get all event actions that were created by user with ID 12345 and are not done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NULL;
Get all event actions that were created on 2023-01-01 and are done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01 and are not done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NULL;
Get all event staff roles,SELECT * FROM event_staff_roles;
Get all event staff roles that are active,SELECT * FROM event_staff_roles WHERE is_active = 1;
"Get all event staff roles whose name is ""Lead""",SELECT * FROM event_staff_roles WHERE name = 'Lead';
Get all event staff roles that are owned by pharmacy with ID 12345,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345;
Get all event staff roles that were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE created_at = '2023-01-01';
Get all event staff roles that were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all event staff roles that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and are active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 1;
Get all event staff roles that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 0;
Get all hazards that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and are active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 1;
Get all hazards that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 0;
Get the first hazard in the table,SELECT * FROM hazards LIMIT 1;
Get the last hazard in the table,SELECT * FROM hazards ORDER BY created_at DESC LIMIT 1;
Get the hazards that were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE updated_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at BETWEEN '2023-01-01' AND '2023-02-02';
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported, and limited to the first 10 results","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at LIMIT 10;"
"Get all users and the organizations they are employed by, ordered by the user's name, and limited to the first 10 results","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name LIMIT 10;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number, and limited to the first 10 results","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number LIMIT 10;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date, and limited to the first 10 results","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date LIMIT 10;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity, and limited to the first 10 results","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity LIMIT 10;"
"Get all event actions and the staff members who created those actions, ordered by the action's date, and limited to the first 10 results","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date LIMIT 10;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used, and limited to the first 10 results","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all users and the events they have attended, ordered by the number of events the user has attended, and limited to the first 10 results","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization, and limited to the first 10 results","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC LIMIT 10;"
Get all staff members and the events they have been assigned to,"SELECT staff_directory., events. FROM staff_directory LEFT JOIN events ON staff_directory.id = events.staff_id;"
Get all events and the hazards that have been reported at those events,"SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id;"
Get all users and the organizations they are employed by,"SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id;"
Get all assets and the staff members who are responsible for those assets,"SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id;"
Get all events and the pharmacies that hosted those events,"SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id;"
Get all hazards and the pharmacies that have been affected by those hazards,"SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id;"
Get all event actions and the staff members who created those actions,"SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id;"
Get all formsettings summarytools and the events that use those summarytools,"SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id;"
Get all users and the events they have attended,"SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id;"
Get all organizations and the events that have been held at those organizations,"SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id;"
Get all assets,SELECT * FROM assets;
Get all assets that are active,SELECT * FROM assets WHERE active = 1;
Get all assets whose serial number is 123456,SELECT * FROM assets WHERE serial_number = 123456;
Get all assets that are owned by pharmacy with ID 12345,SELECT * FROM assets WHERE pharmacies_id = 12345;
Get all assets that were created on 2023-01-01,SELECT * FROM assets WHERE created_at = '2023-01-01';
Get all assets that were updated on 2023-02-02,SELECT * FROM assets WHERE updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM assets WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all assets that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM assets WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and are active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 1;
Get all assets that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 0;
Get all staff members,SELECT * FROM staff_directory;
Get all staff members who are active,SELECT * FROM staff_directory WHERE is_active = 1;
"Get all staff members whose name contains ""John""",SELECT * FROM staff_directory WHERE full_name LIKE '%John%';
"Get all staff members whose name is ""John Doe""",SELECT * FROM staff_directory WHERE full_name = 'John Doe';
Get all staff members whose ID is 12345,SELECT * FROM staff_directory WHERE id = 12345;
Get all staff members who are employed by pharmacy with ID 12345,SELECT * FROM staff_directory WHERE pharmacies_id = 12345;
Get all staff members who were created on 2023-01-01,SELECT * FROM staff_directory WHERE created_at = '2023-01-01';
Get all staff members who were updated on 2023-02-02,SELECT * FROM staff_directory WHERE updated_at = '2023-02-02';
Get all staff members who are fixed,SELECT * FROM staff_directory WHERE fixed = 1;
Get all staff members who are not fixed,SELECT * FROM staff_directory WHERE fixed = 0;
Get all hazards,SELECT * FROM hazards;
Get all hazards that are active,SELECT * FROM hazards WHERE active = 1;
"Get all hazards whose name is ""Chemical spill""",SELECT * FROM hazards WHERE name = 'Chemical spill';
Get all hazards that are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345;
Get all hazards that were created on 2023-01-01,SELECT * FROM hazards WHERE created_at = '2023-01-01';
Get all hazards that were updated on 2023-02-02,SELECT * FROM hazards WHERE updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Retrieve all records from the staff_directory table,SELECT * FROM staff_directory;
Retrieve all records from the assets table,SELECT * FROM assets;
Retrieve all records from the hazards table,SELECT * FROM hazards;
Retrieve all records from the event_staff_roles table,SELECT * FROM event_staff_roles;
Retrieve all records from the event_actions table,SELECT * FROM event_actions;
Retrieve all records from the formsettings_summarytools table,SELECT * FROM formsettings_summarytools;
Retrieve all records from the events table,SELECT * FROM events;
Retrieve all records from the users table,SELECT * FROM users;
Retrieve all records from the organizations table,SELECT * FROM organizations;
Retrieve all records from the pharmacies table,SELECT * FROM pharmacies;
Retrieve all events with harmt greater than 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt > 50 AND is_open = TRUE;
Find all users with active status and type 'Manager',SELECT * FROM users WHERE active = TRUE AND type = 'Manager';
Get the facilities with organization_id 'Org123' and is_active set to FALSE,SELECT * FROM facilities WHERE organization_id = 'Org123' AND is_active = FALSE;
Retrieve the assets with asset_type_id 'AT006' and pharmacies_id 'Pharma3',SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3';
Retrieve all events created in the last 15 days,SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '15 days';
Retrieve all assets with an active status,SELECT * FROM assets WHERE active = TRUE;
Retrieve all hazards with a description containing the word 'fire',SELECT * FROM hazards WHERE description ILIKE '%fire%';
Retrieve all event staff roles with an order greater than 10,"SELECT * FROM event_staff_roles WHERE \order\"" > 10;"""
Retrieve all event actions with an action_date in the future,SELECT * FROM event_actions WHERE action_date > CURRENT_DATE;
Retrieve all form settings summary tools with a facility_id of 100,SELECT * FROM formsettings_summarytools WHERE facility_id = 100;
Retrieve all events with harmt between 30 and 50,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50;
Retrieve all users with a profile_id of 500,SELECT * FROM users WHERE profiles_id = 500;
Retrieve all organizations with a country_id of 10,SELECT * FROM organizations WHERE countries_id = 10;
Retrieve all pharmacies created after '2022-01-01',SELECT * FROM pharmacies WHERE created_at > '2022-01-01';
Retrieve all events where the harmt is null,SELECT * FROM events WHERE harmt IS NULL;
Retrieve all assets with an asset_type_id of 'AT005' or 'AT007',"SELECT * FROM assets WHERE asset_type_id IN ('AT005', 'AT007');"
Retrieve all hazards with a name starting with 'Safety',SELECT * FROM hazards WHERE name LIKE 'Safety%';
Retrieve all event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3')","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3');"
Retrieve all form settings summary tools with an organization_id of 200,SELECT * FROM formsettings_summarytools WHERE organization_id = 200;
Retrieve all events with harmt not equal to 0,SELECT * FROM events WHERE harmt <> 0;
Retrieve all users with a date_created between '2022-01-01' and '2022-12-31',SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all organizations with a name containing the word 'Healthcare',SELECT * FROM organizations WHERE name ILIKE '%Healthcare%';
Retrieve all pharmacies where date_disabled is not null,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve all events with a harmt greater than 50 ordered by harmt in descending order,SELECT * FROM events WHERE harmt > 50 ORDER BY harmt DESC;
Retrieve all assets with a created_at date in the last 7 days,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days';
Retrieve all hazards with a description not containing the word 'chemical',SELECT * FROM hazards WHERE description NOT ILIKE '%chemical%';
Retrieve all event staff roles with a forms_id between 100 and 200,SELECT * FROM event_staff_roles WHERE forms_id BETWEEN 100 AND 200;
Retrieve all event actions with an updated_at date in the future,SELECT * FROM event_actions WHERE updated_at > CURRENT_TIMESTAMP;
Retrieve all form settings summary tools with a tools_id of 500 or 600,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600);"
Retrieve all events with harmt equal to 0 or 100,SELECT * FROM events WHERE harmt = 0 OR harmt = 100;
Retrieve all users with a roles_id not equal to 1,SELECT * FROM users WHERE roles_id <> 1;
Retrieve all organizations with a created_at date before '2023-01-01',SELECT * FROM organizations WHERE created_at < '2023-01-01';
Retrieve all pharmacies where name starts with 'Pharma' and ends with 'Inc',SELECT * FROM pharmacies WHERE name LIKE 'Pharma%Inc';
Retrieve all events with harmt greater than or equal to 50 and less than 100,SELECT * FROM events WHERE harmt >= 50 AND harmt < 100;
Retrieve all assets with a serial_number containing the digits '123',SELECT * FROM assets WHERE serial_number LIKE '%123%';
Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order,"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 ORDER BY \""order\"" ASC;"""
"Retrieve all event actions with a user_id not in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id NOT IN (100, 200, 300);"
Retrieve all form settings summary tools with an updated_by value of 'Admin',SELECT * FROM formsettings_summarytools WHERE updated_by = 'Admin';
Retrieve all events with a harmt greater than or equal to 50 ordered by harmt in ascending order,SELECT * FROM events WHERE harmt >= 50 ORDER BY harmt ASC;
Retrieve all users with a date_created between '2022-01-01' and '2022-12-31' excluding weekends,SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM date_created) < 6;
Retrieve all organizations with a name starting with 'Medical' and ending with 'Center',SELECT * FROM organizations WHERE name LIKE 'Medical%Center';
Retrieve all pharmacies where activate_at is not null and activated_by is null,SELECT * FROM pharmacies WHERE activate_at IS NOT NULL AND activated_by IS NULL;
Retrieve all events with a harmt not equal to 0 ordered by harmt in descending order,SELECT * FROM events WHERE harmt <> 0 ORDER BY harmt DESC;
Retrieve all assets with an updated_at date in the last 7 days,SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '7 days';
Retrieve all hazards with a description containing either 'fire' or 'explosion',SELECT * FROM hazards WHERE description ILIKE '%fire%' OR description ILIKE '%explosion%';
Retrieve all event staff roles with a forms_id not between 100 and 200,SELECT * FROM event_staff_roles WHERE forms_id NOT BETWEEN 100 AND 200;
Retrieve all event actions with an updated_by value not equal to 'Admin',SELECT * FROM event_actions WHERE updated_by <> 'Admin';
"Retrieve all form settings summary tools with a tools_id not in (500, 600)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600);"
Retrieve all events with harmt equal to 0 and 100,"SELECT * FROM events WHERE harmt IN (0, 100);"
Retrieve all users with a roles_id equal to 1,SELECT * FROM users WHERE roles_id = 1;
Retrieve all organizations with a created_at date after '2023-01-01',SELECT * FROM organizations WHERE created_at > '2023-01-01';
Retrieve all pharmacies where name contains the word 'Pharmacy' and has an 'activated_by' value of 'Admin',SELECT * FROM pharmacies WHERE name ILIKE '%Pharmacy%' AND activated_by = 'Admin';
Retrieve all events with harmt less than 50 or greater than 100,SELECT * FROM events WHERE harmt < 50 OR harmt > 100;
Retrieve all assets with a serial_number starting with 'ABC' or ending with 'XYZ',SELECT * FROM assets WHERE serial_number LIKE 'ABC%' OR serial_number LIKE '%XYZ';
Retrieve all hazards with a created_at date not between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE created_at NOT BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order less than or equal to 5 ordered by name in descending order,"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 ORDER BY name DESC;"""
"Retrieve all event actions with a user_id in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id IN (100, 200, 300);"
Retrieve all form settings summary tools with an updated_by value not equal to 'Admin',SELECT * FROM formsettings_summarytools WHERE updated_by <> 'Admin';
Retrieve all events with a harmt greater than or equal to 50 ordered by date_created in ascending order,SELECT * FROM events WHERE harmt >= 50 ORDER BY date_created ASC;
Retrieve all users with a date_created not between '2022-01-01' and '2022-12-31',SELECT * FROM users WHERE date_created NOT BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all organizations with a name containing the word 'Healthcare' and address containing the word 'Street',SELECT * FROM organizations WHERE name ILIKE '%Healthcare%' AND address ILIKE '%Street%';
Retrieve all pharmacies where activate_at is not null or activated_by is not null,SELECT * FROM pharmacies WHERE activate_at IS NOT NULL OR activated_by IS NOT NULL;
Retrieve all events with a harmt equal to 0 ordered by harmt in ascending order,SELECT * FROM events WHERE harmt = 0 ORDER BY harmt ASC;
Retrieve all assets with an updated_at date in the last 30 days,SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '30 days';
Retrieve all hazards with a description not containing either 'fire' or 'explosion',SELECT * FROM hazards WHERE description NOT ILIKE '%fire%' AND description NOT ILIKE '%explosion%';
"Retrieve all event staff roles with a forms_id not in (100, 200)","SELECT * FROM event_staff_roles WHERE forms_id NOT IN (100, 200);"
Retrieve all event actions with an updated_by value not equal to 'Admin' or 'Manager',"SELECT * FROM event_actions WHERE updated_by NOT IN ('Admin', 'Manager');"
"Retrieve all form settings summary tools with a tools_id not in (500, 600, 700)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600, 700);"
"Retrieve all events with harmt equal to 0, 50, or 100","SELECT * FROM events WHERE harmt IN (0, 50, 100);"
Retrieve all users with a roles_id not equal to 1 or 2,"SELECT * FROM users WHERE roles_id NOT IN (1, 2);"
Retrieve all organizations with a created_at date before '2023-01-01' or after '2023-12-31',SELECT * FROM organizations WHERE created_at < '2023-01-01' OR created_at > '2023-12-31';
Retrieve all pharmacies where name starts with 'Pharma' or ends with 'Inc',SELECT * FROM pharmacies WHERE name LIKE 'Pharma%' OR name LIKE '%Inc';
Retrieve all events with harmt greater than or equal to 50 or less than 10,SELECT * FROM events WHERE harmt >= 50 OR harmt < 10;
Retrieve all assets with a serial_number containing either 'ABC' or 'XYZ',SELECT * FROM assets WHERE serial_number LIKE '%ABC%' OR serial_number LIKE '%XYZ%';
Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31' excluding weekends,SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM created_at) < 6;
Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order and updated_by not equal to 'Admin',"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 AND updated_by <> 'Admin' ORDER BY \""order\"" ASC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days';"
Retrieve all form settings summary tools with an organization_id of 200 and updated_at in the last 30 days,SELECT * FROM formsettings_summarytools WHERE organization_id = 200 AND updated_at >= CURRENT_DATE - INTERVAL '30 days';
Retrieve all events with harmt not equal to 0 and 100 ordered by harmt in descending order and is_open set to TRUE,"SELECT * FROM events WHERE harmt NOT IN (0, 100) AND is_open = TRUE ORDER BY harmt DESC;"
Retrieve all assets with an active status and asset_type_id of 'AT005' or 'AT007',"SELECT * FROM assets WHERE active = TRUE AND asset_type_id IN ('AT005', 'AT007');"
Retrieve all hazards with a description containing the word 'fire' and created_at between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id <> 100 ORDER BY name ASC;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager',"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager');"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id <> 100;"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE;
Retrieve all users with a profile_id of 500 and active status,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01',SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01';
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin',SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin';
Retrieve all events where the harmt is null and is_open set to FALSE,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order,SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC;
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical',SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%';
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 ORDER BY \""order\"" DESC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin',SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin';
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC;
Retrieve all assets with a created_at date in the last 7 days and active status,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC;
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order,"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200);"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin',"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager'","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager');"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 10 rows,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 10;
Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20;
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows,"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200) LIMIT 50;"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC LIMIT 20;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100;
Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows offset by 10,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50 OFFSET 10;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows offset by 5,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20 OFFSET 5;
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows offset by 2,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5 OFFSET 2;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20,SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin' 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10,SELECT * FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows offset by 5,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30 OFFSET 5;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows offset by 5,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20 OFFSET 5;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows offset by 2,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10 OFFSET 2;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows offset by 10,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50 OFFSET 10;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows offset by 5,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50 OFFSET 5;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows offset by 20,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100 OFFSET 20;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows offset by 10,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30 OFFSET 10;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows offset by 5,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC LIMIT 20 OFFSET 5;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows offset by 2,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10 OFFSET 2;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows offset by 30,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100 OFFSET 30;
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20 with only the action_date and updated_by columns,"SELECT action_date, updated_by FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns,"SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns,"SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1' 'Pharma2' 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all staff members from the staff_directory table.,SELECT * FROM staff_directory;
Get the assets with an asset type ID of 123.,SELECT * FROM assets WHERE asset_type_id = 123;
"Find hazards with a name containing the word ""fire"" and created in the last month.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND created_at >= NOW() - INTERVAL 1 MONTH;
Get all event staff roles.,SELECT * FROM event_staff_roles;
Retrieve event actions for a specific user and pharmacy ID.,SELECT * FROM event_actions WHERE user_id = 123 AND user_pharmacy_id = 456;
Find form settings summary tools for a particular facility ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789;
Retrieve events created by a specific user and organization ID.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456;
Get all users with an active status.,SELECT * FROM users WHERE active = 1;
"Find organizations with names containing the word ""hospital.""",SELECT * FROM organizations WHERE name LIKE '%hospital%';
Retrieve pharmacies created after a specific date.,SELECT * FROM pharmacies WHERE created_at > '2023-01-01';
Retrieve the full names and employee IDs of staff members in the staff_directory table who belong to a specific organization.,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = 'your_organization_id';"
Get the serial numbers of assets of a specific asset type that are active and belong to a particular pharmacy.,SELECT serial_number FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
Find hazards created after a specific date and are associated with a particular pharmacy.,SELECT * FROM hazards WHERE created_at > '2023-01-01' AND pharmacies_id = 'your_pharmacy_id';
Retrieve event staff roles with a default flag set to true.,SELECT * FROM event_staff_roles WHERE is_default = 1;
Get event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id';
Find form settings summary tools for a specific facility and organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 'your_facility_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are still open.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1;
Get users with a specific role and belonging to a particular organization.,SELECT * FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id';
Find organizations created after a specific date and located in a particular city.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND city = 'your_city_name';
Retrieve pharmacies activated between two specific dates.,SELECT * FROM pharmacies WHERE activated_by > '2023-01-01' AND activated_by < '2023-07-01';
Retrieve the full names and registration numbers of active users who belong to a specific organization.,"SELECT full_name, reg_number FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Get the names and descriptions of all hazards associated with a particular pharmacy.,"SELECT name, description FROM hazards WHERE pharmacies_id = 'your_pharmacy_id';"
"Find the full names and updated dates of users who have the ""admin"" role.","SELECT users_fullname, updated_at FROM users WHERE roles_id = 'your_role_id' AND profiles_id = 'your_profile_id';"
Get the event IDs and dates for events created by a specific user within a given date range.,"SELECT event_id, date_created FROM events WHERE users_id = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date'"
"Retrieve the full names and updated dates of users who have the ""supervisor"" role and belong to a specific organization.","SELECT users_fullname, updated_at FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id';"
Get the names and descriptions of hazards created by a specific user within the last 30 days.,"SELECT name, description FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAY AND updated_by = 'your_user_id';"
Find the event IDs and dates for events that were closed in the last week.,"SELECT events_id, date_closed FROM event_actions WHERE date_done >= NOW() - INTERVAL 7 DAY;"
Retrieve the names and addresses of organizations located in a specific country.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id';"
Get the staff roles and their associated forms IDs in a specific facility.,"SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Get the list of all organizations that have a country ID of 123.,SELECT * FROM organizations WHERE countries_id = 123;
Find all events that were created by a user with the ID 123.,SELECT * FROM events WHERE users_id = 123;
"Get the list of all pharmacies that have a name containing the word ""hospital"".",SELECT * FROM pharmacies WHERE name LIKE '%hospital%';
Retrieve all users who are associated with a particular organization ID.,SELECT * FROM users WHERE organizations_id = 123;
Find all assets that were created in the last 30 days.,SELECT * FROM assets WHERE created_at >= NOW() - INTERVAL 30 DAY;
Get the list of all hazards that are associated with a particular event ID.,SELECT * FROM hazards WHERE events_id = 123;
"Get the list of all events that have a status of ""open"".",SELECT * FROM events WHERE is_open = 1;
"Find all events that were created in the last 7 days and have a status of ""closed"".",SELECT * FROM events WHERE created_at >= NOW() - INTERVAL 7 DAY AND is_open = 0;
"Get the list of all users who have a role of ""admin"".",SELECT * FROM users WHERE roles_id = 1;
Retrieve all event actions that were performed by a user with the ID 123.,SELECT * FROM event_actions WHERE user_id = 123;
Find all form settings summary tools that were updated in the last 24 hours.,SELECT * FROM formsettings_summarytools WHERE updated_at >= NOW() - INTERVAL 1 DAY;
Get the list of all assets that are associated with a particular pharmacy ID and have an asset type ID of 123.,SELECT * FROM assets WHERE pharmacies_id = 123 AND asset_type_id = 123;
"Get the list of all events that have a type of ""hazard"".",SELECT * FROM events WHERE events_type_id = 1;
Find all hazards that were created by a user with the ID 123.,SELECT * FROM hazards WHERE created_by = 123;
"Get the list of all pharmacies that have a city of ""London"".",SELECT * FROM pharmacies WHERE city = 'London';
"Retrieve all users who are associated with a particular pharmacy ID and have a role of ""admin"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1;
"Find all assets that were updated in the last 24 hours and have a serial number of ""1234567890"".",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890';
"Get the list of all hazards that are associated with a particular event ID and have a name containing the word ""fire"".",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%';
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days.",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", and were created in the last 30 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Find all assets that were updated in the last 24 hours, have a serial number of ""1234567890"", and are associated with a particular pharmacy ID.",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890' AND pharmacies_id = 123;
"Get the list of all hazards that are associated with a particular event ID, have a name containing the word ""fire"", and were created by a user with the ID 123.",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%' AND created_by = 123;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"".",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, and have a status of ""active"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1;
"Find all assets that were updated in the last 24 hours, have a serial number of ""1234567890"", are associated with a particular pharmacy ID, and have a status of ""active"".",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890' AND pharmacies_id = 123 AND is_active = 1;
"Get the list of all hazards that are associated with a particular event ID, have a name containing the word ""fire"", were created by a user with the ID 123, and have a status of ""open"".",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%' AND created_by = 123 AND is_open = 1;
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days and have a status of ""open"".",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND is_open = 1;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days and have a status of ""open"" and were created by a user with the ID 123.",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND is_open = 1 AND created_by = 123;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a city of ""London"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a city of ""London"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a city of ""London"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 14 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 14 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 14 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 14 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 30 days",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 30 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 30 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 60 days, have a status of ""active"", and were created in the last 30 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 60 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 90 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 90 days, have a status of ""active"", and were created in the last 90 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 90 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY
Get the asset types and their corresponding item IDs in a specific pharmacy.,"SELECT full_name, employee_id FROM staff_directory WHERE created_at >= NOW() - INTERVAL 3 MONTH;"
Find hazards with a specific organization hazard ID and associated with a particular pharmacy.,"SELECT asset_type_id, asset_items_id FROM assets WHERE pharmacies_id = 'random_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE organization_hazard_id = 'random_organization_hazard_id' AND pharmacies_id = 'random_pharmacy_id';
Get the event IDs and user IDs of event actions created by a specific user in the last week.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility.,"SELECT events_id, user_id FROM event_actions WHERE user_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 7 DAY;"
Retrieve the users' full names and organizations they belong to.,SELECT * FROM formsettings_summarytools WHERE tools_id = 'random_tool_id' AND facility_id = 'random_facility_id';
Get the names and countries of organizations created after a specific date.,"SELECT users_fullname, organization_id FROM users;"
Find pharmacies with a specific name and activated by a particular user.,"SELECT name, countries_id FROM organizations WHERE created_at > 'random_date';"
Retrieve events created by a specific user and type.,SELECT * FROM pharmacies WHERE name = 'random_pharmacy_name' AND activated_by = 'random_user_id';
Get the users' profiles IDs and their associated roles.,SELECT * FROM events WHERE users_id = 'random_user_id' AND events_type_id = 'random_event_type_id';
"Find organizations with names containing the word ""medical"" and located in a specific city.","SELECT profiles_id, roles_id FROM users;"
Retrieve the pharmacies' names and their associated organizations' names.,SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'random_city_name';
Get the event IDs and dates created by a specific user within the last month.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organizations_id = organizations.sf_id;"
Find users with a specific SF ID and their associated profile IDs.,"SELECT event_id, date_created FROM events WHERE users_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 1 MONTH;"
Retrieve the event staff roles' names and associated form IDs in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'random_sf_id';"
Get the organizations' names and addresses located in a specific country.,"SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find pharmacies created between two specific dates and owned by a particular organization.,"SELECT name, address FROM organizations WHERE countries_id = 'random_country_id';"
Retrieve the events' types and the number of occurrences for each type.,SELECT * FROM pharmacies WHERE created_at BETWEEN 'random_start_date' AND 'random_end_date' AND organizations_id = 'random_organization_id';
Get the staff directory entries with specific IDs and their associated employee IDs.,"SELECT events_type_id, COUNT(*) AS occurrences FROM events GROUP BY events_type_id;"
Retrieve the full names and roles of users who belong to a specific organization.,"SELECT * FROM staff_directory WHERE id IN ('random_id1', 'random_id2', 'random_id3') AND employee_id IS NOT NULL;"
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 120 days.","SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 120 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 120 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 180 days, have a status of ""active"", and were created in the last 120 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 180 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Retrieve the full names and roles of users who belong to a specific organization.,SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Retrieve the full names and email addresses of active users belonging to a specific organization.,"SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
Get the names and descriptions of assets associated with a specific pharmacy.,"SELECT full_name, email FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Find hazards created by a specific user and associated with a particular pharmacy.,"SELECT name, description FROM assets WHERE pharmacies_id = 'your_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE created_by = 'your_user_id' AND pharmacies_id = 'your_pharmacy_id';
"Get the event actions for a specific event ID and user ID, ordered by the action date in descending order.","SELECT name, order FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND facility_id = 'your_facility_id';
Get the users' full names and phone numbers in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""health"" and located in a specific city.","SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.",SELECT * FROM organizations WHERE name LIKE '%health%' AND city = 'your_city_name';
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find pharmacies activated by a specific user within a specific date range.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
Get the organizations' names and trial end dates in ascending order of trial end dates.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Find pharmacies created after a specific date and activated by a particular user.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.","SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.","SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Get the users' full names and their associated roles in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""hospital"" and located in a specific city.","SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Find users with a specific user ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM staff_directory WHERE created_at > 'your_date' AND organization_id = 'your_organization_id';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE active = 1 AND asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';
Find hazards with specific names and descriptions associated with a particular pharmacy.,SELECT * FROM hazards WHERE name = 'your_hazard_name' AND description = 'your_hazard_description' AND pharmacies_id = 'your_pharmacy_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM users WHERE organization_id = 'your_organization_id' AND created_at > 'your_date';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
"Find hazards with names containing the word ""fire"" and descriptions containing the word ""safety"" associated with a particular pharmacy.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND description LIKE '%safety%' AND pharmacies_id = 'your_pharmacy_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
"Retrieve the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Retrieve the users' full names and phone numbers in a specific organization.,"SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset"
"Retrieve the names and addresses of staff members in a specific organization, ordered by full name.","SELECT full_name, address FROM staff_directory WHERE organization_id = 'your_organization_id' ORDER BY full_name;"
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by facility name.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name;"
Get the count of active assets in a specific facility.,SELECT COUNT(*) AS active_asset_count FROM assets WHERE facility_id = 'your_facility_id' AND active = 1;
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by hazard name.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY name;"
"Find the events where a specific user has taken action within a specific date range, ordered by action date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND action_date BETWEEN 'start_date' AND 'end_date' ORDER BY action_date;
"Retrieve the names and order numbers of roles associated with a specific form ID, ordered by order number.","SELECT name, order FROM event_staff_roles WHERE form_id = 'your_form_id' ORDER BY order;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by updated date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND updated_date BETWEEN 'start_date' AND 'end_date' ORDER BY updated_date;
Get the count of open events in a specific facility.,SELECT COUNT(*) AS open_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 1;
"Retrieve the names and addresses of facilities associated with a specific organization, filtered by a specific city, ordered by address.","SELECT name, address FROM facilities WHERE organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY address;"
"Find events with a specific type and created by a specific user, filtered by a specific city, sorted by date created in descending order.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND created_by = 'your_user_id' AND city = 'your_city_name' ORDER BY date_created DESC;
"Retrieve the names and descriptions of tools associated with a specific form ID, filtered by a specific facility, ordered by name in descending order.","SELECT name, description FROM tools WHERE form_id = 'your_form_id' AND facility_id = 'your_facility_id' ORDER BY name DESC;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by event ID.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND event_id BETWEEN 'id1' AND 'id2' ORDER BY event_id;
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by name, limited to 10 records.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name LIMIT 10;"
Retrieve all staff members' full names and employee IDs,"SELECT full_name, employee_id FROM staff_directory;"
Find the staff member with a specific ID,SELECT * FROM staff_directory WHERE id = <staff_id>;
Get the full name and registration number of active staff members,"SELECT full_name, reg_number FROM staff_directory WHERE is_active = true;"
Find staff members belonging to a specific organization,SELECT * FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the count of active staff members,SELECT COUNT(*) FROM staff_directory WHERE is_active = true;
Update the employee ID for a specific staff member,UPDATE staff_directory SET employee_id = <new_employee_id> WHERE id = <staff_id>;
Find all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Select the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Retrieve the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Find staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Select the staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Retrieve the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Select the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Get the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Find the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Get the count of staff members who are not active:,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the distinct organization IDs present in the staff directory,SELECT DISTINCT org_id FROM staff_directory;
Delete a staff member from the directory based on their ID,DELETE FROM staff_directory WHERE id = <staff_id>;
Find the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
List the full names and updated timestamps of recently created staff members,"SELECT full_name, updated_at FROM staff_directory ORDER BY created_at DESC LIMIT 5;"
List the employee IDs and registration numbers of active staff members belonging to a specific organization,"SELECT employee_id, reg_number FROM staff_directory WHERE is_active = true AND org_id = <organization_id>;"
List the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Retrieve the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the full names and employee IDs of staff members with a specific official user ID,"SELECT full_name, employee_id FROM staff_directory WHERE official_user_id = <official_user_id>;"
Retrieve the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
List the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Find the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Retrieve the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
List the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Select the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Find all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Select all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Retrieve the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Select the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Get the count of staff members in the staff directory,SELECT COUNT(*) FROM staff_directory;
Retrieve the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Select the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
List the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Find all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
List all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Select all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Get the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Get the distinct pharmacy IDs present in the staff directory,"SELECT full_name, official_user_id FROM staff_directory;"
Retrieve the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Select the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Get the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Find all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
List all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Select all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Get the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Select the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
List the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Retrieve the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Select the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Find all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Select all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Get the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Select the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Retrieve the full names and active statuses of staff members,"SELECT full_name, is_active FROM staff_directory;"
Get the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Select the staff members who are locums (temporary replacements) and have a specific full name,SELECT * FROM staff_directory WHERE locum_full_name = '<locum_full_name>';
Select the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Find staff members who are not active and have a specific registration number,SELECT * FROM staff_directory WHERE is_active = false AND reg_number = '<registration_number>';
Get the full names and creation timestamps of staff members working at a specific pharmacy,"SELECT full_name, created_at FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;"
Retrieve the full names and employee IDs of staff members belonging to a specific organization,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = <organization_id>;"
Get the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Select the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Find all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Select all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
List all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Retrieve the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the count of staff members who work at a specific pharmacy,SELECT COUNT(*) FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Select the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
List the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Find all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Select all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Get the distinct official user IDs of staff members belonging to a specific organization,SELECT DISTINCT official_user_id FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Select the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
List the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Retrieve the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Get the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
List the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Find all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Select all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Select the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Retrieve all pharmacies,SELECT * FROM pharmacies;
Select all from pharmacies,SELECT * FROM pharmacies;
Retrieve the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Select the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Retrieve the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
List the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve the pharmacies that were activated by a specific user,SELECT * FROM pharmacies WHERE activated_by = 'user_id';
Retrieve the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
Select the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
List the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
"Retrieve all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
"Select all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Select the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Get the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Retrieve the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Select the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Get the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Retrieve the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Select the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Get the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Retrieve the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
Select the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
"Retrieve the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Get the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Select the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
Retrieve the names of all pharmacies,SELECT name FROM pharmacies;
Get the names of all pharmacies,SELECT name FROM pharmacies;
Select the names of all pharmacies,SELECT name FROM pharmacies;
Retrieve the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Get the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Retrieve the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Select the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
List the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Retrieve the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Get the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Select the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Retrieve the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
Select the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
"Retrieve the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
"Select the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
Retrieve the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Select the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Retrieve the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Select the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Retrieve the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Get all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Select all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Retrieve the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
Select the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
"Retrieves all rows from the ""pharmacies"" table where the ""activate_at"" column falls between the dates '2023-06-01' and '2023-06-30'",SELECT * FROM pharmacies WHERE DATE(activate_at) BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies activated in the morning (before 12 PM),SELECT * FROM pharmacies WHERE EXTRACT(HOUR FROM activate_at) < 12;
Retrieve the pharmacies activated on weekends (Saturday or Sunday),"SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) IN (0, 6);"
Retrieve the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Get the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Select the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Retrieve the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Select the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Get the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Retrieve the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Get the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Retrieve pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Get pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Select pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Retrieve pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Get the  pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Select the pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Get pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Retrieve pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select the pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select pharmacies with both activation and enablement dates,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND activate_at IS NOT NULL;
Retrieve pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Select the pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Retrieve pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
Select the pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
"Select all columns from the ""organizations"" table",SELECT * FROM organizations;
"Retrieve all columns from the ""organizations"" table",SELECT * FROM organizations;
"Select only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Get only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Select distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
"Get the distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
Select organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Get organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Select organizations located in a new york city,SELECT * FROM organizations WHERE city = 'New York';
Retrieve the organizations located in a New York city,SELECT * FROM organizations WHERE city = 'New York';
Select organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Get the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Get the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with addresses in a specific country,SELECT * FROM organizations WHERE countries_id = <country_id>;
Select organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Retrieve the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Get the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
"Select organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Select organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Get the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Retrieve the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
Select organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Retrieve the organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Select organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Retrieve the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Get the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
"Select organizations with names containing the word ""Tech""",SELECT * FROM organizations WHERE name LIKE '%Tech%';
"Select organizations located in cities starting with the letter ""C""",SELECT * FROM organizations WHERE city LIKE 'C%';
"Select organizations located in cities starting with the letter ""S""",SELECT * FROM organizations WHERE city LIKE 'S%';
"Select organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Select organizations created in the last 30 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY city;"
"Select organizations with trial periods ending in the next 7 days, ordered by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY city;"
"Select organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Retrieve the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Select organizations with trial periods ending in the next 7 days, located in London","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city = 'London';"
"Select organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Select organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Retrieve the organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Select organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Select organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Select organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
"Get the organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
Select organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
Retrieve the organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
"Select organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Get the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Retrieve the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Select organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Retrieve the organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Select organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
"Retrieve the organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
Select organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
Retrieve the organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
"Select organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Select organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Retrieve the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Get the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Select organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Retrieve the organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Select organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
Select organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get the organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
"Select organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Retrieve the  organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
Select organizations with trial periods ending in the future and located in a San Francisco,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
Retrieve the organizations with trial periods ending in the future and located in a specific city,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
"Select organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Retrieve the organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Select organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Retrieve the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Get the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Select organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Get the organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Select organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Select organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Retrieve the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Get the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Select organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Select organizations with names starting with the letter ""A"" or ""B"" and located in cities with more than 3 organizations",SELECT * FROM organizations WHERE (name LIKE 'A%' OR name LIKE 'B%') AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 3);
"Select organizations with trial periods ending in the next 30 days and located in a specific country, ordered by trial end date and then by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at, city;"
Retrieve all users with active status,SELECT * FROM users WHERE active = true;
Select all users with active status,SELECT * FROM users WHERE active = true;
Get all users with active status.,SELECT * FROM users WHERE active = true;
Retrieve all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Select all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Retrieve all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Select all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Get all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Retrieve all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Select all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Retrieve active users,SELECT * FROM users WHERE active = 1;
Select all the active users,SELECT * FROM users WHERE active = 1;
Retrieve users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Select users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Select users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Get users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Retrieve users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Select the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Get the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Retrieve users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Select the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Get the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Retrieve users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Select the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Get the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Retrieve users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Select the users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Retrieve active users where profile ID is 1,SELECT * FROM users WHERE profiles_id =1  AND active = 1;
Retrieve users with a specific role ID and updated in the last 30 days,SELECT * FROM users WHERE roles_id = <role_id> AND date_updated >= NOW() - INTERVAL 30 DAY;
Retrieve all events,SELECT * FROM events;
Select all events,SELECT * FROM events;
Retrieve the full names of users associated with events,SELECT users_fullname FROM events;
Select the full names of users associated with events,SELECT users_fullname FROM events;
Get the full names of users associated with events,SELECT users_fullname FROM events;
Retrieve the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Select  the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Get the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Retrieve the organizations associated with events,SELECT organization_id FROM events;
Select the organizations associated with events,SELECT organization_id FROM events;
Get the organizations associated with events,SELECT organization_id FROM events;
Retrieve the types of events,SELECT events_type_id FROM events;
Select  the types of events,SELECT events_type_id FROM events;
Get the types of events,SELECT events_type_id FROM events;
Retrieve the prescribers involved in events,SELECT prescribers_id FROM events;
Select the prescribers involved in events,SELECT prescribers_id FROM events;
List the prescribers involved in events,SELECT prescribers_id FROM events;
Retrieve the reporters of events,SELECT reporters_id FROM events;
Select  the reporters of events,SELECT reporters_id FROM events;
Retrieve the misuses associated with events,SELECT misuses_id FROM events;
Select  the misuses associated with events,SELECT misuses_id FROM events;
Get the misuses associated with events,SELECT misuses_id FROM events;
Retrieve the open events,SELECT * FROM events WHERE is_open = true;
Select the open events,SELECT * FROM events WHERE is_open = true;
Get the open events,SELECT * FROM events WHERE is_open = true;
Retrieve the closed events,SELECT * FROM events WHERE is_open = false;
Select the closed events,SELECT * FROM events WHERE is_open = false;
Get the closed events,SELECT * FROM events WHERE is_open = false;
Retrieve the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Select the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Get the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Retrieve the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Select the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Get the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Retrieve all form settings summary tools,SELECT * FROM formsettings_summarytools;
Select all form settings summary tools,SELECT * FROM formsettings_summarytools;
Get all form settings summary tools,SELECT * FROM formsettings_summarytools;
Retrieve the tools where id is 2,SELECT * FROM formsettings_summarytools WHERE tools_id = 2;
Retrieve the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Select the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Retrieve the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = 1;
Select the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_id>;
Retrieve the form settings updated after a specific date,SELECT * FROM formsettings_summarytools WHERE updated_at > '<date>';
Retrieve the form settings updated within a specific date range,SELECT * FROM formsettings_summarytools WHERE updated_at BETWEEN '<start_date>' AND '<end_date>';
Retrieve the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Select  the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Get the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Retrieve the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Select the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Get the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Select the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Get the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Retrieve the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Select the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Get the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
"Retrieve the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
"Select the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
Retrieve the distinct form IDs and facility IDs from the form settings,"SELECT DISTINCT forms_id, facility_id FROM formsettings_summarytools;"
"Retrieve the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Select the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Get the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
Retrieve the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Select the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Get the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the distinct organization IDs from the form settings,SELECT DISTINCT organization_id FROM formsettings_summarytools;
Retrieve the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Get the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
Select  the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
"Retrieve the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Select the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Get the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
Retrieve the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Select the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Select the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Get the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Retrieve the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Select the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Retrieve the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Select the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Get the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Retrieve the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Select the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Get the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Retrieve the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Select the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Get the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Retrieve the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Select the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Get the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Retrieve the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Select the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Get the average count of form settings per facility,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Retrieve the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Select the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Get the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Retrieve the sum of counts for each facility,"SELECT facility_id, SUM(count) AS total_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery GROUP BY facility_id;"
Retrieve the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select all event actions,SELECT * FROM event_actions;
Retrieve all event actions,SELECT * FROM event_actions;
Get all the event actions,SELECT * FROM event_actions;
Select event actions where user id is 1,SELECT * FROM event_actions WHERE user_id =1;
Select event actions for a specific user,SELECT * FROM event_actions WHERE user_id = <user_id>;
Select event actions for a specific pharmacy,SELECT * FROM event_actions WHERE user_pharmacy_id = <user_pharmacy_id>;
Select event actions created on a specific date,SELECT * FROM event_actions WHERE date_created = <date_created>;
Select event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Retreive event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Get the event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Inner Join between event_actions and users table on user_id,SELECT * FROM event_actions INNER JOIN user ON event_actions.user_id = users.user_id;
Inner Join between event_actions and users table on user_id and aggregate count of event_actions,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate average of distinct event IDs","SELECT users.*, pharmacy.*, AVG(DISTINCT event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
Inner Join between event_actions and users table on user_id and aggregate count of event_actions with a specific date,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created = '2023-07-16' GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions with a specific user ID,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions with a specific date range,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created BETWEEN '2023-07-01' AND '2023-07-15' GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions with a specific user ID,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions with a specific pharmacy ID","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs with a specific event ID","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.events_id = 54321 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs with a specific user ID and pharmacy ID","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE users.user_id = 12345 AND pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
Count the total number of event actions,SELECT COUNT(*) AS total_actions FROM event_actions;
Count the number of event actions for each user,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id;"
Calculate the average number of event actions per user,"SELECT AVG(total_actions) AS average_actions per_user  FROM (SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id) AS subquery;"
Find the user with the highest number of event actions,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_id   ORDER BY total_actions DESC LIMIT 1;"
Calculate the total number of event actions per date created,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created;"
Find the date with the highest number of event actions,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created ORDER BY total_actions DESC LIMIT 1;"
Calculate the average time taken to complete event actions,"SELECT AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions;"
Calculate the maximum time taken to complete an event action,"SELECT MAX(DATEDIFF(date_done, action_date)) AS max_completion_time FROM event_actions;"
Calculate the minimum time taken to complete an event action,"SELECT MIN(DATEDIFF(date_done, action_date)) AS min_completion_time FROM event_actions;"
Find the user who updated the most event actions,"SELECT updated_by, COUNT(*) AS total_updated_actions FROM event_actions GROUP BY updated_by  ORDER BY total_updated_actions DESC LIMIT 1;"
Calculate the average number of event actions per user pharmacy,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY  user_pharmacy_id;"
Find the user pharmacy with the highest number of event actions,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_pharmacy_id ORDER BY total_actions DESC  LIMIT 1;"
Calculate the total number of event actions per month,"SELECT DATE_FORMAT(date_created, '%Y-%m') AS month, COUNT(*) AS total_actions FROM event_actions GROUP BY month;"
Calculate the average number of event actions per day of the week,"SELECT DAYNAME(date_created) AS day_of_week, COUNT(*) AS total_actions FROM event_actions GROUP BY day_of_week;"
Calculate the average time between action and completion for each user,"SELECT user_id, AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions GROUP BY user_id;"
Calculate the total number of event actions per user and user pharmacy,"SELECT user_id, user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id, user_pharmacy_id;"
Retrieve all event staff roles,SELECT * FROM event_staff_roles;
Select all event staff roles,SELECT * FROM event_staff_roles;
Get all event staff roles,SELECT * FROM event_staff_roles;
Retrieve event staff role by name,SELECT * FROM event_staff_roles WHERE name = 'RoleName';
Retrieve event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Select event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Get event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Retrieve event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 'FormID';
Select event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 1;
Retrieve event staff roles updated by user id 1,SELECT * FROM event_staff_roles WHERE updates_by = 1;
Retrieve the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Select the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Get the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Retrieve the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Select the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the count of event staff roles,SELECT COUNT(*) FROM event_staff_roles;
Retrieve the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Select the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Get the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Retrieve the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Select the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Get the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Retrieve the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Select the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Get the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Retrieve the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Select the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Get the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Retrieve the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Select the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Get the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Retrieve event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Select event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Retrieve event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Select event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Retrieve the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Select the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Get the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Retrieve event staff roles with an order greater than 10,SELECT * FROM event_staff_roles WHERE order > 10;
Retrieve the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Select the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Get the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
"Retrieve event staff roles with names ending with ""a""",SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Select the event staff roles with names ending with A,SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Retrieve event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
Select the event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
"Retrieve event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Select the event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Retrieve the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Select the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Get the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
Select the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Get the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Retrieve the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Select the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Get the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Retrieve the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Select the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Get the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Retrieve event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Select the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Get the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
"Select the event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Get the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Retrieve the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
Select the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
Retrieve the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Select the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Get the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Retrieve event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
Select the event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve the count of event staff roles for each facility ID, and order the result by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Select the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Get the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Retrieve event staff roles with order values greater 5, ordered by order",SELECT * FROM event_staff_roles WHERE order > 5 ORDER BY order;
"Retrieve the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
"Select the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT DISTINCT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select all hazards,SELECT * FROM hazards;
Select hazards by their names,SELECT * FROM hazards WHERE name = 'your_hazard_name';
Select hazards where organization hazard ID is 1,SELECT * FROM hazards WHERE organization_hazard_id = 1;
Select hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Retrieve the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Get the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Select the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Retrieve the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Get the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Select hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Retrieve the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Get the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Select hazards with null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Retrieve the hazards with null pharmacy IDs:,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Select hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Retrieve the hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Select hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Get hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
List the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select hazards updated within the last 6 months,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Retrieve the hazards updated within the last 6 months:,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Get the count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Calculate the average number of hazards per pharmacy,SELECT AVG(pharmacies_id) AS avg_hazards_per_pharmacy FROM hazards;
Find the maximum created date among hazards,SELECT MAX(created_at) AS max_created_date FROM hazards;
Determine the minimum updated date among hazards,SELECT MIN(updated_at) AS min_updated_date FROM hazards;
Calculate the sum of pharmacies' IDs for all hazards,SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards;
Calculate the average length of hazard descriptions,SELECT AVG(LENGTH(description)) AS avg_description_length FROM hazards;
Determine the maximum number of hazards created in a single day,SELECT COUNT(*) AS max_hazards_created FROM hazards GROUP BY DATE(created_at) ORDER BY max_hazards_created DESC LIMIT 1;
Find the minimum number of hazards updated in a single day,SELECT COUNT(*) AS min_hazards_updated FROM hazards GROUP BY DATE(updated_at) ORDER BY min_hazards_updated ASC LIMIT 1;
Calculate the average difference in days between created and updated dates for hazards,"SELECT AVG(DATEDIFF(updated_at, created_at)) AS avg_days_difference FROM hazards;"
Determine the sum of pharmacy IDs for hazards updated within the last 30 days,"SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Calculate the total number of hazards for each pharmacy,"SELECT pharmacies_id, COUNT(*) AS total_hazards FROM hazards GROUP BY pharmacies_id;"
Determine the sum of pharmacy IDs for hazards with a specific name and created within the last 30 days,"SELECT name, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE name = 'your_hazard_name' AND created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY name;"
Calculate the average number of hazards per week,"SELECT YEARWEEK(created_at) AS week, COUNT(*) AS hazards_per_week FROM hazards GROUP BY week;"
Calculate the maximum difference in days between created and updated dates for hazards,"SELECT MAX(DATEDIFF(updated_at, created_at)) AS max_days_difference FROM hazards;"
Calculate the minimum difference in days between created and updated dates for hazards,"SELECT MIN(DATEDIFF(updated_at, created_at)) AS min_days_difference FROM hazards;"
Find the maximum length of hazard descriptions,SELECT MAX(LENGTH(description)) AS max_description_length FROM hazards;
Determine the average number of hazards per day,"SELECT DATE(created_at) AS created_date, COUNT(*) AS hazards_per_day FROM hazards GROUP BY created_date;"
Find the minimum number of hazards updated on a specific date,"SELECT DATE(updated_at) AS updated_date, COUNT(*) AS min_hazards_updated FROM hazards GROUP BY updated_date ORDER BY min_hazards_updated ASC LIMIT 1;"
Calculate the total number of hazards created per month,"SELECT YEAR(created_at) AS year, MONTH(created_at) AS month, COUNT(*) AS hazards_count FROM hazards GROUP BY year, month;"
Calculate the sum of pharmacy IDs for hazards created in each year,"SELECT YEAR(created_at) AS year, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards GROUP BY year;"
Find the average difference in hours between created and updated timestamps for hazards,"SELECT AVG(TIMESTAMPDIFF(HOUR, created_at, updated_at)) AS avg_hours_difference FROM hazards;"
Show all hazards with description containing the word 'safety',SELECT * FROM hazards WHERE description LIKE '%safety%';
List all pharmacies with organization_id 'OrgXYZ' or countries_id 'USA',SELECT * FROM pharmacies WHERE organization_id = 'OrgXYZ' OR countries_id = 'USA';
Get the events with harmt less than 100 and is_open set to FALSE,SELECT * FROM events WHERE harmt < 100 AND is_open = FALSE;
Retrieve all users with type 'Employee' and active set to TRUE,SELECT * FROM users WHERE type = 'Employee' AND active = TRUE;
Find staff members with the full_name 'Jane Doe' or locum_full_name 'John Smith',SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' OR locum_full_name = 'John Smith';
Get the assets with active status and asset_type_id 'AT007',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT007';
Retrieve events with harmt greater than 100 or is_open set to TRUE,SELECT * FROM events WHERE harmt > 100 OR is_open = TRUE;
List all users from organization_id 'Org789' and type 'Employee',SELECT * FROM users WHERE organization_id = 'Org789' AND type = 'Employee';
Get the pharmacies with created_at after '2023-01-01' and updated_at before '2023-06-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND updated_at < '2023-06-01';
Retrieve the organizations with trial_ends_at before '2023-12-31' or date_created after '2023-01-01',SELECT * FROM organizations WHERE trial_ends_at < '2023-12-31' OR date_created > '2023-01-01';
Show all events from users with roles_id 'Role123' and updated_at after '2023-07-01',SELECT * FROM events WHERE users_id IN (SELECT sf_id FROM users WHERE roles_id = 'Role123') AND updated_at > '2023-07-01';
Find the facilities with the oldest event and their corresponding event name,"SELECT facility.*, events.event_name FROM facility JOIN events ON facility.id = events.facility_id WHERE events.date_created = (SELECT MIN(date_created) FROM events);"
Get the users with type 'Admin' and profiles_id 'P789',SELECT * FROM users WHERE type = 'Admin' AND profiles_id = 'P789';
Retrieve all assets with asset_type_id 'AT008' or asset_type_id 'AT009',SELECT * FROM assets WHERE asset_type_id = 'AT008' OR asset_type_id = 'AT009';
List all users with roles_id 'Role789' and official_user_id 'OU002',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU002';
Get the events with harmt less than 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt < 50 AND is_open = TRUE;
Retrieve all staff members with official_user_id 'OU003' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU003' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT010',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT010';
Find events with harmt greater than 200 and is_open set to FALSE,SELECT * FROM events WHERE harmt > 200 AND is_open = FALSE;
Get all users with profiles_id 'P012' or type 'Admin',SELECT * FROM users WHERE profiles_id = 'P012' OR type = 'Admin';
List all assets associated with pharmacy 'Pharma4' or 'Pharma5',SELECT * FROM assets WHERE pharmacies_id = 'Pharma4' OR pharmacies_id = 'Pharma5';
Show all staff members from organization 'Org012' with is_active set to TRUE,SELECT * FROM staff_directory WHERE org_id = 'Org012' AND is_active = TRUE;
Find the facilities with trial_ends_at after '2023-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-06-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-06-01';
Retrieve all assets with asset_type_id 'AT011' or asset_type_id 'AT012',SELECT * FROM assets WHERE asset_type_id = 'AT011' OR asset_type_id = 'AT012';
List all users with roles_id 'Role234' and official_user_id 'OU003',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU003';
Retrieve all staff members with official_user_id 'OU004' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU004' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT013',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT013';
Get all users with profiles_id 'P013' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P013' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma6' or 'Pharma7',SELECT * FROM assets WHERE pharmacies_id = 'Pharma6' OR pharmacies_id = 'Pharma7';
Find the facilities with trial_ends_at after '2023-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-07-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-07-01';
Retrieve all assets with asset_type_id 'AT014' or asset_type_id 'AT015',SELECT * FROM assets WHERE asset_type_id = 'AT014' OR asset_type_id = 'AT015';
List all users with roles_id 'Role345' and official_user_id 'OU004',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU004';
Retrieve all staff members with official_user_id 'OU005' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU005' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT016',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT016';
Get all users with profiles_id 'P014' or type 'Employee',SELECT * FROM users WHERE profiles_id = 'P014' OR type = 'Employee';
List all assets associated with pharmacy 'Pharma8' or 'Pharma9',SELECT * FROM assets WHERE pharmacies_id = 'Pharma8' OR pharmacies_id = 'Pharma9';
Get the names of all users with type 'Manager' or roles_id 'Role345',SELECT full_name FROM users WHERE type = 'Manager' OR roles_id = 'Role345';
Find the facilities with trial_ends_at after '2023-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-08-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-08-01';
Retrieve all assets with asset_type_id 'AT017' or asset_type_id 'AT018',SELECT * FROM assets WHERE asset_type_id = 'AT017' OR asset_type_id = 'AT018';
List all users with roles_id 'Role456' and official_user_id 'OU005',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU005';
Retrieve all staff members with official_user_id 'OU006' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU006' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT019',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT019';
Get all users with profiles_id 'P015' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P015' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma10' or 'Pharma11',SELECT * FROM assets WHERE pharmacies_id = 'Pharma10' OR pharmacies_id = 'Pharma11';
Find the facilities with trial_ends_at after '2023-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-09-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-09-01';
Retrieve all assets with asset_type_id 'AT020' or asset_type_id 'AT021',SELECT * FROM assets WHERE asset_type_id = 'AT020' OR asset_type_id = 'AT021';
Get all users with profiles_id 'P016' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P016' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma12' or 'Pharma13',SELECT * FROM assets WHERE pharmacies_id = 'Pharma12' OR pharmacies_id = 'Pharma13';
Find the facilities with trial_ends_at after '2023-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-10-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-10-01';
Retrieve all assets with asset_type_id 'AT023' or asset_type_id 'AT024',SELECT * FROM assets WHERE asset_type_id = 'AT023' OR asset_type_id = 'AT024';
List all users with roles_id 'Role678' and official_user_id 'OU007',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU007';
Retrieve all staff members with official_user_id 'OU008' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU008' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT025',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT025';
Get all users with profiles_id 'P017' or type 'Employee',SELECT * FROM users WHERE profiles_id = 'P017' OR type = 'Employee';
List all assets associated with pharmacy 'Pharma14' or 'Pharma15',SELECT * FROM assets WHERE pharmacies_id = 'Pharma14' OR pharmacies_id = 'Pharma15';
Get the names of all users with type 'Manager' or roles_id 'Role678',SELECT full_name FROM users WHERE type = 'Manager' OR roles_id = 'Role678';
Find the facilities with trial_ends_at after '2023-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-11-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-11-01';
Retrieve all assets with asset_type_id 'AT026' or asset_type_id 'AT027',SELECT * FROM assets WHERE asset_type_id = 'AT026' OR asset_type_id = 'AT027';
List all users with roles_id 'Role789' and official_user_id 'OU008',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU008';
Retrieve all staff members with official_user_id 'OU009' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU009' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT028',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT028';
Get all users with profiles_id 'P018' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P018' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma16' or 'Pharma17',SELECT * FROM assets WHERE pharmacies_id = 'Pharma16' OR pharmacies_id = 'Pharma17';
Find the facilities with trial_ends_at after '2024-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-01';
Retrieve all assets with asset_type_id 'AT029' or asset_type_id 'AT030',SELECT * FROM assets WHERE asset_type_id = 'AT029' OR asset_type_id = 'AT030';
List all users with roles_id 'Role890' and official_user_id 'OU009',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU009';
Retrieve all staff members with official_user_id 'OU010' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU010' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT031',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT031';
Get all users with profiles_id 'P019' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P019' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma18' or 'Pharma19',SELECT * FROM assets WHERE pharmacies_id = 'Pharma18' OR pharmacies_id = 'Pharma19';
Find the facilities with trial_ends_at after '2024-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-02',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-02';
Retrieve all assets with asset_type_id 'AT032' or asset_type_id 'AT033',SELECT * FROM assets WHERE asset_type_id = 'AT032' OR asset_type_id = 'AT033';
List all users with roles_id 'Role901' and official_user_id 'OU010',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU010';
List all users with roles_id 'Role123' and official_user_id 'OU012',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU012';
Retrieve all staff members with official_user_id 'OU013' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU013' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT040',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT040';
Get all users with profiles_id 'P022' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P022' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma24' or 'Pharma25',SELECT * FROM assets WHERE pharmacies_id = 'Pharma24' OR pharmacies_id = 'Pharma25';
Find the facilities with trial_ends_at after '2024-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-05',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-05';
Retrieve all assets with asset_type_id 'AT041' or asset_type_id 'AT042',SELECT * FROM assets WHERE asset_type_id = 'AT041' OR asset_type_id = 'AT042';
List all users with roles_id 'Role234' and official_user_id 'OU013',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU013';
Retrieve all staff members with official_user_id 'OU014' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU014' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT043',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT043';
Get all users with profiles_id 'P023' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P023' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma26' or 'Pharma27',SELECT * FROM assets WHERE pharmacies_id = 'Pharma26' OR pharmacies_id = 'Pharma27';
Find the facilities with trial_ends_at after '2024-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-06',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-06';
Retrieve all assets with asset_type_id 'AT044' or asset_type_id 'AT045',SELECT * FROM assets WHERE asset_type_id = 'AT044' OR asset_type_id = 'AT045';
List all users with roles_id 'Role345' and official_user_id 'OU014',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU014';
Retrieve all staff members with official_user_id 'OU015' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU015' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT046',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT046';
Get all users with profiles_id 'P024' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P024' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma28' or 'Pharma29',SELECT * FROM assets WHERE pharmacies_id = 'Pharma28' OR pharmacies_id = 'Pharma29';
Find the facilities with trial_ends_at after '2024-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-07',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-07';
Retrieve all assets with asset_type_id 'AT047' or asset_type_id 'AT048',SELECT * FROM assets WHERE asset_type_id = 'AT047' OR asset_type_id = 'AT048';
List all users with roles_id 'Role456' and official_user_id 'OU015',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU015';
Retrieve all staff members with official_user_id 'OU016' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU016' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT049',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT049';
Get all users with profiles_id 'P025' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P025' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma30' or 'Pharma31',SELECT * FROM assets WHERE pharmacies_id = 'Pharma30' OR pharmacies_id = 'Pharma31';
Find the facilities with trial_ends_at after '2024-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-08',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-08';
Retrieve all assets with asset_type_id 'AT050' or asset_type_id 'AT051',SELECT * FROM assets WHERE asset_type_id = 'AT050' OR asset_type_id = 'AT051';
List all users with roles_id 'Role567' and official_user_id 'OU016',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU016';
Retrieve all staff members with official_user_id 'OU017' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU017' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT052',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT052';
Get all users with profiles_id 'P026' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P026' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma32' or 'Pharma33',SELECT * FROM assets WHERE pharmacies_id = 'Pharma32' OR pharmacies_id = 'Pharma33';
Find the facilities with trial_ends_at after '2024-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-09',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-09';
Retrieve all assets with asset_type_id 'AT053' or asset_type_id 'AT054',SELECT * FROM assets WHERE asset_type_id = 'AT053' OR asset_type_id = 'AT054';
List all users with roles_id 'Role678' and official_user_id 'OU017',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU017';
Retrieve all staff members with official_user_id 'OU018' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU018' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT055',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT055';
Get all users with profiles_id 'P027' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P027' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma34' or 'Pharma35',SELECT * FROM assets WHERE pharmacies_id = 'Pharma34' OR pharmacies_id = 'Pharma35';
Find the facilities with trial_ends_at after '2024-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-10',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-10';
Retrieve all assets with asset_type_id 'AT056' or asset_type_id 'AT057',SELECT * FROM assets WHERE asset_type_id = 'AT056' OR asset_type_id = 'AT057';
List all users with roles_id 'Role789' and official_user_id 'OU018',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU018';
Retrieve all staff members with official_user_id 'OU019' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU019' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT058',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT058';
Get all users with profiles_id 'P028' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P028' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma36' or 'Pharma37',SELECT * FROM assets WHERE pharmacies_id = 'Pharma36' OR pharmacies_id = 'Pharma37';
Find the facilities with trial_ends_at after '2024-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-11',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-11';
Retrieve all assets with asset_type_id 'AT059' or asset_type_id 'AT060',SELECT * FROM assets WHERE asset_type_id = 'AT059' OR asset_type_id = 'AT060';
List all users with roles_id 'Role890' and official_user_id 'OU019',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU019';
Retrieve all staff members with official_user_id 'OU020' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU020' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT061',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT061';
Get all users with profiles_id 'P029' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P029' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma38' or 'Pharma39',SELECT * FROM assets WHERE pharmacies_id = 'Pharma38' OR pharmacies_id = 'Pharma39';
Find the facilities with trial_ends_at after '2024-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-12',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-12';
Retrieve all assets with asset_type_id 'AT062' or asset_type_id 'AT063',SELECT * FROM assets WHERE asset_type_id = 'AT062' OR asset_type_id = 'AT063';
List all users with roles_id 'Role901' and official_user_id 'OU020',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU020';
Retrieve all staff members with official_user_id 'OU021' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU021' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT064',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT064';
Get all users with profiles_id 'P030' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P030' OR type = 'Manager';
Retrieve the facilities with organization_id 'Org109' and is_active set to FALSE,SELECT * FROM facilities WHERE organization_id = 'Org109' AND is_active = FALSE;
List all assets associated with pharmacy 'Pharma40' or 'Pharma41',SELECT * FROM assets WHERE pharmacies_id = 'Pharma40' OR pharmacies_id = 'Pharma41';
Show all staff members from organization 'Org109' with is_active set to TRUE,SELECT * FROM staff_directory WHERE org_id = 'Org109' AND is_active = TRUE;
Find the facilities with trial_ends_at after '2025-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-13',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-13';
Retrieve all assets with asset_type_id 'AT065' or asset_type_id 'AT066',SELECT * FROM assets WHERE asset_type_id = 'AT065' OR asset_type_id = 'AT066';
List all users with roles_id 'Role012' and official_user_id 'OU021',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU021';
Retrieve all staff members with official_user_id 'OU022' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU022' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT067',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT067';
Get all users with profiles_id 'P031' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P031' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma42' or 'Pharma43',SELECT * FROM assets WHERE pharmacies_id = 'Pharma42' OR pharmacies_id = 'Pharma43';
Find the facilities with trial_ends_at after '2025-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-14',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-14';
Retrieve all assets with asset_type_id 'AT068' or asset_type_id 'AT069',SELECT * FROM assets WHERE asset_type_id = 'AT068' OR asset_type_id = 'AT069';
List all users with roles_id 'Role123' and official_user_id 'OU022',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU022';
Retrieve all staff members with official_user_id 'OU023' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU023' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT070',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT070';
Get all users with profiles_id 'P032' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P032' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma44' or 'Pharma45',SELECT * FROM assets WHERE pharmacies_id = 'Pharma44' OR pharmacies_id = 'Pharma45';
Find the facilities with trial_ends_at after '2025-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-03-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-15',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-15';
Retrieve all assets with asset_type_id 'AT071' or asset_type_id 'AT072',SELECT * FROM assets WHERE asset_type_id = 'AT071' OR asset_type_id = 'AT072';
List all users with roles_id 'Role234' and official_user_id 'OU023',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU023';
Retrieve all staff members with official_user_id 'OU024' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU024' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT073',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT073';
Get all users with profiles_id 'P033' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P033' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma46' or 'Pharma47',SELECT * FROM assets WHERE pharmacies_id = 'Pharma46' OR pharmacies_id = 'Pharma47';
Find the facilities with trial_ends_at after '2025-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-04-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-16',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-16';
Retrieve all assets with asset_type_id 'AT074' or asset_type_id 'AT075',SELECT * FROM assets WHERE asset_type_id = 'AT074' OR asset_type_id = 'AT075';
List all users with roles_id 'Role345' and official_user_id 'OU024',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU024';
Retrieve all staff members with official_user_id 'OU025' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU025' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT076',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT076';
Get all users with profiles_id 'P034' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P034' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma48' or 'Pharma49',SELECT * FROM assets WHERE pharmacies_id = 'Pharma48' OR pharmacies_id = 'Pharma49';
Find the facilities with trial_ends_at after '2025-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-17',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-17';
Retrieve all assets with asset_type_id 'AT077' or asset_type_id 'AT078',SELECT * FROM assets WHERE asset_type_id = 'AT077' OR asset_type_id = 'AT078';
List all users with roles_id 'Role456' and official_user_id 'OU025',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU025';
Retrieve all staff members with official_user_id 'OU026' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU026' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT079',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT079';
Get all users with profiles_id 'P035' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P035' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma50' or 'Pharma51',SELECT * FROM assets WHERE pharmacies_id = 'Pharma50' OR pharmacies_id = 'Pharma51';
Find the facilities with trial_ends_at after '2025-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-18',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-18';
Retrieve all assets with asset_type_id 'AT080' or asset_type_id 'AT081',SELECT * FROM assets WHERE asset_type_id = 'AT080' OR asset_type_id = 'AT081';
List all users with roles_id 'Role567' and official_user_id 'OU026',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU026';
Retrieve all staff members with official_user_id 'OU027' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU027' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT082',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT082';
Get all users with profiles_id 'P036' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P036' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma52' or 'Pharma53',SELECT * FROM assets WHERE pharmacies_id = 'Pharma52' OR pharmacies_id = 'Pharma53';
Find the facilities with trial_ends_at after '2025-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-19',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-19';
Retrieve all assets with asset_type_id 'AT083' or asset_type_id 'AT084',SELECT * FROM assets WHERE asset_type_id = 'AT083' OR asset_type_id = 'AT084';
List all users with roles_id 'Role678' and official_user_id 'OU027',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU027';
Retrieve all staff members with official_user_id 'OU028' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU028' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT085',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT085';
Get all users with profiles_id 'P037' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P037' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma54' or 'Pharma55',SELECT * FROM assets WHERE pharmacies_id = 'Pharma54' OR pharmacies_id = 'Pharma55';
Find the facilities with trial_ends_at after '2025-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-20',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-20';
Retrieve all assets with asset_type_id 'AT086' or asset_type_id 'AT087',SELECT * FROM assets WHERE asset_type_id = 'AT086' OR asset_type_id = 'AT087';
List all users with roles_id 'Role789' and official_user_id 'OU028',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU028';
Retrieve all staff members with official_user_id 'OU029' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU029' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT088',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT088';
Get all users with profiles_id 'P038' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P038' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma56' or 'Pharma57',SELECT * FROM assets WHERE pharmacies_id = 'Pharma56' OR pharmacies_id = 'Pharma57';
Find the facilities with trial_ends_at after '2025-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-21',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-21';
Retrieve all assets with asset_type_id 'AT089' or asset_type_id 'AT090',SELECT * FROM assets WHERE asset_type_id = 'AT089' OR asset_type_id = 'AT090';
List all users with roles_id 'Role890' and official_user_id 'OU029',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU029';
Retrieve all staff members with official_user_id 'OU030' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU030' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT091',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT091';
Get all users with profiles_id 'P039' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P039' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma58' or 'Pharma59',SELECT * FROM assets WHERE pharmacies_id = 'Pharma58' OR pharmacies_id = 'Pharma59';
Find the facilities with trial_ends_at after '2025-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-22',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-22';
Retrieve all assets with asset_type_id 'AT091' or asset_type_id 'AT092',SELECT * FROM assets WHERE asset_type_id = 'AT091' OR asset_type_id = 'AT092';
List all users with roles_id 'Role901' and official_user_id 'OU030',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU030';
Retrieve all staff members with official_user_id 'OU031' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU031' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT093',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT093';
Get all users with profiles_id 'P040' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P040' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma60' or 'Pharma61',SELECT * FROM assets WHERE pharmacies_id = 'Pharma60' OR pharmacies_id = 'Pharma61';
Find the facilities with trial_ends_at after '2025-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-23',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-23';
Retrieve all assets with asset_type_id 'AT094' or asset_type_id 'AT095',SELECT * FROM assets WHERE asset_type_id = 'AT094' OR asset_type_id = 'AT095';
List all users with roles_id 'Role012' and official_user_id 'OU031',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU031';
Retrieve all staff members with official_user_id 'OU032' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU032' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT096',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT096';
Get all users with profiles_id 'P041' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P041' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma62' or 'Pharma63',SELECT * FROM assets WHERE pharmacies_id = 'Pharma62' OR pharmacies_id = 'Pharma63';
Find the facilities with trial_ends_at after '2025-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-24',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-24';
Retrieve all assets with asset_type_id 'AT097' or asset_type_id 'AT098',SELECT * FROM assets WHERE asset_type_id = 'AT097' OR asset_type_id = 'AT098';
List all users with roles_id 'Role123' and official_user_id 'OU032',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU032';
Retrieve all staff members with official_user_id 'OU033' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU033' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT099',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT099';
Get all users with profiles_id 'P042' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P042' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma64' or 'Pharma65',SELECT * FROM assets WHERE pharmacies_id = 'Pharma64' OR pharmacies_id = 'Pharma65';
Find the facilities with trial_ends_at after '2026-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-25',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-25';
Retrieve all assets with asset_type_id 'AT100' or asset_type_id 'AT101',SELECT * FROM assets WHERE asset_type_id = 'AT100' OR asset_type_id = 'AT101';
List all users with roles_id 'Role234' and official_user_id 'OU033',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU033';
Retrieve all staff members with official_user_id 'OU034' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU034' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT102',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT102';
Get all users with profiles_id 'P043' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P043' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma66' or 'Pharma67',SELECT * FROM assets WHERE pharmacies_id = 'Pharma66' OR pharmacies_id = 'Pharma67';
Find the facilities with trial_ends_at after '2026-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-26',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-26';
Retrieve all assets with asset_type_id 'AT103' or asset_type_id 'AT104',SELECT * FROM assets WHERE asset_type_id = 'AT103' OR asset_type_id = 'AT104';
List all users with roles_id 'Role345' and official_user_id 'OU034',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU034';
Retrieve all staff members with official_user_id 'OU035' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU035' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT105',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT105';
Get all users with profiles_id 'P044' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P044' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma68' or 'Pharma69',SELECT * FROM assets WHERE pharmacies_id = 'Pharma68' OR pharmacies_id = 'Pharma69';
Find the facilities with trial_ends_at after '2026-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-03-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-27',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-27';
Retrieve all assets with asset_type_id 'AT105' or asset_type_id 'AT106',SELECT * FROM assets WHERE asset_type_id = 'AT105' OR asset_type_id = 'AT106';
List all users with roles_id 'Role456' and official_user_id 'OU035',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU035';
Retrieve all staff members with official_user_id 'OU036' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU036' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT107',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT107';
Get all users with profiles_id 'P045' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P045' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma70' or 'Pharma71',SELECT * FROM assets WHERE pharmacies_id = 'Pharma70' OR pharmacies_id = 'Pharma71';
Find the facilities with trial_ends_at after '2026-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-04-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-28',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-28';
Retrieve all assets with asset_type_id 'AT108' or asset_type_id 'AT109',SELECT * FROM assets WHERE asset_type_id = 'AT108' OR asset_type_id = 'AT109';
List all users with roles_id 'Role567' and official_user_id 'OU036',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU036';
Retrieve all staff members with official_user_id 'OU037' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU037' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT110',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT110';
Get all users with profiles_id 'P046' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P046' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma72' or 'Pharma73',SELECT * FROM assets WHERE pharmacies_id = 'Pharma72' OR pharmacies_id = 'Pharma73';
Find the facilities with trial_ends_at after '2026-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-29',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-29';
Retrieve all assets with asset_type_id 'AT111' or asset_type_id 'AT112',SELECT * FROM assets WHERE asset_type_id = 'AT111' OR asset_type_id = 'AT112';
List all users with roles_id 'Role678' and official_user_id 'OU037',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU037';
Retrieve all staff members with official_user_id 'OU038' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU038' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT113',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT113';
Get all users with profiles_id 'P047' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P047' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma74' or 'Pharma75',SELECT * FROM assets WHERE pharmacies_id = 'Pharma74' OR pharmacies_id = 'Pharma75';
Find the facilities with trial_ends_at after '2026-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-30',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-30';
Retrieve all assets with asset_type_id 'AT113' or asset_type_id 'AT114',SELECT * FROM assets WHERE asset_type_id = 'AT113' OR asset_type_id = 'AT114';
List all users with roles_id 'Role789' and official_user_id 'OU038',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU038';
Retrieve all staff members with official_user_id 'OU039' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU039' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT115',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT115';
Get all users with profiles_id 'P048' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P048' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma76' or 'Pharma77',SELECT * FROM assets WHERE pharmacies_id = 'Pharma76' OR pharmacies_id = 'Pharma77';
Find the facilities with trial_ends_at after '2026-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT116' or asset_type_id 'AT117',SELECT * FROM assets WHERE asset_type_id = 'AT116' OR asset_type_id = 'AT117';
List all users with roles_id 'Role890' and official_user_id 'OU039',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU039';
Retrieve all staff members with official_user_id 'OU040' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU040' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT118',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT118';
Get all users with profiles_id 'P049' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P049' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma78' or 'Pharma79',SELECT * FROM assets WHERE pharmacies_id = 'Pharma78' OR pharmacies_id = 'Pharma79';
Find the facilities with trial_ends_at after '2026-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT119' or asset_type_id 'AT120',SELECT * FROM assets WHERE asset_type_id = 'AT119' OR asset_type_id = 'AT120';
List all users with roles_id 'Role901' and official_user_id 'OU040',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU040';
Retrieve all staff members with official_user_id 'OU041' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU041' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT121',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT121';
Get all users with profiles_id 'P050' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P050' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma80' or 'Pharma81',SELECT * FROM assets WHERE pharmacies_id = 'Pharma80' OR pharmacies_id = 'Pharma81';
Find the facilities with trial_ends_at after '2026-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT121' or asset_type_id 'AT122',SELECT * FROM assets WHERE asset_type_id = 'AT121' OR asset_type_id = 'AT122';
List all users with roles_id 'Role012' and official_user_id 'OU041',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU041';
Retrieve all staff members with official_user_id 'OU042' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU042' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT123',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT123';
Get all users with profiles_id 'P051' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P051' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma82' or 'Pharma83',SELECT * FROM assets WHERE pharmacies_id = 'Pharma82' OR pharmacies_id = 'Pharma83';
Find the facilities with trial_ends_at after '2026-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT124' or asset_type_id 'AT125',SELECT * FROM assets WHERE asset_type_id = 'AT124' OR asset_type_id = 'AT125';
List all users with roles_id 'Role123' and official_user_id 'OU042',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU042';
Retrieve all staff members with official_user_id 'OU043' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU043' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT126',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT126';
Get all users with profiles_id 'P052' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P052' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma84' or 'Pharma85',SELECT * FROM assets WHERE pharmacies_id = 'Pharma84' OR pharmacies_id = 'Pharma85';
Find the facilities with trial_ends_at after '2026-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT127' or asset_type_id 'AT128',SELECT * FROM assets WHERE asset_type_id = 'AT127' OR asset_type_id = 'AT128';
List all users with roles_id 'Role234' and official_user_id 'OU043',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU043';
Retrieve all staff members with official_user_id 'OU044' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU044' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT129',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT129';
Get all users with profiles_id 'P053' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P053' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma86' or 'Pharma87',SELECT * FROM assets WHERE pharmacies_id = 'Pharma86' OR pharmacies_id = 'Pharma87';
Find the facilities with trial_ends_at after '2026-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT130' or asset_type_id 'AT131',SELECT * FROM assets WHERE asset_type_id = 'AT130' OR asset_type_id = 'AT131';
List all users with roles_id 'Role345' and official_user_id 'OU044',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU044';
Retrieve all staff members with official_user_id 'OU045' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU045' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT132',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT132';
Get all users with profiles_id 'P054' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P054' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma88' or 'Pharma89',SELECT * FROM assets WHERE pharmacies_id = 'Pharma88' OR pharmacies_id = 'Pharma89';
Find the facilities with trial_ends_at after '2027-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT133' or asset_type_id 'AT134',SELECT * FROM assets WHERE asset_type_id = 'AT133' OR asset_type_id = 'AT134';
List all users with roles_id 'Role456' and official_user_id 'OU045',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU045';
Retrieve all staff members with official_user_id 'OU046' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU046' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT135',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT135';
Get all users with profiles_id 'P055' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P055' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma90' or 'Pharma91',SELECT * FROM assets WHERE pharmacies_id = 'Pharma90' OR pharmacies_id = 'Pharma91';
Find the facilities with trial_ends_at after '2027-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT136' or asset_type_id 'AT137',SELECT * FROM assets WHERE asset_type_id = 'AT136' OR asset_type_id = 'AT137';
List all users with roles_id 'Role567' and official_user_id 'OU046',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU046';
Retrieve all staff members with official_user_id 'OU047' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU047' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT138',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT138';
Get all users with profiles_id 'P056' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P056' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma92' or 'Pharma93',SELECT * FROM assets WHERE pharmacies_id = 'Pharma92' OR pharmacies_id = 'Pharma93';
Find the facilities with trial_ends_at after '2027-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT139' or asset_type_id 'AT140',SELECT * FROM assets WHERE asset_type_id = 'AT139' OR asset_type_id = 'AT140';
List all users with roles_id 'Role678' and official_user_id 'OU047',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU047';
Retrieve all staff members with official_user_id 'OU048' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU048' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT141',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT141';
Get all users with profiles_id 'P057' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P057' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma94' or 'Pharma95',SELECT * FROM assets WHERE pharmacies_id = 'Pharma94' OR pharmacies_id = 'Pharma95';
Find the facilities with trial_ends_at after '2027-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT142' or asset_type_id 'AT143',SELECT * FROM assets WHERE asset_type_id = 'AT142' OR asset_type_id = 'AT143';
List all users with roles_id 'Role789' and official_user_id 'OU048',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU048';
Retrieve all staff members with official_user_id 'OU049' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU049' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT144',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT144';
Get all users with profiles_id 'P058' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P058' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma96' or 'Pharma97',SELECT * FROM assets WHERE pharmacies_id = 'Pharma96' OR pharmacies_id = 'Pharma97';
Find the facilities with trial_ends_at after '2027-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT145' or asset_type_id 'AT146',SELECT * FROM assets WHERE asset_type_id = 'AT145' OR asset_type_id = 'AT146';
List all users with roles_id 'Role890' and official_user_id 'OU049',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU049';
Retrieve all staff members with official_user_id 'OU050' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU050' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT147',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT147';
Get all users with profiles_id 'P059' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P059' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma98' or 'Pharma99',SELECT * FROM assets WHERE pharmacies_id = 'Pharma98' OR pharmacies_id = 'Pharma99';
Find the facilities with trial_ends_at after '2027-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT147' or asset_type_id 'AT148',SELECT * FROM assets WHERE asset_type_id = 'AT147' OR asset_type_id = 'AT148';
List all users with roles_id 'Role012' and official_user_id 'OU050',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU050';
Retrieve all staff members with official_user_id 'OU051' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU051' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT149',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT149';
Get all users with profiles_id 'P060' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P060' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma100' or 'Pharma101',SELECT * FROM assets WHERE pharmacies_id = 'Pharma100' OR pharmacies_id = 'Pharma101';
Find the facilities with trial_ends_at after '2027-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT150' or asset_type_id 'AT151',SELECT * FROM assets WHERE asset_type_id = 'AT150' OR asset_type_id = 'AT151';
List all users with roles_id 'Role123' and official_user_id 'OU051',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU051';
Retrieve all staff members with official_user_id 'OU052' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU052' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT152',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT152';
Get all users with profiles_id 'P061' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P061' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma102' or 'Pharma103',SELECT * FROM assets WHERE pharmacies_id = 'Pharma102' OR pharmacies_id = 'Pharma103';
Find the facilities with trial_ends_at after '2027-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT153' or asset_type_id 'AT154',SELECT * FROM assets WHERE asset_type_id = 'AT153' OR asset_type_id = 'AT154';
List all users with roles_id 'Role234' and official_user_id 'OU052',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU052';
Retrieve all staff members with official_user_id 'OU053' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU053' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT155',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT155';
Get all users with profiles_id 'P062' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P062' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma104' or 'Pharma105',SELECT * FROM assets WHERE pharmacies_id = 'Pharma104' OR pharmacies_id = 'Pharma105';
Find the facilities with trial_ends_at after '2027-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT156' or asset_type_id 'AT157',SELECT * FROM assets WHERE asset_type_id = 'AT156' OR asset_type_id = 'AT157';
List all users with roles_id 'Role345' and official_user_id 'OU053',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU053';
Retrieve all staff members with official_user_id 'OU054' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU054' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT158',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT158';
Get all users with profiles_id 'P063' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P063' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma106' or 'Pharma107',SELECT * FROM assets WHERE pharmacies_id = 'Pharma106' OR pharmacies_id = 'Pharma107';
Find the facilities with trial_ends_at after '2027-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT159' or asset_type_id 'AT160',SELECT * FROM assets WHERE asset_type_id = 'AT159' OR asset_type_id = 'AT160';
List all users with roles_id 'Role456' and official_user_id 'OU054',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU054';
Retrieve all staff members with official_user_id 'OU055' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU055' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT161',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT161';
Get all users with profiles_id 'P064' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P064' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma108' or 'Pharma109',SELECT * FROM assets WHERE pharmacies_id = 'Pharma108' OR pharmacies_id = 'Pharma109';
Find the facilities with trial_ends_at after '2027-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT162' or asset_type_id 'AT163',SELECT * FROM assets WHERE asset_type_id = 'AT162' OR asset_type_id = 'AT163';
List all users with roles_id 'Role567' and official_user_id 'OU055',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU055';
Retrieve all staff members with official_user_id 'OU056' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU056' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT164',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT164';
Get all users with profiles_id 'P065' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P065' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma110' or 'Pharma111',SELECT * FROM assets WHERE pharmacies_id = 'Pharma110' OR pharmacies_id = 'Pharma111';
Find the facilities with trial_ends_at after '2027-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT165' or asset_type_id 'AT166',SELECT * FROM assets WHERE asset_type_id = 'AT165' OR asset_type_id = 'AT166';
List all users with roles_id 'Role678' and official_user_id 'OU056',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU056';
Retrieve all staff members with official_user_id 'OU057' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU057' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT167',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT167';
Get all users with profiles_id 'P066' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P066' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma112' or 'Pharma113',SELECT * FROM assets WHERE pharmacies_id = 'Pharma112' OR pharmacies_id = 'Pharma113';
Find the facilities with trial_ends_at after '2028-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT168' or asset_type_id 'AT169',SELECT * FROM assets WHERE asset_type_id = 'AT168' OR asset_type_id = 'AT169';
List all users with roles_id 'Role789' and official_user_id 'OU057',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU057';
Retrieve all staff members with official_user_id 'OU058' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU058' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT170',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT170';
Get all users with profiles_id 'P067' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P067' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma114' or 'Pharma115',SELECT * FROM assets WHERE pharmacies_id = 'Pharma114' OR pharmacies_id = 'Pharma115';
Find the facilities with trial_ends_at after '2028-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT171' or asset_type_id 'AT172',SELECT * FROM assets WHERE asset_type_id = 'AT171' OR asset_type_id = 'AT172';
List all users with roles_id 'Role890' and official_user_id 'OU058',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU058';
Retrieve all staff members with official_user_id 'OU059' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU059' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT173',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT173';
Get all users with profiles_id 'P068' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P068' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma116' or 'Pharma117',SELECT * FROM assets WHERE pharmacies_id = 'Pharma116' OR pharmacies_id = 'Pharma117';
Find the facilities with trial_ends_at after '2028-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT174' or asset_type_id 'AT175',SELECT * FROM assets WHERE asset_type_id = 'AT174' OR asset_type_id = 'AT175';
List all users with roles_id 'Role012' and official_user_id 'OU059',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU059';
Retrieve all staff members with official_user_id 'OU060' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU060' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT176',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT176';
Get all users with profiles_id 'P069' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P069' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma118' or 'Pharma119',SELECT * FROM assets WHERE pharmacies_id = 'Pharma118' OR pharmacies_id = 'Pharma119';
Find the facilities with trial_ends_at after '2028-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT177' or asset_type_id 'AT178',SELECT * FROM assets WHERE asset_type_id = 'AT177' OR asset_type_id = 'AT178';
List all users with roles_id 'Role123' and official_user_id 'OU060',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU060';
Retrieve all staff members with official_user_id 'OU061' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU061' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT179',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT179';
Get all users with profiles_id 'P070' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P070' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma120' or 'Pharma121',SELECT * FROM assets WHERE pharmacies_id = 'Pharma120' OR pharmacies_id = 'Pharma121';
Find the facilities with trial_ends_at after '2028-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT180' or asset_type_id 'AT181',SELECT * FROM assets WHERE asset_type_id = 'AT180' OR asset_type_id = 'AT181';
List all users with roles_id 'Role234' and official_user_id 'OU061',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU061';
Retrieve all staff members with official_user_id 'OU062' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU062' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT182',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT182';
Get all users with profiles_id 'P071' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P071' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma122' or 'Pharma123',SELECT * FROM assets WHERE pharmacies_id = 'Pharma122' OR pharmacies_id = 'Pharma123';
Find the facilities with trial_ends_at after '2028-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT183' or asset_type_id 'AT184',SELECT * FROM assets WHERE asset_type_id = 'AT183' OR asset_type_id = 'AT184';
List all users with roles_id 'Role345' and official_user_id 'OU062',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU062';
Retrieve all staff members with official_user_id 'OU063' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU063' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT185',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT185';
Get all users with profiles_id 'P072' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P072' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma124' or 'Pharma125',SELECT * FROM assets WHERE pharmacies_id = 'Pharma124' OR pharmacies_id = 'Pharma125';
Find the facilities with trial_ends_at after '2028-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT186' or asset_type_id 'AT187',SELECT * FROM assets WHERE asset_type_id = 'AT186' OR asset_type_id = 'AT187';
List all users with roles_id 'Role456' and official_user_id 'OU063',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU063';
Retrieve all staff members with official_user_id 'OU064' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU064' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT188',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT188';
Get all users with profiles_id 'P073' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P073' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma126' or 'Pharma127',SELECT * FROM assets WHERE pharmacies_id = 'Pharma126' OR pharmacies_id = 'Pharma127';
Find the facilities with trial_ends_at after '2028-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT189' or asset_type_id 'AT190',SELECT * FROM assets WHERE asset_type_id = 'AT189' OR asset_type_id = 'AT190';
List all users with roles_id 'Role567' and official_user_id 'OU064',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU064';
Retrieve all staff members with official_user_id 'OU065' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU065' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT191',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT191';
Get all users with profiles_id 'P074' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P074' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma128' or 'Pharma129',SELECT * FROM assets WHERE pharmacies_id = 'Pharma128' OR pharmacies_id = 'Pharma129';
Find the facilities with trial_ends_at after '2028-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT192' or asset_type_id 'AT193',SELECT * FROM assets WHERE asset_type_id = 'AT192' OR asset_type_id = 'AT193';
List all users with roles_id 'Role678' and official_user_id 'OU065',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU065';
Retrieve all staff members with official_user_id 'OU066' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU066' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT194',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT194';
Get all users with profiles_id 'P075' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P075' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma130' or 'Pharma131',SELECT * FROM assets WHERE pharmacies_id = 'Pharma130' OR pharmacies_id = 'Pharma131';
Find the facilities with trial_ends_at after '2028-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT195' or asset_type_id 'AT196',SELECT * FROM assets WHERE asset_type_id = 'AT195' OR asset_type_id = 'AT196';
List all users with roles_id 'Role789' and official_user_id 'OU066',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU066';
Retrieve all staff members with official_user_id 'OU067' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU067' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT197',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT197';
Get all users with profiles_id 'P076' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P076' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma132' or 'Pharma133',SELECT * FROM assets WHERE pharmacies_id = 'Pharma132' OR pharmacies_id = 'Pharma133';
Find the facilities with trial_ends_at after '2028-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT198' or asset_type_id 'AT199',SELECT * FROM assets WHERE asset_type_id = 'AT198' OR asset_type_id = 'AT199';
List all users with roles_id 'Role890' and official_user_id 'OU067',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU067';
Retrieve all staff members with official_user_id 'OU068' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU068' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT200',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT200';
Get all users with profiles_id 'P077' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P077' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma134' or 'Pharma135',SELECT * FROM assets WHERE pharmacies_id = 'Pharma134' OR pharmacies_id = 'Pharma135';
Find the facilities with trial_ends_at after '2028-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT201' or asset_type_id 'AT202',SELECT * FROM assets WHERE asset_type_id = 'AT201' OR asset_type_id = 'AT202';
List all users with roles_id 'Role012' and official_user_id 'OU068',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU068';
Retrieve all staff members with official_user_id 'OU069' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU069' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT203',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT203';
Get all users with profiles_id 'P078' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P078' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma136' or 'Pharma137',SELECT * FROM assets WHERE pharmacies_id = 'Pharma136' OR pharmacies_id = 'Pharma137';
Find the facilities with trial_ends_at after '2029-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT204' or asset_type_id 'AT205',SELECT * FROM assets WHERE asset_type_id = 'AT204' OR asset_type_id = 'AT205';
List all users with roles_id 'Role123' and official_user_id 'OU069',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU069';
Retrieve all staff members with official_user_id 'OU070' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU070' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT206',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT206';
Get all users with profiles_id 'P079' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P079' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma138' or 'Pharma139',SELECT * FROM assets WHERE pharmacies_id = 'Pharma138' OR pharmacies_id = 'Pharma139';
Find the facilities with trial_ends_at after '2029-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT207' or asset_type_id 'AT208',SELECT * FROM assets WHERE asset_type_id = 'AT207' OR asset_type_id = 'AT208';
List all users with roles_id 'Role234' and official_user_id 'OU070',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU070';
Retrieve all staff members with official_user_id 'OU071' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU071' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT209',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT209';
Get all users with profiles_id 'P080' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P080' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma140' or 'Pharma141',SELECT * FROM assets WHERE pharmacies_id = 'Pharma140' OR pharmacies_id = 'Pharma141';
Find the facilities with trial_ends_at after '2029-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT210' or asset_type_id 'AT211',SELECT * FROM assets WHERE asset_type_id = 'AT210' OR asset_type_id = 'AT211';
List all users with roles_id 'Role345' and official_user_id 'OU071',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU071';
Retrieve all staff members with official_user_id 'OU072' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU072' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT212',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT212';
Get all users with profiles_id 'P081' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P081' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma142' or 'Pharma143',SELECT * FROM assets WHERE pharmacies_id = 'Pharma142' OR pharmacies_id = 'Pharma143';
Find the facilities with trial_ends_at after '2029-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT213' or asset_type_id 'AT214',SELECT * FROM assets WHERE asset_type_id = 'AT213' OR asset_type_id = 'AT214';
List all users with roles_id 'Role456' and official_user_id 'OU072',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU072';
Retrieve all staff members with official_user_id 'OU073' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU073' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT215',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT215';
Get all users with profiles_id 'P082' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P082' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma144' or 'Pharma145',SELECT * FROM assets WHERE pharmacies_id = 'Pharma144' OR pharmacies_id = 'Pharma145';
Find the facilities with trial_ends_at after '2029-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT216' or asset_type_id 'AT217',SELECT * FROM assets WHERE asset_type_id = 'AT216' OR asset_type_id = 'AT217';
List all users with roles_id 'Role567' and official_user_id 'OU073',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU073';
Retrieve all staff members with official_user_id 'OU074' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU074' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT218',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT218';
Get all users with profiles_id 'P083' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P083' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma146' or 'Pharma147',SELECT * FROM assets WHERE pharmacies_id = 'Pharma146' OR pharmacies_id = 'Pharma147';
Find the facilities with trial_ends_at after '2029-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT219' or asset_type_id 'AT220',SELECT * FROM assets WHERE asset_type_id = 'AT219' OR asset_type_id = 'AT220';
List all users with roles_id 'Role678' and official_user_id 'OU074',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU074';
Retrieve all staff members with official_user_id 'OU075' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU075' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT221',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT221';
Get all users with profiles_id 'P084' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P084' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma148' or 'Pharma149',SELECT * FROM assets WHERE pharmacies_id = 'Pharma148' OR pharmacies_id = 'Pharma149';
Find the facilities with trial_ends_at after '2029-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT222' or asset_type_id 'AT223',SELECT * FROM assets WHERE asset_type_id = 'AT222' OR asset_type_id = 'AT223';
List all users with roles_id 'Role789' and official_user_id 'OU075',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU075';
Retrieve all staff members with official_user_id 'OU076' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU076' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT224',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT224';
Get all users with profiles_id 'P085' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P085' OR type = 'Manager';
Retrieve all users along with their associated roles,"SELECT u.*, r.* FROM users u JOIN roles r ON u.role_id = r.role_id;"
Get all facilities along with their associated organizations,"SELECT f.*, o.* FROM facilities f JOIN organizations o ON f.organization_id = o.organization_id;"
List all events along with their associated assets,"SELECT e.*, a.* FROM events e JOIN assets a ON e.asset_id = a.asset_id;"
Retrieve all pharmacies along with their associated staff members,"SELECT p.*, s.* FROM pharmacies p JOIN staff_members s ON p.pharmacy_id = s.pharmacy_id;"
Get all assets along with their associated pharmacies,"SELECT a.*, p.* FROM assets a JOIN pharmacies p ON a.pharmacy_id = p.pharmacy_id;"
List all events along with their associated users,"SELECT e.*, u.* FROM events e JOIN users u ON e.user_id = u.user_id;"
Retrieve all staff members along with their associated roles,"SELECT s.*, r.* FROM staff_members s JOIN roles r ON s.role_id = r.role_id;"
Get all users along with their associated profiles,"SELECT u.*, p.* FROM users u JOIN profiles p ON u.profile_id = p.profile_id;"
List all facilities along with their associated assets,"SELECT f.*, a.* FROM facilities f JOIN assets a ON f.asset_id = a.asset_id;"
Retrieve all pharmacies along with their associated events,"SELECT p.*, e.* FROM pharmacies p JOIN events e ON p.pharmacy_id = e.pharmacy_id;"
Get all assets along with their associated events,"SELECT a.*, e.* FROM assets a JOIN events e ON a.event_id = e.event_id;"
List all users along with their associated staff members,"SELECT u.*, s.* FROM users u JOIN staff_members s ON u.staff_id = s.staff_id;"
Retrieve all staff members along with their associated pharmacies,"SELECT s.*, p.* FROM staff_members s JOIN pharmacies p ON s.pharmacy_id = p.pharmacy_id;"
Get all facilities along with their associated assets and organizations,"SELECT f.*, a.*, o.* FROM facilities f JOIN assets a ON f.asset_id = a.asset_id JOIN organizations o ON f.organization_id = o.organization_id;"
List all events along with their associated users and assets,"SELECT e.*, u.*, a.* FROM events e JOIN users u ON e.user_id = u.user_id JOIN assets a ON e.asset_id = a.asset_id;"
Get all pharmacies along with their associated events and staff members,"SELECT p.*, e.*, s.* FROM pharmacies p JOIN events e ON p.pharmacy_id = e.pharmacy_id JOIN staff_members s ON p.staff_id = s.staff_id;"
Retrieve all users along with their associated roles and staff members,"SELECT u.*, r.*, s.* FROM users u JOIN roles r ON u.role_id = r.role_id JOIN staff_members s ON u.staff_id = s.staff_id;"
Retrieve all events with their associated facilities and users,"SELECT e.*, f.*, u.* FROM events e JOIN facilities f ON e.facility_id = f.facility_id JOIN users u ON e.user_id = u.user_id;"
List all staff members along with their associated roles and organizations,"SELECT s.*, r.*, o.* FROM staff_members s JOIN roles r ON s.role_id = r.role_id JOIN organizations o ON s.org_id = o.org_id;"
Retrieve all users along with their associated roles and profiles,"SELECT u.*, r.*, p.* FROM users u JOIN roles r ON u.role_id = r.role_id JOIN profiles p ON u.profile_id = p.profile_id;"
Get all organizations along with their associated pharmacies,"SELECT o.*, p.* FROM organizations o JOIN pharmacies p ON o.org_id = p.org_id;"
List all events along with their associated assets and users,"SELECT e.*, a.*, u.* FROM events e JOIN assets a ON e.event_id = a.event_id JOIN users u ON e.user_id = u.user_id;"
Fetch the records from the staff_directory table where the full_name contains 'John',SELECT * FROM staff_directory WHERE full_name LIKE '%John%';
List all assets with an active status and updated in the last 7 days,SELECT * FROM assets WHERE active = TRUE AND updated_at >= CURRENT_DATE - INTERVAL '7 days';
Get the hazards with a name starting with 'Fire',SELECT * FROM hazards WHERE name LIKE 'Fire%';
Retrieve events created by user_id '123' and updated after '2023-01-01',SELECT * FROM events WHERE user_id = '123' AND updated_at > '2023-01-01';
Find the staff members with fixed status and working in organization_id 'Org456',SELECT * FROM staff_directory WHERE fixed = TRUE AND org_id = 'Org456';
List all assets of type 'Computer' and associated with organization_id 'Org789',SELECT * FROM assets WHERE asset_type_id = (SELECT id FROM asset_types WHERE name = 'Computer') AND pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE organizations_id = 'Org789');
Retrieve the event staff roles ordered by name in ascending order,SELECT * FROM event_staff_roles ORDER BY name ASC;
Get the assets with serial number 'SN123' and active status,SELECT * FROM assets WHERE serial_number = 'SN123' AND active = TRUE;
Fetch all events where the user's full name contains 'Smith' and harmt is greater than 20,SELECT * FROM events WHERE users_fullname LIKE '%Smith%' AND harmt > 20;
List the users with profiles_id 'Profile123' and organization_id 'Org987',SELECT * FROM users WHERE profiles_id = 'Profile123' AND organization_id = 'Org987';
Retrieve all organizations with trial_ends_at in the future,SELECT * FROM organizations WHERE trial_ends_at > CURRENT_DATE;
Find the pharmacies that were created before '2023-03-01' and enabled after '2023-02-15',SELECT * FROM pharmacies WHERE created_at < '2023-03-01' AND activate_at > '2023-02-15';
"Get the event actions for the events with IDs '123', '456', and '789'","SELECT * FROM event_actions WHERE events_id IN ('123', '456', '789');"
Fetch the hazards with descriptions containing the word 'chemical',SELECT * FROM hazards WHERE description LIKE '%chemical%';
Retrieve the staff members with locum_full_name not equal to 'NULL',SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
List the assets that were updated between '2023-05-01' and '2023-06-30',SELECT * FROM assets WHERE updated_at BETWEEN '2023-05-01' AND '2023-06-30';
Get the event staff roles with order greater than or equal to 3,SELECT * FROM event_staff_roles WHERE order >= 3;
Fetch the events with harmt equal to 0 and prescribers_id is NULL,SELECT * FROM events WHERE harmt = 0 AND prescribers_id IS NULL;
Retrieve all organizations with names starting with 'ABC' and created after '2023-01-01',SELECT * FROM organizations WHERE name LIKE 'ABC%' AND created_at > '2023-01-01';
Find the pharmacies that were disabled in the last 30 days,SELECT * FROM pharmacies WHERE date_disabled >= CURRENT_DATE - INTERVAL '30 days';
List the event actions for the events created by user_id '789' and updated after '2023-02-28',SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789' AND updated_at > '2023-02-28');
Get the assets with asset_type_id 'AT001' and pharmacies_id 'Pharma1',SELECT * FROM assets WHERE asset_type_id = 'AT001' AND pharmacies_id = 'Pharma1';
Fetch the events that were created in the last 7 days and harmt is greater than or equal to 10,SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '7 days' AND harmt >= 10;
Retrieve the full names of all staff members in alphabetical order,SELECT full_name FROM staff_directory ORDER BY full_name ASC;
List all assets associated with pharmacies located in the city 'New York',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE city = 'New York');
Get the event staff roles with forms_id equal to 5 and facility_id equal to 10,SELECT * FROM event_staff_roles WHERE forms_id = 5 AND facility_id = 10;
Fetch the events with harmt greater than 50 and date_closed is NULL,SELECT * FROM events WHERE harmt > 50 AND date_closed IS NULL;
Retrieve the organizations that were updated after '2023-03-15' and have trial_ends_at in the future,SELECT * FROM organizations WHERE updated_at > '2023-03-15' AND trial_ends_at > CURRENT_DATE;
Find the staff members who are active and have the role_id 'Role123',SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id = 'Role123';
List the assets with asset_type_id 'AT002' or 'AT003',"SELECT * FROM assets WHERE asset_type_id IN ('AT002', 'AT003');"
Get the hazards with descriptions containing the word 'safety' and created in the last 30 days,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= CURRENT_DATE - INTERVAL '30 days';
Fetch the events with harmt greater than or equal to 10 and prescribers_id is not NULL,SELECT * FROM events WHERE harmt >= 10 AND prescribers_id IS NOT NULL;
Retrieve the full names of staff members whose official_user_id starts with 'USR',SELECT full_name FROM staff_directory WHERE official_user_id LIKE 'USR%';
List all assets associated with pharmacies created after '2023-04-01' and updated before '2023-06-30',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-04-01' AND updated_at < '2023-06-30');
Get the event staff roles with names containing the word 'supervisor',SELECT * FROM event_staff_roles WHERE name LIKE '%supervisor%';
Fetch the events with harmt less than 10 and date_closed is not NULL,SELECT * FROM events WHERE harmt < 10 AND date_closed IS NOT NULL;
Retrieve the organizations that have the trial_ends_at set to '2023-12-31' and are located in the city 'London',SELECT * FROM organizations WHERE trial_ends_at = '2023-12-31' AND city = 'London';
Find the staff members who are active and have the roles_id of 'Role456' or 'Role789',"SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id IN ('Role456', 'Role789');"
List the assets with asset_type_id 'AT004' and serial_number is not NULL,SELECT * FROM assets WHERE asset_type_id = 'AT004' AND serial_number IS NOT NULL;
Get the hazards with descriptions starting with 'Potential' and updated in the last 7 days,SELECT * FROM hazards WHERE description LIKE 'Potential%' AND updated_at >= CURRENT_DATE - INTERVAL '7 days';
Fetch the events with harmt between 20 and 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt BETWEEN 20 AND 50 AND is_open = TRUE;
Retrieve the full names of all staff members whose updated_at is equal to '2023-01-01',SELECT full_name FROM staff_directory WHERE updated_at = '2023-01-01';
List all assets associated with pharmacies enabled before '2023-02-01' and disabled after '2023-06-30',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at < '2023-02-01' AND disabled_at > '2023-06-30');
Get the event staff roles with forms_id not equal to 1 or 2,"SELECT * FROM event_staff_roles WHERE forms_id NOT IN (1, 2);"
Fetch the events with harmt equal to 0 and reporters_id is not NULL,SELECT * FROM events WHERE harmt = 0 AND reporters_id IS NOT NULL;
Retrieve the organizations that were created after '2023-01-01' and have trial_ends_at set to NULL,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND trial_ends_at IS NULL;
Find the pharmacies with names starting with 'ABC' and activated by 'User123',SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_by = 'User123';
List the event actions for the events created by user_id '456' and action_date between '2023-02-01' and '2023-03-31',SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '456') AND action_date BETWEEN '2023-02-01' AND '2023-03-31';
Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma2',SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma2';
Fetch the hazards with descriptions containing the word 'environment' and created before '2023-02-15',SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at < '2023-02-15';
Retrieve the full names of all staff members whose fixed status is FALSE,SELECT full_name FROM staff_directory WHERE fixed = FALSE;
Find all staff members,SELECT * FROM staff_directory;
Find all active staff members,SELECT * FROM staff_directory WHERE is_active = 1;
Find all staff members who are associated with pharmacy 123,SELECT * FROM staff_directory WHERE pharmacies_id = 123;
Find all assets,SELECT * FROM assets;
Find all assets that are active,SELECT * FROM assets WHERE active = 1;
Find all assets that are associated with pharmacy 123,SELECT * FROM assets WHERE pharmacies_id = 123;
Find all hazards,SELECT * FROM hazards;
"Find all hazards that have the name ""needle stick""","SELECT * FROM hazards WHERE name = ""needle stick"";"
Find all hazards that are associated with pharmacy 123,SELECT * FROM hazards WHERE pharmacies_id = 123;
Find all events,SELECT * FROM events;
Find all events that were created by user 123,SELECT * FROM events WHERE users_id = 123;
"Find all events that were created by user 123 and have the harm level of ""high""","SELECT * FROM events WHERE users_id = 123 AND harmt = ""high"";"
Find all actions that were taken on event 123,SELECT * FROM event_actions WHERE events_id = 123;
Find all summary tools that are configured for form 123,SELECT * FROM formsettings_summarytools WHERE forms_id = 123;
Find all summary tools that are configured for all forms in pharmacy 123,SELECT * FROM formsettings_summarytools WHERE forms_id IN (SELECT forms_id FROM forms WHERE pharmacies_id = 123);
Find all users who have created an event,"SELECT users_id, users_fullname FROM events GROUP BY users_id;"
Find all hazards that have been reported by user 123,"SELECT hazards.name, hazards.description FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id WHERE events.users_id = 123;"
Find all events that have been taken on by user 123,"SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123;"
"Find all events that have been taken on by user 123 and have the harm level of ""high""","SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123 AND events.harmt = ""high"";"
"Find all staff members who are associated with pharmacy 123 and have the role of ""manager""","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND role = ""manager"";"
Find all events that have been created in the past 30 days,SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
"Find all events that have been created in the past 30 days and have the harm level of ""high""","SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY AND harmt = ""high"";"
Find the average harm level of all events,SELECT AVG(harmt) AS average_harm_level FROM events;
Find the average harm level of all events that have been created in the past 30 days,SELECT AVG(harmt) AS average_harm_level FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
Find the top 10 hazards that have been reported the most often,"SELECT hazards.name, COUNT(*) AS count FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id GROUP BY hazards.name ORDER BY count DESC LIMIT 10;"
Find all staff members who are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM staff_directory WHERE pharmacies_id IN (123, 456);"
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name = ""John Smith"";"
"Find all assets that are associated with pharmacy 123 or pharmacy 456 and have the serial number ""1234567890"".","SELECT * FROM assets WHERE pharmacies_id IN (123, 456) AND serial_number = ""1234567890"";"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"".","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"");"
Find all events that were created by user 123 or user 456.,"SELECT * FROM events WHERE users_id IN (123, 456);"
"Find all events that were created by user 123 and have the harm level ""high"" or ""medium"".","SELECT * FROM events WHERE users_id = 123 AND harmt IN (""high"", ""medium"");"
Find all actions that were taken on event 123 or event 456.,"SELECT * FROM event_actions WHERE events_id IN (123, 456);"
Find all actions that were taken on event 123 by user 123 or user 456.,"SELECT * FROM event_actions WHERE events_id = 123 AND user_id IN (123, 456);"
Find all summary tools that are configured for form 123 or form 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456);"
Find all summary tools that are configured for form 123 and are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id = 123 AND pharmacies_id IN (123, 456);"
Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123;
"Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them, ordered by the number of actions taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of forms that have been used.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of events that have been created.",SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(events.id) DESC;
"Find all events that have been created by staff members who have created the most events, ordered by the number of events that have been created.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all assets that have been used in the most events that have been created by staff members who have created the most events, ordered by the number of events that have been used.",SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all hazards that have been associated with the most events that have been created by staff members who have created the most events, ordered by the number of events that have been associated.",SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all events that have had the most actions taken on them that have been created by staff members who have created the most events, ordered by the number of actions that have been taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for the most forms that have been used in events that have been created by staff members who have created the most events, ordered by the number of forms that have been configured.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with the hazard ""needle stick"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name WHERE hazards.name = ""needle stick"";"
Find all assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all hazards that have been associated with events that have been created by staff members who are associated with pharmacy 123 and have the harm level ""high"".","SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 AND events.harmt = ""high"";"
Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have the serial number ""1234567890"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number WHERE assets.serial_number = ""1234567890"";"
Find all events that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events that have been created by staff members who have created the most events.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events that have been created by staff members who have created the most events.,SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"" or the name ""Jane Doe"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name IN (""John Smith"", ""Jane Doe"");"
"Find all assets that are associated with pharmacy 123 and have the serial number ""1234567890"" or the serial number ""9876543210"".","SELECT * FROM assets WHERE pharmacies_id = 123 AND serial_number IN (""1234567890"", ""9876543210"");"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"" and are associated with pharmacy 123 or pharmacy 456.","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"") AND pharmacies_id IN (123, 456);"
"Find all events that were created by user 123 or user 456 and have the harm level ""high"" or ""medium"" and were created on or after January 1, 2023.","SELECT * FROM events WHERE users_id IN (123, 456) AND harmt IN (""high"", ""medium"") AND date_created >= '2023-01-01';"
"Find all actions that were taken on event 123 or event 456 by user 123 or user 456 and were taken on or after January 1, 2023.","SELECT * FROM event_actions WHERE events_id IN (123, 456) AND user_id IN (123, 456) AND date_created >= '2023-01-01';"
"Find all summary tools that are configured for form 123 or form 456 and are associated with pharmacy 123 or pharmacy 456 and were configured on or after January 1, 2023.","SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456) AND pharmacies_id IN (123, 456) AND updated_at >= '2023-01-01';"
Find all staff members who have created the most events.,SELECT * FROM staff_directory ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events.,SELECT * FROM assets ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events.,SELECT * FROM hazards ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them.,SELECT * FROM events ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for the most forms.,SELECT * FROM formsettings_summarytools ORDER BY COUNT(forms_id) DESC LIMIT 1;
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users, and only for events that were held in the last year","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id WHERE events.date >= '2022-01-01' GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, ordered by the number of organizations that have attended the event","SELECT events.id, events.name, COUNT(DISTINCT organizations.id) AS number_of_organizations FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id ORDER BY number_of_organizations DESC;"
"Get the list of events that have been attended by users from all organizations, and the number of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, COUNT(DISTINCT users.id) AS number_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY number_of_users DESC;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC;"
Get all events that have been attended by at least 100 users,SELECT events.* FROM events LEFT JOIN events_users ON events.id = events_users.event_id GROUP BY events.id HAVING COUNT(events_users.id) >= 100;
Get all hazards that have been reported by at least 5 different users,SELECT hazards.* FROM hazards LEFT JOIN hazards_reported_by ON hazards.id = hazards_reported_by.hazard_id GROUP BY hazards.id HAVING COUNT(hazards_reported_by.id) >= 5;
Get all assets that are used by at least 5 different events,SELECT assets.* FROM assets LEFT JOIN assets_used_in ON assets.id = assets_used_in.asset_id GROUP BY assets.id HAVING COUNT(assets_used_in.id) >= 5;
Get all pharmacies that have hosted at least 10 events,SELECT pharmacies.* FROM pharmacies LEFT JOIN events ON pharmacies.id = events.pharmacies_id GROUP BY pharmacies.id HAVING COUNT(events.id) >= 10;
Get all users who have attended at least 5 events,SELECT users.* FROM users LEFT JOIN events_users ON users.id = events_users.user_id GROUP BY users.id HAVING COUNT(events_users.id) >= 5;
Get all organizations that have held at least 10 events,SELECT organizations.* FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id GROUP BY organizations.id HAVING COUNT(events.id) >= 10;
Get all formsettings summarytools that have been used by at least 5 events,SELECT formsettings_summarytools.* FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id GROUP BY formsettings_summarytools.id HAVING COUNT(events.id) >= 5;
Get all users who have created at least 5 event actions,SELECT users.* FROM users LEFT JOIN event_actions ON users.id = event_actions.user_id GROUP BY users.id HAVING COUNT(event_actions.id) >= 5;
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at;"
"Get all users and the organizations they are employed by, ordered by the user's name","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity;"
"Get all event actions and the staff members who created those actions, ordered by the action's date","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC;"
"Get all users and the events they have attended, ordered by the number of events the user has attended","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC;"
Get all organizations,SELECT * FROM organizations;
Get all organizations that are active,SELECT * FROM organizations WHERE active = 1;
"Get all organizations whose name contains ""Acme""",SELECT * FROM organizations WHERE name LIKE '%Acme%';
"Get all organizations whose name is ""Acme Corporation""",SELECT * FROM organizations WHERE name = 'Acme Corporation';
Get all organizations whose ID is 12345,SELECT * FROM organizations WHERE id = 12345;
Get all organizations that were created on 2023-01-01,SELECT * FROM organizations WHERE created_at = '2023-01-01';
Get all organizations that were updated on 2023-02-02,SELECT * FROM organizations WHERE updated_at = '2023-02-02';
Get all organizations that were created on 2023-01-01 and are active,SELECT * FROM organizations WHERE created_at = '2023-01-01' AND active = 1;
Get all organizations that were updated on 2023-02-02 and are active,SELECT * FROM organizations WHERE updated_at = '2023-02-02' AND active = 1;
Get all users who were updated on 2023-02-02 and are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all users who are employed by pharmacy with ID 12345 and are active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 1;
Get all users who are employed by pharmacy with ID 12345 and are not active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 0;
Get all users,SELECT * FROM users;
Get all users that are active,SELECT * FROM users WHERE is_active = 1;
"Get all users whose name contains ""John""",SELECT * FROM users WHERE full_name LIKE '%John%';
"Get all users whose name is ""John Doe""",SELECT * FROM users WHERE full_name = 'John Doe';
Get all users whose ID is 12345,SELECT * FROM users WHERE id = 12345;
Get all users who are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345;
Get all users who were created on 2023-01-01,SELECT * FROM users WHERE created_at = '2023-01-01';
Get all events,SELECT * FROM events;
Get all events that are open,SELECT * FROM events WHERE is_open = 1;
Get all events that were created on 2023-01-01,SELECT * FROM events WHERE created_at = '2023-01-01';
Get all events that were updated on 2023-02-02,SELECT * FROM events WHERE updated_at = '2023-02-02';
Get all events that were created on 2023-01-01 and are open,SELECT * FROM events WHERE created_at = '2023-01-01' AND is_open = 1;
Get all events that were updated on 2023-02-02 and are open,SELECT * FROM events WHERE updated_at = '2023-02-02' AND is_open = 1;
Get all events that were created by user with ID 12345,SELECT * FROM events WHERE user_id = 12345;
Get all events that were updated by user with ID 12345,SELECT * FROM events WHERE updated_by = 12345;
Get the first event in the table,SELECT * FROM events LIMIT 1;
Get the last event in the table,SELECT * FROM events ORDER BY created_at DESC LIMIT 1;
Get all formsettings summarytools that are updated,SELECT * FROM formsettings_summarytools WHERE updated_at IS NOT NULL;
Get all formsettings summarytools that were updated on 2023-02-02,SELECT * FROM formsettings_summarytools WHERE updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345;
Get all formsettings summarytools that were created on 2023-01-01,SELECT * FROM formsettings_summarytools WHERE created_at = '2023-01-01';
Get all formsettings summarytools that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 1;
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 0;
Get the first formsettings summarytool in the table,SELECT * FROM formsettings_summarytools LIMIT 1;
Get the last formsettings summarytool in the table,SELECT * FROM formsettings_summarytools ORDER BY created_at DESC LIMIT 1;
Get all event actions,SELECT * FROM event_actions;
Get all event actions that are done,SELECT * FROM event_actions WHERE date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01,SELECT * FROM event_actions WHERE date_created = '2023-01-01';
Get all event actions that were created by user with ID 12345,SELECT * FROM event_actions WHERE user_id = 12345;
Get all event actions that were updated on 2023-02-02,SELECT * FROM event_actions WHERE updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_actions WHERE user_id = 12345 AND updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and are done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NOT NULL;
Get all event actions that were created by user with ID 12345 and are not done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NULL;
Get all event actions that were created on 2023-01-01 and are done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01 and are not done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NULL;
Get all event staff roles that are active,SELECT * FROM event_staff_roles WHERE is_active = 1;
"Get all event staff roles whose name is ""Lead""",SELECT * FROM event_staff_roles WHERE name = 'Lead';
Get all event staff roles that are owned by pharmacy with ID 12345,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345;
Get all event staff roles that were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE created_at = '2023-01-01';
Get all event staff roles that were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all event staff roles that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and are active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 1;
Get all event staff roles that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 0;
Get all hazards that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and are active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 1;
Get all hazards that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 0;
Get the first hazard in the table,SELECT * FROM hazards LIMIT 1;
Get the last hazard in the table,SELECT * FROM hazards ORDER BY created_at DESC LIMIT 1;
Get the hazards that were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE updated_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at BETWEEN '2023-01-01' AND '2023-02-02';
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported, and limited to the first 10 results","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at LIMIT 10;"
"Get all users and the organizations they are employed by, ordered by the user's name, and limited to the first 10 results","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name LIMIT 10;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number, and limited to the first 10 results","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number LIMIT 10;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date, and limited to the first 10 results","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date LIMIT 10;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity, and limited to the first 10 results","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity LIMIT 10;"
"Get all event actions and the staff members who created those actions, ordered by the action's date, and limited to the first 10 results","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date LIMIT 10;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used, and limited to the first 10 results","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all users and the events they have attended, ordered by the number of events the user has attended, and limited to the first 10 results","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization, and limited to the first 10 results","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC LIMIT 10;"
Get all staff members and the events they have been assigned to,"SELECT staff_directory., events. FROM staff_directory LEFT JOIN events ON staff_directory.id = events.staff_id;"
Get all events and the hazards that have been reported at those events,"SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id;"
Get all users and the organizations they are employed by,"SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id;"
Get all assets and the staff members who are responsible for those assets,"SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id;"
Get all events and the pharmacies that hosted those events,"SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id;"
Get all hazards and the pharmacies that have been affected by those hazards,"SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id;"
Get all event actions and the staff members who created those actions,"SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id;"
Get all formsettings summarytools and the events that use those summarytools,"SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id;"
Get all users and the events they have attended,"SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id;"
Get all organizations and the events that have been held at those organizations,"SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id;"
Get all assets,SELECT * FROM assets;
Get all assets that are active,SELECT * FROM assets WHERE active = 1;
Get all assets whose serial number is 123456,SELECT * FROM assets WHERE serial_number = 123456;
Get all assets that are owned by pharmacy with ID 12345,SELECT * FROM assets WHERE pharmacies_id = 12345;
Get all assets that were created on 2023-01-01,SELECT * FROM assets WHERE created_at = '2023-01-01';
Get all assets that were updated on 2023-02-02,SELECT * FROM assets WHERE updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM assets WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all assets that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM assets WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and are active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 1;
Get all assets that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 0;
Get all staff members,SELECT * FROM staff_directory;
Get all staff members who are active,SELECT * FROM staff_directory WHERE is_active = 1;
"Get all staff members whose name contains ""John""",SELECT * FROM staff_directory WHERE full_name LIKE '%John%';
"Get all staff members whose name is ""John Doe""",SELECT * FROM staff_directory WHERE full_name = 'John Doe';
Get all staff members whose ID is 12345,SELECT * FROM staff_directory WHERE id = 12345;
Get all staff members who are employed by pharmacy with ID 12345,SELECT * FROM staff_directory WHERE pharmacies_id = 12345;
Get all staff members who were created on 2023-01-01,SELECT * FROM staff_directory WHERE created_at = '2023-01-01';
Get all staff members who were updated on 2023-02-02,SELECT * FROM staff_directory WHERE updated_at = '2023-02-02';
Get all staff members who are fixed,SELECT * FROM staff_directory WHERE fixed = 1;
Get all staff members who are not fixed,SELECT * FROM staff_directory WHERE fixed = 0;
Get all hazards,SELECT * FROM hazards;
Get all hazards that are active,SELECT * FROM hazards WHERE active = 1;
"Get all hazards whose name is ""Chemical spill""",SELECT * FROM hazards WHERE name = 'Chemical spill';
Get all hazards that are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345;
Get all hazards that were created on 2023-01-01,SELECT * FROM hazards WHERE created_at = '2023-01-01';
Get all hazards that were updated on 2023-02-02,SELECT * FROM hazards WHERE updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Retrieve all records from the staff_directory table,SELECT * FROM staff_directory;
Retrieve all records from the assets table,SELECT * FROM assets;
Retrieve all records from the hazards table,SELECT * FROM hazards;
Retrieve all records from the event_staff_roles table,SELECT * FROM event_staff_roles;
Retrieve all records from the event_actions table,SELECT * FROM event_actions;
Retrieve all records from the formsettings_summarytools table,SELECT * FROM formsettings_summarytools;
Retrieve all records from the events table,SELECT * FROM events;
Retrieve all records from the users table,SELECT * FROM users;
Retrieve all records from the organizations table,SELECT * FROM organizations;
Retrieve all records from the pharmacies table,SELECT * FROM pharmacies;
Retrieve all events with harmt greater than 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt > 50 AND is_open = TRUE;
Find all users with active status and type 'Manager',SELECT * FROM users WHERE active = TRUE AND type = 'Manager';
Get the facilities with organization_id 'Org123' and is_active set to FALSE,SELECT * FROM facilities WHERE organization_id = 'Org123' AND is_active = FALSE;
Retrieve the assets with asset_type_id 'AT006' and pharmacies_id 'Pharma3',SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3';
Retrieve all events created in the last 15 days,SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '15 days';
Retrieve all assets with an active status,SELECT * FROM assets WHERE active = TRUE;
Retrieve all hazards with a description containing the word 'fire',SELECT * FROM hazards WHERE description ILIKE '%fire%';
Retrieve all event staff roles with an order greater than 10,"SELECT * FROM event_staff_roles WHERE \order\"" > 10;"""
Retrieve all event actions with an action_date in the future,SELECT * FROM event_actions WHERE action_date > CURRENT_DATE;
Retrieve all form settings summary tools with a facility_id of 100,SELECT * FROM formsettings_summarytools WHERE facility_id = 100;
Retrieve all events with harmt between 30 and 50,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50;
Retrieve all users with a profile_id of 500,SELECT * FROM users WHERE profiles_id = 500;
Retrieve all organizations with a country_id of 10,SELECT * FROM organizations WHERE countries_id = 10;
Retrieve all pharmacies created after '2022-01-01',SELECT * FROM pharmacies WHERE created_at > '2022-01-01';
Retrieve all events where the harmt is null,SELECT * FROM events WHERE harmt IS NULL;
Retrieve all assets with an asset_type_id of 'AT005' or 'AT007',"SELECT * FROM assets WHERE asset_type_id IN ('AT005', 'AT007');"
Retrieve all hazards with a name starting with 'Safety',SELECT * FROM hazards WHERE name LIKE 'Safety%';
Retrieve all event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3')","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3');"
Retrieve all form settings summary tools with an organization_id of 200,SELECT * FROM formsettings_summarytools WHERE organization_id = 200;
Retrieve all events with harmt not equal to 0,SELECT * FROM events WHERE harmt <> 0;
Retrieve all users with a date_created between '2022-01-01' and '2022-12-31',SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all organizations with a name containing the word 'Healthcare',SELECT * FROM organizations WHERE name ILIKE '%Healthcare%';
Retrieve all pharmacies where date_disabled is not null,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve all events with a harmt greater than 50 ordered by harmt in descending order,SELECT * FROM events WHERE harmt > 50 ORDER BY harmt DESC;
Retrieve all assets with a created_at date in the last 7 days,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days';
Retrieve all hazards with a description not containing the word 'chemical',SELECT * FROM hazards WHERE description NOT ILIKE '%chemical%';
Retrieve all event staff roles with a forms_id between 100 and 200,SELECT * FROM event_staff_roles WHERE forms_id BETWEEN 100 AND 200;
Retrieve all event actions with an updated_at date in the future,SELECT * FROM event_actions WHERE updated_at > CURRENT_TIMESTAMP;
Retrieve all form settings summary tools with a tools_id of 500 or 600,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600);"
Retrieve all events with harmt equal to 0 or 100,SELECT * FROM events WHERE harmt = 0 OR harmt = 100;
Retrieve all users with a roles_id not equal to 1,SELECT * FROM users WHERE roles_id <> 1;
Retrieve all organizations with a created_at date before '2023-01-01',SELECT * FROM organizations WHERE created_at < '2023-01-01';
Retrieve all pharmacies where name starts with 'Pharma' and ends with 'Inc',SELECT * FROM pharmacies WHERE name LIKE 'Pharma%Inc';
Retrieve all events with harmt greater than or equal to 50 and less than 100,SELECT * FROM events WHERE harmt >= 50 AND harmt < 100;
Retrieve all assets with a serial_number containing the digits '123',SELECT * FROM assets WHERE serial_number LIKE '%123%';
Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order,"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 ORDER BY \""order\"" ASC;"""
"Retrieve all event actions with a user_id not in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id NOT IN (100, 200, 300);"
Retrieve all form settings summary tools with an updated_by value of 'Admin',SELECT * FROM formsettings_summarytools WHERE updated_by = 'Admin';
Retrieve all events with a harmt greater than or equal to 50 ordered by harmt in ascending order,SELECT * FROM events WHERE harmt >= 50 ORDER BY harmt ASC;
Retrieve all users with a date_created between '2022-01-01' and '2022-12-31' excluding weekends,SELECT * FROM users WHERE date_created BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM date_created) < 6;
Retrieve all organizations with a name starting with 'Medical' and ending with 'Center',SELECT * FROM organizations WHERE name LIKE 'Medical%Center';
Retrieve all pharmacies where activate_at is not null and activated_by is null,SELECT * FROM pharmacies WHERE activate_at IS NOT NULL AND activated_by IS NULL;
Retrieve all events with a harmt not equal to 0 ordered by harmt in descending order,SELECT * FROM events WHERE harmt <> 0 ORDER BY harmt DESC;
Retrieve all assets with an updated_at date in the last 7 days,SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '7 days';
Retrieve all hazards with a description containing either 'fire' or 'explosion',SELECT * FROM hazards WHERE description ILIKE '%fire%' OR description ILIKE '%explosion%';
Retrieve all event staff roles with a forms_id not between 100 and 200,SELECT * FROM event_staff_roles WHERE forms_id NOT BETWEEN 100 AND 200;
Retrieve all event actions with an updated_by value not equal to 'Admin',SELECT * FROM event_actions WHERE updated_by <> 'Admin';
"Retrieve all form settings summary tools with a tools_id not in (500, 600)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600);"
Retrieve all events with harmt equal to 0 and 100,"SELECT * FROM events WHERE harmt IN (0, 100);"
Retrieve all users with a roles_id equal to 1,SELECT * FROM users WHERE roles_id = 1;
Retrieve all organizations with a created_at date after '2023-01-01',SELECT * FROM organizations WHERE created_at > '2023-01-01';
Retrieve all pharmacies where name contains the word 'Pharmacy' and has an 'activated_by' value of 'Admin',SELECT * FROM pharmacies WHERE name ILIKE '%Pharmacy%' AND activated_by = 'Admin';
Retrieve all events with harmt less than 50 or greater than 100,SELECT * FROM events WHERE harmt < 50 OR harmt > 100;
Retrieve all assets with a serial_number starting with 'ABC' or ending with 'XYZ',SELECT * FROM assets WHERE serial_number LIKE 'ABC%' OR serial_number LIKE '%XYZ';
Retrieve all hazards with a created_at date not between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE created_at NOT BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order less than or equal to 5 ordered by name in descending order,"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 ORDER BY name DESC;"""
"Retrieve all event actions with a user_id in (100, 200, 300)","SELECT * FROM event_actions WHERE user_id IN (100, 200, 300);"
Retrieve all form settings summary tools with an updated_by value not equal to 'Admin',SELECT * FROM formsettings_summarytools WHERE updated_by <> 'Admin';
Retrieve all events with a harmt greater than or equal to 50 ordered by date_created in ascending order,SELECT * FROM events WHERE harmt >= 50 ORDER BY date_created ASC;
Retrieve all users with a date_created not between '2022-01-01' and '2022-12-31',SELECT * FROM users WHERE date_created NOT BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all organizations with a name containing the word 'Healthcare' and address containing the word 'Street',SELECT * FROM organizations WHERE name ILIKE '%Healthcare%' AND address ILIKE '%Street%';
Retrieve all pharmacies where activate_at is not null or activated_by is not null,SELECT * FROM pharmacies WHERE activate_at IS NOT NULL OR activated_by IS NOT NULL;
Retrieve all events with a harmt equal to 0 ordered by harmt in ascending order,SELECT * FROM events WHERE harmt = 0 ORDER BY harmt ASC;
Retrieve all assets with an updated_at date in the last 30 days,SELECT * FROM assets WHERE updated_at >= CURRENT_DATE - INTERVAL '30 days';
Retrieve all hazards with a description not containing either 'fire' or 'explosion',SELECT * FROM hazards WHERE description NOT ILIKE '%fire%' AND description NOT ILIKE '%explosion%';
"Retrieve all event staff roles with a forms_id not in (100, 200)","SELECT * FROM event_staff_roles WHERE forms_id NOT IN (100, 200);"
Retrieve all event actions with an updated_by value not equal to 'Admin' or 'Manager',"SELECT * FROM event_actions WHERE updated_by NOT IN ('Admin', 'Manager');"
"Retrieve all form settings summary tools with a tools_id not in (500, 600, 700)","SELECT * FROM formsettings_summarytools WHERE tools_id NOT IN (500, 600, 700);"
"Retrieve all events with harmt equal to 0, 50, or 100","SELECT * FROM events WHERE harmt IN (0, 50, 100);"
Retrieve all users with a roles_id not equal to 1 or 2,"SELECT * FROM users WHERE roles_id NOT IN (1, 2);"
Retrieve all organizations with a created_at date before '2023-01-01' or after '2023-12-31',SELECT * FROM organizations WHERE created_at < '2023-01-01' OR created_at > '2023-12-31';
Retrieve all pharmacies where name starts with 'Pharma' or ends with 'Inc',SELECT * FROM pharmacies WHERE name LIKE 'Pharma%' OR name LIKE '%Inc';
Retrieve all events with harmt greater than or equal to 50 or less than 10,SELECT * FROM events WHERE harmt >= 50 OR harmt < 10;
Retrieve all assets with a serial_number containing either 'ABC' or 'XYZ',SELECT * FROM assets WHERE serial_number LIKE '%ABC%' OR serial_number LIKE '%XYZ%';
Retrieve all hazards with a created_at date between '2022-01-01' and '2022-12-31' excluding weekends,SELECT * FROM hazards WHERE created_at BETWEEN '2022-01-01' AND '2022-12-31' AND EXTRACT(ISODOW FROM created_at) < 6;
Retrieve all event staff roles with an order less than or equal to 5 ordered by order in ascending order and updated_by not equal to 'Admin',"SELECT * FROM event_staff_roles WHERE \order\"" <= 5 AND updated_by <> 'Admin' ORDER BY \""order\"" ASC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days';"
Retrieve all form settings summary tools with an organization_id of 200 and updated_at in the last 30 days,SELECT * FROM formsettings_summarytools WHERE organization_id = 200 AND updated_at >= CURRENT_DATE - INTERVAL '30 days';
Retrieve all events with harmt not equal to 0 and 100 ordered by harmt in descending order and is_open set to TRUE,"SELECT * FROM events WHERE harmt NOT IN (0, 100) AND is_open = TRUE ORDER BY harmt DESC;"
Retrieve all assets with an active status and asset_type_id of 'AT005' or 'AT007',"SELECT * FROM assets WHERE active = TRUE AND asset_type_id IN ('AT005', 'AT007');"
Retrieve all hazards with a description containing the word 'fire' and created_at between '2022-01-01' and '2022-12-31',SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31';
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id <> 100 ORDER BY name ASC;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager',"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager');"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id <> 100;"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE;
Retrieve all users with a profile_id of 500 and active status,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01',SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01';
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin',SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin';
Retrieve all events where the harmt is null and is_open set to FALSE,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order,SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC;
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical',SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%';
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 ORDER BY \""order\"" DESC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin',SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin';
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC;
Retrieve all assets with a created_at date in the last 7 days and active status,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC;
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order,"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200);"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin',"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager'","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager');"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 10 rows,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 10;
Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20;
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows,"SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows,"SELECT * FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100, 200) LIMIT 50;"
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC LIMIT 20;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100;
Retrieve all assets with a created_at date in the last 7 days and active status limited to 50 rows offset by 10,SELECT * FROM assets WHERE created_at >= CURRENT_DATE - INTERVAL '7 days' AND active = TRUE LIMIT 50 OFFSET 10;
Retrieve all hazards with a description containing the word 'fire' and created_at date between '2022-01-01' and '2022-12-31' ordered by created_at in ascending order limited to 20 rows offset by 5,SELECT * FROM hazards WHERE description ILIKE '%fire%' AND created_at BETWEEN '2022-01-01' AND '2022-12-31' ORDER BY created_at ASC LIMIT 20 OFFSET 5;
Retrieve all event staff roles with an order greater than or equal to 10 ordered by name in ascending order and forms_id not equal to 100 or 200 limited to 5 rows offset by 2,"SELECT * FROM event_staff_roles WHERE \order\"" >= 10 AND forms_id NOT IN (100 200) ORDER BY name ASC LIMIT 5 OFFSET 2;"""
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20,SELECT * FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin' 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10,SELECT * FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;
Retrieve all events with harmt between 30 and 50 and is_open set to TRUE ordered by harmt in ascending order limited to 30 rows offset by 5,SELECT * FROM events WHERE harmt BETWEEN 30 AND 50 AND is_open = TRUE ORDER BY harmt ASC LIMIT 30 OFFSET 5;
Retrieve all users with a profile_id of 500 and active status ordered by date_created in descending order limited to 20 rows offset by 5,SELECT * FROM users WHERE profiles_id = 500 AND active = TRUE ORDER BY date_created DESC LIMIT 20 OFFSET 5;
Retrieve all organizations with a country_id of 10 and created_at date after '2023-01-01' ordered by created_at in ascending order limited to 10 rows offset by 2,SELECT * FROM organizations WHERE countries_id = 10 AND created_at > '2023-01-01' ORDER BY created_at ASC LIMIT 10 OFFSET 2;
Retrieve all pharmacies created after '2022-01-01' and activated by 'Admin' ordered by created_at in descending order limited to 50 rows offset by 10,SELECT * FROM pharmacies WHERE created_at > '2022-01-01' AND activated_by = 'Admin' ORDER BY created_at DESC LIMIT 50 OFFSET 10;
Retrieve all events where the harmt is null and is_open set to FALSE ordered by date_created in ascending order limited to 50 rows offset by 5,SELECT * FROM events WHERE harmt IS NULL AND is_open = FALSE ORDER BY date_created ASC LIMIT 50 OFFSET 5;
Retrieve all assets with an asset_type_id of 'AT006' and pharmacies_id of 'Pharma3' ordered by serial_number in ascending order and active status limited to 100 rows offset by 20,"SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3' ORDER BY serial_number ASC, active DESC LIMIT 100 OFFSET 20;"
Retrieve all hazards with a name starting with 'Safety' and description not containing the word 'chemical' ordered by name in descending order limited to 30 rows offset by 10,SELECT * FROM hazards WHERE name LIKE 'Safety%' AND description NOT ILIKE '%chemical%' ORDER BY name DESC LIMIT 30 OFFSET 10;
Retrieve all event staff roles with an order greater than 10 and forms_id less than 200 ordered by order in descending order and updated_by not equal to 'Admin' limited to 20 rows offset by 5,"SELECT * FROM event_staff_roles WHERE \order\"" > 10 AND forms_id < 200 AND updated_by <> 'Admin' ORDER BY \""order\"" DESC LIMIT 20 OFFSET 5;"""
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10","SELECT * FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all form settings summary tools with a facility_id of 100 and updated_by value not equal to 'Admin' ordered by tools_id in ascending order limited to 10 rows offset by 2,SELECT * FROM formsettings_summarytools WHERE facility_id = 100 AND updated_by <> 'Admin' ORDER BY tools_id ASC LIMIT 10 OFFSET 2;
Retrieve all events with harmt not equal to 0 ordered by harmt in descending order and is_open set to TRUE limited to 100 rows offset by 30,SELECT * FROM events WHERE harmt <> 0 AND is_open = TRUE ORDER BY harmt DESC LIMIT 100 OFFSET 30;
Retrieve all event actions with an action_date in the future and updated_by not equal to 'Admin' or 'Manager' ordered by action_date in descending order limited to 100 rows offset by 20 with only the action_date and updated_by columns,"SELECT action_date, updated_by FROM event_actions WHERE action_date > CURRENT_DATE AND updated_by NOT IN ('Admin', 'Manager') ORDER BY action_date DESC LIMIT 100 OFFSET 20;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns,"SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1', 'Pharma2', 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all form settings summary tools with a tools_id of 500 or 600 and facility_id not equal to 100 or 200 limited to 50 rows offset by 10 with only the tools_id and facility_id columns,"SELECT tools_id, facility_id FROM formsettings_summarytools WHERE tools_id IN (500, 600) AND facility_id NOT IN (100 200) LIMIT 50 OFFSET 10;"
"Retrieve all event actions with a user_pharmacy_id in ('Pharma1', 'Pharma2', 'Pharma3') and updated_at in the last 7 days ordered by action_date in ascending order and updated_by not equal to 'Admin' or 'Manager' limited to 50 rows offset by 10 with only the action_id and action_date columns","SELECT action_id, action_date FROM event_actions WHERE user_pharmacy_id IN ('Pharma1' 'Pharma2' 'Pharma3') AND updated_at >= CURRENT_DATE - INTERVAL '7 days' ORDER BY action_date ASC, updated_by NOT IN ('Admin', 'Manager') LIMIT 50 OFFSET 10;"
Retrieve all staff members from the staff_directory table.,SELECT * FROM staff_directory;
Get the assets with an asset type ID of 123.,SELECT * FROM assets WHERE asset_type_id = 123;
"Find hazards with a name containing the word ""fire"" and created in the last month.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND created_at >= NOW() - INTERVAL 1 MONTH;
Get all event staff roles.,SELECT * FROM event_staff_roles;
Retrieve event actions for a specific user and pharmacy ID.,SELECT * FROM event_actions WHERE user_id = 123 AND user_pharmacy_id = 456;
Find form settings summary tools for a particular facility ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789;
Retrieve events created by a specific user and organization ID.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456;
Get all users with an active status.,SELECT * FROM users WHERE active = 1;
"Find organizations with names containing the word ""hospital.""",SELECT * FROM organizations WHERE name LIKE '%hospital%';
Retrieve pharmacies created after a specific date.,SELECT * FROM pharmacies WHERE created_at > '2023-01-01';
Retrieve the full names and employee IDs of staff members in the staff_directory table who belong to a specific organization.,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = 'your_organization_id';"
Get the serial numbers of assets of a specific asset type that are active and belong to a particular pharmacy.,SELECT serial_number FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
Find hazards created after a specific date and are associated with a particular pharmacy.,SELECT * FROM hazards WHERE created_at > '2023-01-01' AND pharmacies_id = 'your_pharmacy_id';
Retrieve event staff roles with a default flag set to true.,SELECT * FROM event_staff_roles WHERE is_default = 1;
Get event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id';
Find form settings summary tools for a specific facility and organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 'your_facility_id' AND organization_id = 'your_organization_id';
Retrieve events of a specific event type that are still open.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1;
Get users with a specific role and belonging to a particular organization.,SELECT * FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id';
Find organizations created after a specific date and located in a particular city.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND city = 'your_city_name';
Retrieve pharmacies activated between two specific dates.,SELECT * FROM pharmacies WHERE activated_by > '2023-01-01' AND activated_by < '2023-07-01';
Retrieve the full names and registration numbers of active users who belong to a specific organization.,"SELECT full_name, reg_number FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Get the names and descriptions of all hazards associated with a particular pharmacy.,"SELECT name, description FROM hazards WHERE pharmacies_id = 'your_pharmacy_id';"
"Find the full names and updated dates of users who have the ""admin"" role.","SELECT users_fullname, updated_at FROM users WHERE roles_id = 'your_role_id' AND profiles_id = 'your_profile_id';"
Get the event IDs and dates for events created by a specific user within a given date range.,"SELECT event_id, date_created FROM events WHERE users_id = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date'"
"Retrieve the full names and updated dates of users who have the ""supervisor"" role and belong to a specific organization.","SELECT users_fullname, updated_at FROM users WHERE roles_id = 'your_role_id' AND organization_id = 'your_organization_id';"
Get the names and descriptions of hazards created by a specific user within the last 30 days.,"SELECT name, description FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAY AND updated_by = 'your_user_id';"
Find the event IDs and dates for events that were closed in the last week.,"SELECT events_id, date_closed FROM event_actions WHERE date_done >= NOW() - INTERVAL 7 DAY;"
Retrieve the names and addresses of organizations located in a specific country.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id';"
Get the staff roles and their associated forms IDs in a specific facility.,"SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Get the list of all organizations that have a country ID of 123.,SELECT * FROM organizations WHERE countries_id = 123;
Find all events that were created by a user with the ID 123.,SELECT * FROM events WHERE users_id = 123;
"Get the list of all pharmacies that have a name containing the word ""hospital"".",SELECT * FROM pharmacies WHERE name LIKE '%hospital%';
Retrieve all users who are associated with a particular organization ID.,SELECT * FROM users WHERE organizations_id = 123;
Find all assets that were created in the last 30 days.,SELECT * FROM assets WHERE created_at >= NOW() - INTERVAL 30 DAY;
Get the list of all hazards that are associated with a particular event ID.,SELECT * FROM hazards WHERE events_id = 123;
"Get the list of all events that have a status of ""open"".",SELECT * FROM events WHERE is_open = 1;
"Find all events that were created in the last 7 days and have a status of ""closed"".",SELECT * FROM events WHERE created_at >= NOW() - INTERVAL 7 DAY AND is_open = 0;
"Get the list of all users who have a role of ""admin"".",SELECT * FROM users WHERE roles_id = 1;
Retrieve all event actions that were performed by a user with the ID 123.,SELECT * FROM event_actions WHERE user_id = 123;
Find all form settings summary tools that were updated in the last 24 hours.,SELECT * FROM formsettings_summarytools WHERE updated_at >= NOW() - INTERVAL 1 DAY;
Get the list of all assets that are associated with a particular pharmacy ID and have an asset type ID of 123.,SELECT * FROM assets WHERE pharmacies_id = 123 AND asset_type_id = 123;
"Get the list of all events that have a type of ""hazard"".",SELECT * FROM events WHERE events_type_id = 1;
Find all hazards that were created by a user with the ID 123.,SELECT * FROM hazards WHERE created_by = 123;
"Get the list of all pharmacies that have a city of ""London"".",SELECT * FROM pharmacies WHERE city = 'London';
"Retrieve all users who are associated with a particular pharmacy ID and have a role of ""admin"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1;
"Find all assets that were updated in the last 24 hours and have a serial number of ""1234567890"".",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890';
"Get the list of all hazards that are associated with a particular event ID and have a name containing the word ""fire"".",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%';
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days.",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", and were created in the last 30 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Find all assets that were updated in the last 24 hours, have a serial number of ""1234567890"", and are associated with a particular pharmacy ID.",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890' AND pharmacies_id = 123;
"Get the list of all hazards that are associated with a particular event ID, have a name containing the word ""fire"", and were created by a user with the ID 123.",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%' AND created_by = 123;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"".",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, and have a status of ""active"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1;
"Find all assets that were updated in the last 24 hours, have a serial number of ""1234567890"", are associated with a particular pharmacy ID, and have a status of ""active"".",SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 1 DAY AND serial_number = '1234567890' AND pharmacies_id = 123 AND is_active = 1;
"Get the list of all hazards that are associated with a particular event ID, have a name containing the word ""fire"", were created by a user with the ID 123, and have a status of ""open"".",SELECT * FROM hazards WHERE events_id = 123 AND name LIKE '%fire%' AND created_by = 123 AND is_open = 1;
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days and have a status of ""open"".",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND is_open = 1;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all events that have a type of ""hazard"" and were created in the last 7 days and have a status of ""open"" and were created by a user with the ID 123.",SELECT * FROM events WHERE events_type_id = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND is_open = 1 AND created_by = 123;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 7 days and have a serial number of ""1234567890"".",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND serial_number = '1234567890';
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a city of ""London"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a city of ""London"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a city of ""London"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London';
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days and have a city of ""London"" and have a serial number of ""1234567890"".",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY AND city = 'London' AND serial_number = '1234567890';
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 14 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 14 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 14 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 14 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 14 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 30 days",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 30 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 30 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 60 days, have a status of ""active"", and were created in the last 30 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 60 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 30 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 90 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 90 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 90 days, have a status of ""active"", and were created in the last 90 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 90 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 90 DAY
Get the asset types and their corresponding item IDs in a specific pharmacy.,"SELECT full_name, employee_id FROM staff_directory WHERE created_at >= NOW() - INTERVAL 3 MONTH;"
Find hazards with a specific organization hazard ID and associated with a particular pharmacy.,"SELECT asset_type_id, asset_items_id FROM assets WHERE pharmacies_id = 'random_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE organization_hazard_id = 'random_organization_hazard_id' AND pharmacies_id = 'random_pharmacy_id';
Get the event IDs and user IDs of event actions created by a specific user in the last week.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility.,"SELECT events_id, user_id FROM event_actions WHERE user_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 7 DAY;"
Retrieve the users' full names and organizations they belong to.,SELECT * FROM formsettings_summarytools WHERE tools_id = 'random_tool_id' AND facility_id = 'random_facility_id';
Get the names and countries of organizations created after a specific date.,"SELECT users_fullname, organization_id FROM users;"
Find pharmacies with a specific name and activated by a particular user.,"SELECT name, countries_id FROM organizations WHERE created_at > 'random_date';"
Retrieve events created by a specific user and type.,SELECT * FROM pharmacies WHERE name = 'random_pharmacy_name' AND activated_by = 'random_user_id';
Get the users' profiles IDs and their associated roles.,SELECT * FROM events WHERE users_id = 'random_user_id' AND events_type_id = 'random_event_type_id';
"Find organizations with names containing the word ""medical"" and located in a specific city.","SELECT profiles_id, roles_id FROM users;"
Retrieve the pharmacies' names and their associated organizations' names.,SELECT * FROM organizations WHERE name LIKE '%medical%' AND city = 'random_city_name';
Get the event IDs and dates created by a specific user within the last month.,"SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organizations_id = organizations.sf_id;"
Find users with a specific SF ID and their associated profile IDs.,"SELECT event_id, date_created FROM events WHERE users_id = 'random_user_id' AND date_created >= NOW() - INTERVAL 1 MONTH;"
Retrieve the event staff roles' names and associated form IDs in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'random_sf_id';"
Get the organizations' names and addresses located in a specific country.,"SELECT name, forms_id FROM event_staff_roles WHERE facility_id = 'random_facility_id';"
Find pharmacies created between two specific dates and owned by a particular organization.,"SELECT name, address FROM organizations WHERE countries_id = 'random_country_id';"
Retrieve the events' types and the number of occurrences for each type.,SELECT * FROM pharmacies WHERE created_at BETWEEN 'random_start_date' AND 'random_end_date' AND organizations_id = 'random_organization_id';
Get the staff directory entries with specific IDs and their associated employee IDs.,"SELECT events_type_id, COUNT(*) AS occurrences FROM events GROUP BY events_type_id;"
Retrieve the full names and roles of users who belong to a specific organization.,"SELECT * FROM staff_directory WHERE id IN ('random_id1', 'random_id2', 'random_id3') AND employee_id IS NOT NULL;"
"Get the list of all events that have a type of ""hazard"" and have a status of ""open"" and were created in the last 120 days.","SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""open"" and were created in the last 120 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 120 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 180 days, have a status of ""active"", and were created in the last 120 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Get the list of all events that have a type of ""hazard"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 180 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 120 DAY;
"Find all hazards that were created by a user with the ID 123 and have a name containing the word ""fire"" and have a status of ""closed"" and were created in the last 7 days.",SELECT * FROM events WHERE events_type_id = 1 AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Get the list of all pharmacies that have a city of ""London"" and have a name containing the word ""hospital"" and have a status of ""active"" and were created in the last 7 days.",SELECT * FROM hazards WHERE created_by = 123 AND name LIKE '%fire%' AND is_open = 0 AND created_at >= NOW() - INTERVAL 7 DAY;
"Retrieve all users who are associated with a particular pharmacy ID, have a role of ""admin"", were created in the last 30 days, have a status of ""active"", and were created in the last 7 days.",SELECT * FROM pharmacies WHERE city = 'London' AND name LIKE '%hospital%' AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Retrieve the full names and roles of users who belong to a specific organization.,SELECT * FROM users WHERE organizations_id = 123 AND roles_id = 1 AND created_at >= NOW() - INTERVAL 30 DAY AND is_active = 1 AND created_at >= NOW() - INTERVAL 7 DAY;
Retrieve the full names and email addresses of active users belonging to a specific organization.,"SELECT user_id, profiles_id FROM users WHERE user_id = 'your_user_id' AND organization_id = 'your_organization_id';"
Get the names and descriptions of assets associated with a specific pharmacy.,"SELECT full_name, email FROM users WHERE organization_id = 'your_organization_id' AND is_active = 1;"
Find hazards created by a specific user and associated with a particular pharmacy.,"SELECT name, description FROM assets WHERE pharmacies_id = 'your_pharmacy_id';"
Retrieve the names and orders of event staff roles in a specific facility.,SELECT * FROM hazards WHERE created_by = 'your_user_id' AND pharmacies_id = 'your_pharmacy_id';
"Get the event actions for a specific event ID and user ID, ordered by the action date in descending order.","SELECT name, order FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and facility ID.,SELECT * FROM event_actions WHERE events_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY action_date DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND facility_id = 'your_facility_id';
Get the users' full names and phone numbers in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""health"" and located in a specific city.","SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.",SELECT * FROM organizations WHERE name LIKE '%health%' AND city = 'your_city_name';
Find users with a specific SF ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
Retrieve the event staff roles' names and their associated default flags in a specific facility.,"SELECT sf_id, profiles_id FROM users WHERE sf_id = 'your_sf_id' AND organization_id = 'your_organization_id';"
"Get the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, is_default FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find pharmacies activated by a specific user within a specific date range.,"SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
"Retrieve events of a specific event type and their associated prescriber IDs, sorted by event ID.",SELECT * FROM pharmacies WHERE activated_by = 'your_user_id' AND activated_at BETWEEN 'start_date' AND 'end_date';
Get the organizations' names and trial end dates in ascending order of trial end dates.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND prescriber_id IS NOT NULL ORDER BY event_id ASC;
Find pharmacies created after a specific date and activated by a particular user.,"SELECT name, trial_end_date FROM organizations ORDER BY trial_end_date ASC;"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
"Find hazards with descriptions containing the word ""safety"" and created by a specific user.","SELECT name, description FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';"
Retrieve the event staff roles' names and their associated form IDs in a specific facility.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_by = 'your_user_id';
"Get the event actions for a specific event ID and user ID, ordered by the date done in descending order.","SELECT name, form_id FROM event_staff_roles WHERE facility_id = 'your_facility_id';"
Find form settings summary tools associated with a specific tool ID and organization ID.,SELECT * FROM event_actions WHERE event_id = 'your_event_id' AND user_id = 'your_user_id' ORDER BY date_done DESC;
Retrieve events of a specific event type that are open and created by a particular user.,SELECT * FROM formsettings_summarytools WHERE tool_id = 'your_tool_id' AND organization_id = 'your_organization_id';
Get the users' full names and their associated roles in a specific organization.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND created_by = 'your_user_id';
"Find organizations with names containing the word ""hospital"" and located in a specific city.","SELECT full_name, role_id FROM users WHERE organization_id = 'your_organization_id';"
Find users with a specific user ID and their associated profile IDs in a specific organization.,"SELECT event_id, date_created FROM events WHERE created_by = 'your_user_id' AND date_created BETWEEN 'start_date' AND 'end_date';"
"Retrieve the pharmacies' names and their associated organizations' names, sorted by the pharmacy name.","SELECT pharmacies.name, organizations.name FROM pharmacies INNER JOIN organizations ON pharmacies.organization_id = organizations.id ORDER BY pharmacies.name ASC;"
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM staff_directory WHERE created_at > 'your_date' AND organization_id = 'your_organization_id';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE active = 1 AND asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id';
Find hazards with specific names and descriptions associated with a particular pharmacy.,SELECT * FROM hazards WHERE name = 'your_hazard_name' AND description = 'your_hazard_description' AND pharmacies_id = 'your_pharmacy_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE events_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
Retrieve the full names and official user IDs of users who joined after a specific date in a specific organization.,"SELECT full_name, official_user_id FROM users WHERE organization_id = 'your_organization_id' AND created_at > 'your_date';"
Get the active assets with a specific asset type ID and belonging to a particular pharmacy.,SELECT * FROM assets WHERE asset_type_id = 'your_asset_type_id' AND pharmacies_id = 'your_pharmacy_id' AND active = 1;
"Find hazards with names containing the word ""fire"" and descriptions containing the word ""safety"" associated with a particular pharmacy.",SELECT * FROM hazards WHERE name LIKE '%fire%' AND description LIKE '%safety%' AND pharmacies_id = 'your_pharmacy_id';
Retrieve events of a specific event type that are open and created after a specific date.,SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND is_open = 1 AND date_created > 'your_date';
"Retrieve the names and addresses of organizations located in a specific country, ordered by the organization name.","SELECT name, address FROM organizations WHERE countries_id = 'your_country_id' ORDER BY name ASC;"
Retrieve the users' full names and phone numbers in a specific organization.,"SELECT full_name, phone_number FROM users WHERE organization_id = 'your_organization_id';"
Get the names and descriptions of assets of a specific asset type in a particular pharmacy.,"SELECT name, description FROM assets WHERE asset"
"Retrieve the names and addresses of staff members in a specific organization, ordered by full name.","SELECT full_name, address FROM staff_directory WHERE organization_id = 'your_organization_id' ORDER BY full_name;"
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by facility name.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name;"
Get the count of active assets in a specific facility.,SELECT COUNT(*) AS active_asset_count FROM assets WHERE facility_id = 'your_facility_id' AND active = 1;
"Retrieve the names and descriptions of hazards associated with a specific facility, ordered by hazard name.","SELECT name, description FROM hazards WHERE facility_id = 'your_facility_id' ORDER BY name;"
"Find the events where a specific user has taken action within a specific date range, ordered by action date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND action_date BETWEEN 'start_date' AND 'end_date' ORDER BY action_date;
"Retrieve the names and order numbers of roles associated with a specific form ID, ordered by order number.","SELECT name, order FROM event_staff_roles WHERE form_id = 'your_form_id' ORDER BY order;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by updated date.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND updated_date BETWEEN 'start_date' AND 'end_date' ORDER BY updated_date;
Get the count of open events in a specific facility.,SELECT COUNT(*) AS open_event_count FROM events WHERE facility_id = 'your_facility_id' AND is_open = 1;
"Retrieve the names and addresses of facilities associated with a specific organization, filtered by a specific city, ordered by address.","SELECT name, address FROM facilities WHERE organization_id = 'your_organization_id' AND city = 'your_city_name' ORDER BY address;"
"Find events with a specific type and created by a specific user, filtered by a specific city, sorted by date created in descending order.",SELECT * FROM events WHERE event_type_id = 'your_event_type_id' AND created_by = 'your_user_id' AND city = 'your_city_name' ORDER BY date_created DESC;
"Retrieve the names and descriptions of tools associated with a specific form ID, filtered by a specific facility, ordered by name in descending order.","SELECT name, description FROM tools WHERE form_id = 'your_form_id' AND facility_id = 'your_facility_id' ORDER BY name DESC;"
"Find the events where a specific user has taken action and updated the event within a specific date range, ordered by event ID.",SELECT * FROM events WHERE user_id = 'your_user_id' AND updated_by = 'your_user_id' AND event_id BETWEEN 'id1' AND 'id2' ORDER BY event_id;
"Retrieve the names and addresses of facilities in a specific city, filtered by a specific country, ordered by name, limited to 10 records.","SELECT name, address FROM facilities WHERE city = 'your_city_name' AND country = 'your_country_name' ORDER BY name LIMIT 10;"
Retrieve all staff members' full names and employee IDs,"SELECT full_name, employee_id FROM staff_directory;"
Find the staff member with a specific ID,SELECT * FROM staff_directory WHERE id = <staff_id>;
Get the full name and registration number of active staff members,"SELECT full_name, reg_number FROM staff_directory WHERE is_active = true;"
Find staff members belonging to a specific organization,SELECT * FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the count of active staff members,SELECT COUNT(*) FROM staff_directory WHERE is_active = true;
Update the employee ID for a specific staff member,UPDATE staff_directory SET employee_id = <new_employee_id> WHERE id = <staff_id>;
Find all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get all staff members working at a particular pharmacy,SELECT * FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Get the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Select the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Retrieve the names and official user IDs of fixed employees,"SELECT full_name, official_user_id FROM staff_directory WHERE fixed = true;"
Find staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Select the staff members with a specific registration number,SELECT * FROM staff_directory WHERE reg_number = <registration_number>;
Retrieve the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Select the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Get the names and creation timestamps of recently updated staff members,"SELECT full_name, created_at FROM staff_directory ORDER BY updated_at DESC LIMIT 5;"
Find the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Get the count of staff members who are not active:,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the count of staff members who are not active,SELECT COUNT(*) FROM staff_directory WHERE is_active = false;
Retrieve the distinct organization IDs present in the staff directory,SELECT DISTINCT org_id FROM staff_directory;
Delete a staff member from the directory based on their ID,DELETE FROM staff_directory WHERE id = <staff_id>;
Find the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
List the full names and updated timestamps of recently created staff members,"SELECT full_name, updated_at FROM staff_directory ORDER BY created_at DESC LIMIT 5;"
List the employee IDs and registration numbers of active staff members belonging to a specific organization,"SELECT employee_id, reg_number FROM staff_directory WHERE is_active = true AND org_id = <organization_id>;"
List the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Retrieve the staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the full names and employee IDs of staff members with a specific official user ID,"SELECT full_name, employee_id FROM staff_directory WHERE official_user_id = <official_user_id>;"
Retrieve the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
List the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Find the official user IDs and locum full names of staff members who are locums,"SELECT official_user_id, locum_full_name FROM staff_directory WHERE locum_full_name IS NOT NULL;"
Retrieve the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
List the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Select the full names and employee IDs of all staff members,"SELECT full_name, employee_id FROM staff_directory;"
Find all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Select all staff members who are active,SELECT * FROM staff_directory WHERE is_active = true;
Retrieve the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Select the full names and registration numbers of staff members,"SELECT full_name, reg_number FROM staff_directory;"
Get the count of staff members in the staff directory,SELECT COUNT(*) FROM staff_directory;
Retrieve the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Select the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
List the full names and creation timestamps of staff members,"SELECT full_name, created_at FROM staff_directory;"
Find all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
List all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Select all staff members who are fixed employees,SELECT * FROM staff_directory WHERE fixed = true;
Get the distinct pharmacy IDs present in the staff directory,SELECT DISTINCT pharmacies_id FROM staff_directory;
Get the distinct pharmacy IDs present in the staff directory,"SELECT full_name, official_user_id FROM staff_directory;"
Retrieve the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Select the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Get the full names and official user IDs of staff members,"SELECT full_name, official_user_id FROM staff_directory;"
Find all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
List all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Select all staff members who are not active,SELECT * FROM staff_directory WHERE is_active = false;
Get the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Select the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
List the distinct employee IDs present in the staff directory,SELECT DISTINCT employee_id FROM staff_directory;
Retrieve the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Select the full names and updated timestamps of staff members,"SELECT full_name, updated_at FROM staff_directory;"
Find all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Select all staff members who have a locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
Get the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Select the distinct official user IDs present in the staff directory,SELECT DISTINCT official_user_id FROM staff_directory;
Retrieve the full names and active statuses of staff members,"SELECT full_name, is_active FROM staff_directory;"
Get the full names and official user IDs of active staff members,"SELECT full_name, official_user_id FROM staff_directory WHERE is_active = true;"
Select the staff members who are locums (temporary replacements) and have a specific full name,SELECT * FROM staff_directory WHERE locum_full_name = '<locum_full_name>';
Select the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Get the  staff members who have been created or updated within the last 7 days,SELECT * FROM staff_directory WHERE created_at >= NOW() - INTERVAL '7 days' OR updated_at >= NOW() - INTERVAL '7 days';
Find staff members who are not active and have a specific registration number,SELECT * FROM staff_directory WHERE is_active = false AND reg_number = '<registration_number>';
Get the full names and creation timestamps of staff members working at a specific pharmacy,"SELECT full_name, created_at FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;"
Retrieve the full names and employee IDs of staff members belonging to a specific organization,"SELECT full_name, employee_id FROM staff_directory WHERE org_id = <organization_id>;"
Get the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Select the distinct registration numbers present in the staff directory,SELECT DISTINCT reg_number FROM staff_directory;
Find all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Select all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
List all staff members who are currently active and fixed employees,SELECT * FROM staff_directory WHERE is_active = true AND fixed = true;
Retrieve the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the full names and creation timestamps of staff members in descending order of creation,"SELECT full_name, created_at FROM staff_directory ORDER BY created_at DESC;"
Select the count of staff members who work at a specific pharmacy,SELECT COUNT(*) FROM staff_directory WHERE pharmacies_id = <pharmacy_id>;
Retrieve the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Select the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
List the full names and updated timestamps of staff members in ascending order of update time,"SELECT full_name, updated_at FROM staff_directory ORDER BY updated_at ASC;"
Find all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Select all staff members who have a null locum full name,SELECT * FROM staff_directory WHERE locum_full_name IS NULL;
Get the distinct official user IDs of staff members belonging to a specific organization,SELECT DISTINCT official_user_id FROM staff_directory WHERE org_id = <organization_id>;
Retrieve the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the full names and fixed statuses of staff members,"SELECT full_name, fixed FROM staff_directory;"
Get the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Select the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
List the distinct organization IDs of staff members who are currently active,SELECT DISTINCT org_id FROM staff_directory WHERE is_active = true;
Retrieve the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Get the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
List the full names and active statuses of staff members in alphabetical order of names,"SELECT full_name, is_active FROM staff_directory ORDER BY full_name;"
Find all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Select all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get all staff members who have been updated within the last 30 days,SELECT * FROM staff_directory WHERE updated_at >= NOW() - INTERVAL '30 days';
Get the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Select the distinct pharmacy IDs of staff members who are fixed employees,SELECT DISTINCT pharmacies_id FROM staff_directory WHERE fixed = true;
Retrieve all pharmacies,SELECT * FROM pharmacies;
Select all from pharmacies,SELECT * FROM pharmacies;
Retrieve the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Select the name and activation date of all pharmacies,"SELECT name, activate_at FROM pharmacies;"
Retrieve the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
List the pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies that are disabled,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve the pharmacies that were activated by a specific user,SELECT * FROM pharmacies WHERE activated_by = 'user_id';
Retrieve the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
Select the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
List the pharmacies that have been updated in the last week,SELECT * FROM pharmacies WHERE updated_at >= NOW() - INTERVAL '7 days';
"Retrieve all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
"Select all the details of the pharmacies that were activated between June 1, 2023, and June 30, 2023",SELECT * FROM pharmacies WHERE activate_at BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Select the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Get the pharmacies that have never been disabled,SELECT * FROM pharmacies WHERE date_disabled IS NULL;
Retrieve the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Select the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Get the count of pharmacies for each organization,"SELECT organizations_id, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY organizations_id;"
Retrieve the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Select the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Get the oldest activated pharmacy,SELECT * FROM pharmacies WHERE activate_at = (SELECT MIN(activate_at) FROM pharmacies);
Retrieve the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
Select the latest updated pharmacy,SELECT * FROM pharmacies WHERE updated_at = (SELECT MAX(updated_at) FROM pharmacies);
"Retrieve the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Get the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
"Select the pharmacies activated by a specific user, ordered by their activation date",SELECT * FROM pharmacies WHERE activated_by = 'user_id' ORDER BY activate_at;
Retrieve the names of all pharmacies,SELECT name FROM pharmacies;
Get the names of all pharmacies,SELECT name FROM pharmacies;
Select the names of all pharmacies,SELECT name FROM pharmacies;
Retrieve the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Get the IDs and activation dates of all pharmacies,"SELECT sf_id, activate_at FROM pharmacies;"
Retrieve the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Select the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
List the pharmacies that have been enabled and disabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND date_disabled IS NOT NULL;
Retrieve the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Get the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Select the names and creation dates of pharmacies ordered by their activation date,"SELECT name, created_at FROM pharmacies ORDER BY activate_at;"
Retrieve the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
Select the number of pharmacies created each month,"SELECT EXTRACT(MONTH FROM created_at) AS month, COUNT(*) AS pharmacy_count FROM pharmacies GROUP BY month;"
"Retrieve the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
"Select the pharmacies with a name containing the word ""health""",SELECT * FROM pharmacies WHERE name LIKE '%health%';
Retrieve the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Select the pharmacies that have been both activated and updated in the same month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM updated_at);
Retrieve the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Select the pharmacies that have never been enabled or disabled,SELECT * FROM pharmacies WHERE date_enabled IS NULL AND date_disabled IS NULL;
Retrieve the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies created in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM created_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Get all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Select all pharmacies activated today,SELECT * FROM pharmacies WHERE DATE(activate_at) = CURRENT_DATE;
Retrieve the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
Select the pharmacies activated in the last week,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_DATE - INTERVAL '7 days';
"Retrieves all rows from the ""pharmacies"" table where the ""activate_at"" column falls between the dates '2023-06-01' and '2023-06-30'",SELECT * FROM pharmacies WHERE DATE(activate_at) BETWEEN '2023-06-01' AND '2023-06-30';
Retrieve the pharmacies activated in the morning (before 12 PM),SELECT * FROM pharmacies WHERE EXTRACT(HOUR FROM activate_at) < 12;
Retrieve the pharmacies activated on weekends (Saturday or Sunday),"SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) IN (0, 6);"
Retrieve the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Get the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Select the pharmacies activated in the current month,SELECT * FROM pharmacies WHERE EXTRACT(MONTH FROM activate_at) = EXTRACT(MONTH FROM CURRENT_DATE);
Retrieve the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Select the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Get the pharmacies activated within the last hour,SELECT * FROM pharmacies WHERE activate_at >= CURRENT_TIMESTAMP - INTERVAL '1 hour';
Retrieve the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Get the pharmacies activated on the same day of the week as the current date,SELECT * FROM pharmacies WHERE EXTRACT(DOW FROM activate_at) = EXTRACT(DOW FROM CURRENT_DATE);
Retrieve pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Get pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Select pharmacies ordered by their activation date in ascending order,SELECT * FROM pharmacies ORDER BY activate_at ASC;
Retrieve pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Select pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Get the  pharmacies that are currently enabled,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL;
Retrieve pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Select the pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Get pharmacies with names starting with 'A',SELECT * FROM pharmacies WHERE name LIKE 'A%';
Retrieve pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select the pharmacies ordered by their name in descending order,SELECT * FROM pharmacies ORDER BY name DESC;
Select pharmacies with both activation and enablement dates,SELECT * FROM pharmacies WHERE date_enabled IS NOT NULL AND activate_at IS NOT NULL;
Retrieve pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Select the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Get the pharmacies with a disabled status,SELECT * FROM pharmacies WHERE date_disabled IS NOT NULL;
Retrieve pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Select the pharmacies created in the last month,SELECT * FROM pharmacies WHERE created_at >= CURRENT_DATE - INTERVAL '1 month';
Retrieve pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Get the pharmacies activated in the current year,SELECT * FROM pharmacies WHERE EXTRACT(YEAR FROM activate_at) = EXTRACT(YEAR FROM CURRENT_DATE);
Retrieve pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
Select the pharmacies with NULL activation dates,SELECT * FROM pharmacies WHERE activate_at IS NULL;
"Select all columns from the ""organizations"" table",SELECT * FROM organizations;
"Retrieve all columns from the ""organizations"" table",SELECT * FROM organizations;
"Select only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Get only the ""name"" column from the ""organizations"" table",SELECT name FROM organizations;
"Select distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
"Get the distinct city names from the ""organizations"" table",SELECT DISTINCT city FROM organizations;
Select organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Get organizations with trial periods ending today,SELECT * FROM organizations WHERE trial_ends_at = CURDATE();
Select organizations located in a new york city,SELECT * FROM organizations WHERE city = 'New York';
Retrieve the organizations located in a New York city,SELECT * FROM organizations WHERE city = 'New York';
Select organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Get the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Get the organizations with trial periods ending within the next 7 days,"SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
Retrieve the organizations with trial periods ending in the future,SELECT * FROM organizations WHERE trial_ends_at > CURDATE();
Select organizations with addresses in a specific country,SELECT * FROM organizations WHERE countries_id = <country_id>;
Select organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Retrieve the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
Get the organizations ordered by their trial end dates in descending order,SELECT * FROM organizations ORDER BY trial_ends_at DESC;
"Select organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, ordered by their trial end dates","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) ORDER BY trial_ends_at;"
"Select organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Get the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
"Retrieve the organizations with trial periods ending within the next 7 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY city;"
Select organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Retrieve the organizations with trial periods ending tomorrow,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() + INTERVAL 1 DAY;
Select organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Retrieve the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
Get the organizations with trial periods already expired,SELECT * FROM organizations WHERE trial_ends_at < CURDATE();
"Select organizations with names containing the word ""Tech""",SELECT * FROM organizations WHERE name LIKE '%Tech%';
"Select organizations located in cities starting with the letter ""C""",SELECT * FROM organizations WHERE city LIKE 'C%';
"Select organizations located in cities starting with the letter ""S""",SELECT * FROM organizations WHERE city LIKE 'S%';
"Select organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending within the next 3 days, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 3 DAY) ORDER BY trial_ends_at;"
"Select organizations created in the last 30 days, grouped by city","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY city;"
"Select organizations with trial periods ending in the next 7 days, ordered by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY city;"
"Select organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Retrieve the organizations with trial periods ending in the next 15 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 15 DAY) GROUP BY countries_id;"
"Select organizations with trial periods ending in the next 7 days, located in London","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city = 'London';"
"Select organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Avenue"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Avenue%' AND trial_ends_at > CURDATE();
"Select organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Retrieve the organizations located in cities starting with the letter ""M"", ordered by created date in descending order",SELECT * FROM organizations WHERE city LIKE 'M%' ORDER BY created_at DESC;
"Select organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in a specific country","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id>;"
"Select organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 7 days, ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) ORDER BY trial_ends_at DESC;"
"Select organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
"Get the organizations created in the last 60 days, grouped by country and ordered by the number of organizations in each country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 60 DAY) GROUP BY countries_id ORDER BY organization_count;"
Select organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
Retrieve the organizations with trial periods ending today and located in London,SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city = 'New York';
"Select organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Get the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Retrieve the organizations with names containing the word ""Consulting"" or ""Solutions""",SELECT * FROM organizations WHERE name LIKE '%Consulting%' OR name LIKE '%Solutions%';
"Select organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Retrieve the organizations with trial periods ending in the next 7 days and located in cities starting with the letter ""L""","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city LIKE 'L%';"
"Select organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 30 days, located in a specific country, and ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
"Retrieve the organizations with trial periods ending in the future and located in cities starting with the letter ""B""",SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city LIKE 'B%';
Select organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
Retrieve the organizations located in cities with more than 10 organizations,SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 10;
"Select organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific city, ordered by created date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'London' ORDER BY created_at;"
"Select organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Retrieve the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Get the organizations created in the last 90 days, grouped by city and ordered by the number of organizations in each city in descending order","SELECT city, COUNT(*) as organization_count FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 90 DAY) GROUP BY city ORDER BY organization_count DESC;"
"Select organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Retrieve the organizations with names starting with the letter ""C"" or ending with the letter ""S""",SELECT * FROM organizations WHERE name LIKE 'C%' OR name LIKE '%S';
"Select organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 30 days, located in cities starting with the letter ""P"", and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND city LIKE 'P%' ORDER BY trial_ends_at DESC;"
Select organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get the organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
Get organizations located in cities with at least one organization created in the last 30 days,"SELECT * FROM organizations WHERE city IN (SELECT DISTINCT city FROM organizations WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY));"
"Select organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Retrieve the  organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
"Get the organizations with trial periods ending in the next 7 days, grouped by country","SELECT countries_id, COUNT(*) as organization_count FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) GROUP BY countries_id;"
Select organizations with trial periods ending in the future and located in a San Francisco,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
Retrieve the organizations with trial periods ending in the future and located in a specific city,SELECT * FROM organizations WHERE trial_ends_at > CURDATE() AND city = 'San Francisco';
"Select organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Retrieve the organizations created in the last 30 days, ordered by trial end date",SELECT * FROM organizations WHERE created_at >= CURDATE() - INTERVAL 30 DAY ORDER BY trial_ends_at;
"Select organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Retrieve the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Get the organizations with trial periods ending today, located in cities starting with the letter ""M""",SELECT * FROM organizations WHERE trial_ends_at = CURDATE() AND city LIKE 'M%';
"Select organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Get the organizations with names containing the word ""Technology"" and trial periods ending in the next 7 days","SELECT * FROM organizations WHERE name LIKE '%Technology%' AND trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY);"
"Select organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Retrieve the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Get the organizations with trial periods ending in the next 14 days and located in a specific country, ordered by trial end date","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at;"
"Select organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Retrieve the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Get the organizations with addresses containing the word ""Road"" and trial periods ending in the future",SELECT * FROM organizations WHERE address LIKE '%Road%' AND trial_ends_at > CURDATE();
"Select organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Retrieve the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Get the organizations with trial periods ending in the next 7 days, located in cities with more than 5 organizations","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 7 DAY) AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 5);"
"Select organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Retrieve the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Get the organizations with trial periods ending in the next 14 days, located in a specific city, and ordered by trial end date in descending order","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 14 DAY) AND city = 'New York' ORDER BY trial_ends_at DESC;"
"Select organizations with names starting with the letter ""A"" or ""B"" and located in cities with more than 3 organizations",SELECT * FROM organizations WHERE (name LIKE 'A%' OR name LIKE 'B%') AND city IN (SELECT city FROM organizations GROUP BY city HAVING COUNT(*) > 3);
"Select organizations with trial periods ending in the next 30 days and located in a specific country, ordered by trial end date and then by city","SELECT * FROM organizations WHERE trial_ends_at BETWEEN CURDATE() AND DATE_ADD(CURDATE(), INTERVAL 30 DAY) AND countries_id = <country_id> ORDER BY trial_ends_at, city;"
Retrieve all users with active status,SELECT * FROM users WHERE active = true;
Select all users with active status,SELECT * FROM users WHERE active = true;
Get all users with active status.,SELECT * FROM users WHERE active = true;
Retrieve all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Select all users belonging to a specific organization,SELECT * FROM users WHERE organization_id = 'your_organization_id';
Retrieve all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Select all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Get all users who are not administrators,SELECT * FROM users WHERE roles_id <> 'administrator_role_id';
Retrieve all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select all users who have been updated in the last 7 days,"SELECT * FROM users WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Select all users who are not official users.,SELECT * FROM users WHERE official_user_id IS NULL;
Retrieve active users,SELECT * FROM users WHERE active = 1;
Select all the active users,SELECT * FROM users WHERE active = 1;
Retrieve users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Select users created after a certain date,SELECT * FROM users WHERE date_created > 'yyyy-mm-dd';
Select users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Get users created and updated on the same date,SELECT * FROM users WHERE DATE(date_created) = DATE(date_updated);
Retrieve users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Select the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Get the users ordered by date created in descending order,SELECT * FROM users ORDER BY date_created DESC;
Retrieve users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Select the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Get the users created in the last 30 days,SELECT * FROM users WHERE date_created > NOW() - INTERVAL 30 DAY;
Retrieve users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Select the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Get the users created in the last 7 days,SELECT * FROM users WHERE date_created >= CURDATE() - INTERVAL 7 DAY;
Retrieve users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Select the users updated in the last 24 hours,SELECT * FROM users WHERE date_updated >= NOW() - INTERVAL 1 DAY;
Retrieve active users where profile ID is 1,SELECT * FROM users WHERE profiles_id =1  AND active = 1;
Retrieve users with a specific role ID and updated in the last 30 days,SELECT * FROM users WHERE roles_id = <role_id> AND date_updated >= NOW() - INTERVAL 30 DAY;
Retrieve all events,SELECT * FROM events;
Select all events,SELECT * FROM events;
Retrieve the full names of users associated with events,SELECT users_fullname FROM events;
Select the full names of users associated with events,SELECT users_fullname FROM events;
Get the full names of users associated with events,SELECT users_fullname FROM events;
Retrieve the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Select  the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Get the unique pharmacies involved in events,SELECT DISTINCT pharmacies_id FROM events;
Retrieve the organizations associated with events,SELECT organization_id FROM events;
Select the organizations associated with events,SELECT organization_id FROM events;
Get the organizations associated with events,SELECT organization_id FROM events;
Retrieve the types of events,SELECT events_type_id FROM events;
Select  the types of events,SELECT events_type_id FROM events;
Get the types of events,SELECT events_type_id FROM events;
Retrieve the prescribers involved in events,SELECT prescribers_id FROM events;
Select the prescribers involved in events,SELECT prescribers_id FROM events;
List the prescribers involved in events,SELECT prescribers_id FROM events;
Retrieve the reporters of events,SELECT reporters_id FROM events;
Select  the reporters of events,SELECT reporters_id FROM events;
Retrieve the misuses associated with events,SELECT misuses_id FROM events;
Select  the misuses associated with events,SELECT misuses_id FROM events;
Get the misuses associated with events,SELECT misuses_id FROM events;
Retrieve the open events,SELECT * FROM events WHERE is_open = true;
Select the open events,SELECT * FROM events WHERE is_open = true;
Get the open events,SELECT * FROM events WHERE is_open = true;
Retrieve the closed events,SELECT * FROM events WHERE is_open = false;
Select the closed events,SELECT * FROM events WHERE is_open = false;
Get the closed events,SELECT * FROM events WHERE is_open = false;
Retrieve the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Select the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Get the events created and closed on the same date,SELECT * FROM events WHERE date_created = date_closed;
Retrieve the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Select the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Get the events associated with a specific user's full name and pharmacy ID,SELECT * FROM events WHERE users_fullname = 'specific_full_name' AND pharmacies_id = 'specific_pharmacy_id';
Retrieve all form settings summary tools,SELECT * FROM formsettings_summarytools;
Select all form settings summary tools,SELECT * FROM formsettings_summarytools;
Get all form settings summary tools,SELECT * FROM formsettings_summarytools;
Retrieve the tools where id is 2,SELECT * FROM formsettings_summarytools WHERE tools_id = 2;
Retrieve the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Select the form settings associated where specific form ID is 1,SELECT * FROM formsettings_summarytools WHERE forms_id = 1;
Retrieve the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = 1;
Select the form settings associated where organization ID is 1,SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_id>;
Retrieve the form settings updated after a specific date,SELECT * FROM formsettings_summarytools WHERE updated_at > '<date>';
Retrieve the form settings updated within a specific date range,SELECT * FROM formsettings_summarytools WHERE updated_at BETWEEN '<start_date>' AND '<end_date>';
Retrieve the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Select  the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Get the distinct tool IDs from the form settings,SELECT DISTINCT tools_id FROM formsettings_summarytools;
Retrieve the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Select the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Get the count of form settings for each form ID,"SELECT forms_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Select the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Get the maximum updated date for each facility ID,"SELECT facility_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY facility_id;"
Retrieve the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Select the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
Get the form settings sorted by the updated date in descending order,SELECT * FROM formsettings_summarytools ORDER BY updated_at DESC;
"Retrieve the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
"Select the form settings associated with a specific organization, sorted by the updated date in descending order",SELECT * FROM formsettings_summarytools WHERE organization_id = <specific_organization_id> ORDER BY updated_at DESC;
Retrieve the distinct form IDs and facility IDs from the form settings,"SELECT DISTINCT forms_id, facility_id FROM formsettings_summarytools;"
"Retrieve the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Select the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
"Get the count of form settings for each facility ID, sorted by the count in descending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count DESC;"
Retrieve the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Select the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Get the maximum updated date for each form ID,"SELECT forms_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY forms_id;"
Retrieve the distinct organization IDs from the form settings,SELECT DISTINCT organization_id FROM formsettings_summarytools;
Retrieve the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Get the count of form settings for each tool ID,"SELECT tools_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
Select  the distinct updated by usernames from the form settings,SELECT DISTINCT updated_by FROM formsettings_summarytools;
"Retrieve the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Select the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
"Get the count of form settings for each facility ID, sorted by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id ORDER BY count ASC;"
Retrieve the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Select the maximum updated date for each tool ID,"SELECT tools_id, MAX(updated_at) AS max_updated_date FROM formsettings_summarytools GROUP BY tools_id;"
Retrieve the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Select the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Get the distinct facility IDs and organization IDs from the form settings,"SELECT DISTINCT facility_id, organization_id FROM formsettings_summarytools;"
Retrieve the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Select the count of form settings for each organization ID,"SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id;"
Retrieve the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Select the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Get the distinct updated at dates from the form settings,SELECT DISTINCT DATE(updated_at) AS date FROM formsettings_summarytools;
Retrieve the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Select the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Get the average count of form settings per organization,"SELECT AVG(count) AS average_count FROM (SELECT organization_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY organization_id) AS subquery;"
Retrieve the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Select the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Get the count of form settings for each user who updated the settings,"SELECT updated_by, COUNT(*) AS count FROM formsettings_summarytools GROUP BY updated_by;"
Retrieve the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Select the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Get the distinct facility IDs from the form settings,SELECT DISTINCT facility_id FROM formsettings_summarytools;
Retrieve the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Select the average count of form settings per facilit,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Get the average count of form settings per facility,"SELECT AVG(count) AS average_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery;"
Retrieve the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Select the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Get the distinct organization IDs and tool IDs from the form settings,"SELECT DISTINCT organization_id, tools_id FROM formsettings_summarytools;"
Retrieve the sum of counts for each facility,"SELECT facility_id, SUM(count) AS total_count FROM (SELECT facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY facility_id) AS subquery GROUP BY facility_id;"
Retrieve the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select the count of form settings for each form ID and facility ID combination,"SELECT forms_id, facility_id, COUNT(*) AS count FROM formsettings_summarytools GROUP BY forms_id, facility_id;"
Select all event actions,SELECT * FROM event_actions;
Retrieve all event actions,SELECT * FROM event_actions;
Get all the event actions,SELECT * FROM event_actions;
Select event actions where user id is 1,SELECT * FROM event_actions WHERE user_id =1;
Select event actions for a specific user,SELECT * FROM event_actions WHERE user_id = <user_id>;
Select event actions for a specific pharmacy,SELECT * FROM event_actions WHERE user_pharmacy_id = <user_pharmacy_id>;
Select event actions created on a specific date,SELECT * FROM event_actions WHERE date_created = <date_created>;
Select event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Retreive event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Get the event actions created or performed on the same date,SELECT * FROM event_actions WHERE date_created = action_date;
Inner Join between event_actions and users table on user_id,SELECT * FROM event_actions INNER JOIN user ON event_actions.user_id = users.user_id;
Inner Join between event_actions and users table on user_id and aggregate count of event_actions,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate average of distinct event IDs","SELECT users.*, pharmacy.*, AVG(DISTINCT event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id GROUP BY users.user_id, pharmacy.pharmacy_id;"
Inner Join between event_actions and users table on user_id and aggregate count of event_actions with a specific date,"SELECT users.*, COUNT(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created = '2023-07-16' GROUP BY users.user_id;"
Inner Join between event_actions and pharmacy table on user_pharmacy_id and aggregate sum of event_actions with a specific user ID,"SELECT pharmacy.*, SUM(event_actions.event_id) FROM event_actions INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
Left Join between event_actions and users table on user_id and aggregate average of event_actions with a specific date range,"SELECT users.*, AVG(event_actions.event_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id WHERE event_actions.date_created BETWEEN '2023-07-01' AND '2023-07-15' GROUP BY users.user_id;"
Left Join between event_actions and pharmacy table on user_pharmacy_id and aggregate maximum of event_actions with a specific user ID,"SELECT pharmacy.*, MAX(event_actions.event_id) FROM event_actions LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.user_id = 12345 GROUP BY pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate minimum of event_actions with a specific pharmacy ID","SELECT users.*, pharmacy.*, MIN(event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Left Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate count of distinct user IDs with a specific event ID","SELECT users.*, pharmacy.*, COUNT(DISTINCT event_actions.user_id) FROM event_actions LEFT JOIN users ON event_actions.user_id = users.user_id LEFT JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE event_actions.events_id = 54321 GROUP BY users.user_id, pharmacy.pharmacy_id;"
"Inner Join between event_actions, users, and pharmacy tables using user_id and user_pharmacy_id, and aggregate sum of distinct event IDs with a specific user ID and pharmacy ID","SELECT users.*, pharmacy.*, SUM(DISTINCT event_actions.event_id) FROM event_actions INNER JOIN users ON event_actions.user_id = users.user_id INNER JOIN pharmacy ON event_actions.user_pharmacy_id = pharmacy.pharmacy_id WHERE users.user_id = 12345 AND pharmacy.pharmacy_id = 98765 GROUP BY users.user_id, pharmacy.pharmacy_id;"
Count the total number of event actions,SELECT COUNT(*) AS total_actions FROM event_actions;
Count the number of event actions for each user,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id;"
Calculate the average number of event actions per user,"SELECT AVG(total_actions) AS average_actions per_user  FROM (SELECT user_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id) AS subquery;"
Find the user with the highest number of event actions,"SELECT user_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_id   ORDER BY total_actions DESC LIMIT 1;"
Calculate the total number of event actions per date created,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created;"
Find the date with the highest number of event actions,"SELECT date_created, COUNT(*) AS total_actions FROM event_actions GROUP BY date_created ORDER BY total_actions DESC LIMIT 1;"
Calculate the average time taken to complete event actions,"SELECT AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions;"
Calculate the maximum time taken to complete an event action,"SELECT MAX(DATEDIFF(date_done, action_date)) AS max_completion_time FROM event_actions;"
Calculate the minimum time taken to complete an event action,"SELECT MIN(DATEDIFF(date_done, action_date)) AS min_completion_time FROM event_actions;"
Find the user who updated the most event actions,"SELECT updated_by, COUNT(*) AS total_updated_actions FROM event_actions GROUP BY updated_by  ORDER BY total_updated_actions DESC LIMIT 1;"
Calculate the average number of event actions per user pharmacy,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY  user_pharmacy_id;"
Find the user pharmacy with the highest number of event actions,"SELECT user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions  GROUP BY user_pharmacy_id ORDER BY total_actions DESC  LIMIT 1;"
Calculate the total number of event actions per month,"SELECT DATE_FORMAT(date_created, '%Y-%m') AS month, COUNT(*) AS total_actions FROM event_actions GROUP BY month;"
Calculate the average number of event actions per day of the week,"SELECT DAYNAME(date_created) AS day_of_week, COUNT(*) AS total_actions FROM event_actions GROUP BY day_of_week;"
Calculate the average time between action and completion for each user,"SELECT user_id, AVG(DATEDIFF(date_done, action_date)) AS average_completion_time FROM event_actions GROUP BY user_id;"
Calculate the total number of event actions per user and user pharmacy,"SELECT user_id, user_pharmacy_id, COUNT(*) AS total_actions FROM event_actions GROUP BY user_id, user_pharmacy_id;"
Retrieve all event staff roles,SELECT * FROM event_staff_roles;
Select all event staff roles,SELECT * FROM event_staff_roles;
Retrieve event staff role by name,SELECT * FROM event_staff_roles WHERE name = 'RoleName';
Retrieve event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Select event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Get event staff roles in a specific order,SELECT * FROM event_staff_roles ORDER BY order;
Retrieve event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 'FormID';
Select event staff roles where form ID is 1,SELECT * FROM event_staff_roles WHERE forms_id = 1;
Retrieve event staff roles updated by user id 1,SELECT * FROM event_staff_roles WHERE updates_by = 1;
Retrieve the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Select the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Get the default event staff role,SELECT * FROM event_staff_roles WHERE is_default = true;
Retrieve the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Select the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the non-default event staff roles,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the count of event staff roles,SELECT COUNT(*) FROM event_staff_roles;
Retrieve the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Select the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Get the maximum order value among event staff roles,SELECT MAX(order) FROM event_staff_roles;
Retrieve the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Select the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Get the average order value among event staff roles,SELECT AVG(order) FROM event_staff_roles;
Retrieve the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Select the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Get the distinct form IDs from event staff roles,SELECT DISTINCT forms_id FROM event_staff_roles;
Retrieve the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Select the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Get the distinct facility IDs from event staff roles,SELECT DISTINCT facility_id FROM event_staff_roles;
Retrieve the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Select the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Get the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) FROM event_staff_roles GROUP BY forms_id;"
Retrieve event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Select event staff roles ordered by name in descending order,SELECT * FROM event_staff_roles ORDER BY name DESC;
Retrieve event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Select event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Get the event staff roles that are not the default,SELECT * FROM event_staff_roles WHERE is_default = false;
Retrieve the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Select the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Get the count of distinct facility IDs from event staff roles,SELECT COUNT(DISTINCT facility_id) FROM event_staff_roles;
Retrieve event staff roles with an order greater than 10,SELECT * FROM event_staff_roles WHERE order > 10;
Retrieve the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Select the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
Get the distinct order values from event staff roles,SELECT DISTINCT order FROM event_staff_roles;
"Retrieve event staff roles with names ending with ""a""",SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Select the event staff roles with names ending with A,SELECT * FROM event_staff_roles WHERE name LIKE '%A';
Retrieve event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
Select the event staff roles with order values in descending order,SELECT * FROM event_staff_roles ORDER BY order DESC;
"Retrieve event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Select the event staff roles with names containing either ""A"" or ""B""",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%';
"Retrieve the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Select the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
"Get the count of event staff roles for each facility ID, ordered by facility ID","SELECT facility_id, COUNT(*) FROM event_staff_roles GROUP BY facility_id ORDER BY facility_id;"
Select the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Get the distinct form IDs and facility IDs from event staff roles,"SELECT DISTINCT forms_id, facility_id FROM event_staff_roles;"
Retrieve the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Select the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
Get the average order value among event staff roles grouped by facility ID,"SELECT facility_id, AVG(order) FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"", ordered by name",SELECT * FROM event_staff_roles WHERE name LIKE '%A%' OR name LIKE '%B%' ORDER BY name;
"Retrieve the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Select the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Get the count of event staff roles for each form ID, ordered by the count in descending order","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
"Retrieve event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Select the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Get the event staff roles with names starting with a vowel, ordered by name",SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
"Select the event staff roles with order values between two specific numbers, ordered by order in descending order",SELECT * FROM event_staff_roles WHERE order BETWEEN 5 AND 10 ORDER BY order DESC;
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Get the distinct form IDs and the count of event staff roles for each form ID,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Retrieve the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
Select the maximum order value among event staff roles for each facility ID,"SELECT facility_id, MAX(order) AS max_order FROM event_staff_roles GROUP BY facility_id;"
"Retrieve event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
"Select the event staff roles with names containing either ""A"" or ""B"" and updated by a specific user, ordered by name",SELECT * FROM event_staff_roles WHERE (name LIKE '%A%' OR name LIKE '%B%') AND updates_by = 'UserID' ORDER BY name;
Retrieve the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Select the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Get the count of event staff roles for each form ID and order the result by the count in descending order,"SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count DESC;"
Retrieve event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
Select the event staff roles with names starting with a vowel and order them by name,SELECT * FROM event_staff_roles WHERE name REGEXP '^[AEIOU]' ORDER BY name;
"Retrieve the count of event staff roles for each facility ID, and order the result by the count in ascending order","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Select the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Get the count of event staff roles for each facility ID, and order the result by the count in ascending order:","SELECT facility_id, COUNT(*) AS count FROM event_staff_roles GROUP BY facility_id ORDER BY count ASC;"
"Retrieve event staff roles with order values greater 5, ordered by order",SELECT * FROM event_staff_roles WHERE order > 5 ORDER BY order;
"Retrieve the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
"Select the count of event staff roles for each form ID, ordered by the count","SELECT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id ORDER BY count;"
Retrieve the distinct form IDs and the count of event staff roles for each form ID,"SELECT DISTINCT forms_id, COUNT(*) AS count FROM event_staff_roles GROUP BY forms_id;"
Select all hazards,SELECT * FROM hazards;
Select hazards by their names,SELECT * FROM hazards WHERE name = 'your_hazard_name';
Select hazards where organization hazard ID is 1,SELECT * FROM hazards WHERE organization_hazard_id = 1;
Select hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Retrieve the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Get the hazards ordered by their creation date in ascending order,SELECT * FROM hazards ORDER BY created_at ASC;
Select the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Retrieve the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Get the latest updated hazard,SELECT * FROM hazards ORDER BY updated_at DESC LIMIT 1;
Select hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Retrieve the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Get the hazards with non-null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NOT NULL;
Select hazards with null pharmacy IDs,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Retrieve the hazards with null pharmacy IDs:,SELECT * FROM hazards WHERE pharmacies_id IS NULL;
Select hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Retrieve the hazards updated within the last 30 days,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Select hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Retrieve the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Get hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
List the hazards created within the last 7 days,"SELECT * FROM hazards WHERE created_at >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Select hazards updated within the last 6 months,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Retrieve the hazards updated within the last 6 months:,"SELECT * FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Get the count the total number of hazards,SELECT COUNT(*) AS total_hazards FROM hazards;
Calculate the average number of hazards per pharmacy,SELECT AVG(pharmacies_id) AS avg_hazards_per_pharmacy FROM hazards;
Find the maximum created date among hazards,SELECT MAX(created_at) AS max_created_date FROM hazards;
Determine the minimum updated date among hazards,SELECT MIN(updated_at) AS min_updated_date FROM hazards;
Calculate the sum of pharmacies' IDs for all hazards,SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards;
Calculate the average length of hazard descriptions,SELECT AVG(LENGTH(description)) AS avg_description_length FROM hazards;
Determine the maximum number of hazards created in a single day,SELECT COUNT(*) AS max_hazards_created FROM hazards GROUP BY DATE(created_at) ORDER BY max_hazards_created DESC LIMIT 1;
Find the minimum number of hazards updated in a single day,SELECT COUNT(*) AS min_hazards_updated FROM hazards GROUP BY DATE(updated_at) ORDER BY min_hazards_updated ASC LIMIT 1;
Calculate the average difference in days between created and updated dates for hazards,"SELECT AVG(DATEDIFF(updated_at, created_at)) AS avg_days_difference FROM hazards;"
Determine the sum of pharmacy IDs for hazards updated within the last 30 days,"SELECT SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE updated_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Calculate the total number of hazards for each pharmacy,"SELECT pharmacies_id, COUNT(*) AS total_hazards FROM hazards GROUP BY pharmacies_id;"
Determine the sum of pharmacy IDs for hazards with a specific name and created within the last 30 days,"SELECT name, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards WHERE name = 'your_hazard_name' AND created_at >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY name;"
Calculate the average number of hazards per week,"SELECT YEARWEEK(created_at) AS week, COUNT(*) AS hazards_per_week FROM hazards GROUP BY week;"
Calculate the maximum difference in days between created and updated dates for hazards,"SELECT MAX(DATEDIFF(updated_at, created_at)) AS max_days_difference FROM hazards;"
Calculate the minimum difference in days between created and updated dates for hazards,"SELECT MIN(DATEDIFF(updated_at, created_at)) AS min_days_difference FROM hazards;"
Find the maximum length of hazard descriptions,SELECT MAX(LENGTH(description)) AS max_description_length FROM hazards;
Determine the average number of hazards per day,"SELECT DATE(created_at) AS created_date, COUNT(*) AS hazards_per_day FROM hazards GROUP BY created_date;"
Find the minimum number of hazards updated on a specific date,"SELECT DATE(updated_at) AS updated_date, COUNT(*) AS min_hazards_updated FROM hazards GROUP BY updated_date ORDER BY min_hazards_updated ASC LIMIT 1;"
Calculate the total number of hazards created per month,"SELECT YEAR(created_at) AS year, MONTH(created_at) AS month, COUNT(*) AS hazards_count FROM hazards GROUP BY year, month;"
Calculate the sum of pharmacy IDs for hazards created in each year,"SELECT YEAR(created_at) AS year, SUM(pharmacies_id) AS sum_pharmacies_ids FROM hazards GROUP BY year;"
Find the average difference in hours between created and updated timestamps for hazards,"SELECT AVG(TIMESTAMPDIFF(HOUR, created_at, updated_at)) AS avg_hours_difference FROM hazards;"
Retrieve the full names and employee IDs of active staff members.,"SELECT full_name, employee_id FROM staff_directory WHERE is_active = 1;"
Find assets with a specific serial number and belonging to a particular pharmacy.,SELECT * FROM assets WHERE serial_number = 'ABC123' AND pharmacies_id = 456;
Get all hazards created in the last week.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL '1 week';
Retrieve the names and order of event staff roles for a specific facility.,"SELECT name, order FROM event_staff_roles WHERE facility_id = 789;"
Find event actions performed by a specific user and within a given date range.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-07-01' AND '2023-07-31';
Retrieve form settings summary tools for a specific form and organization.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND organization_id = 456;
Get events with a specific event type and open status.,SELECT * FROM events WHERE events_type_id = 123 AND is_open = 1;
Find users with a specific role and created after a certain date.,SELECT * FROM users WHERE roles_id = 789 AND date_created > '2023-01-01';
Retrieve organizations with a trial end date in the future.,SELECT * FROM organizations WHERE trial_ends_at > NOW();
Find pharmacies that were activated by a specific user.,SELECT * FROM pharmacies WHERE activated_by = 123;
Retrieve the IDs and full names of staff members belonging to a specific organization.,"SELECT id, full_name FROM staff_directory WHERE org_id = 123;"
Find assets that are currently active and belong to a particular organization.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456;
Get hazards with a specific name and description.,SELECT * FROM hazards WHERE name = 'Fire Hazard' AND description = 'High risk of fire outbreak.';
Retrieve the default event staff roles for a specific form ID.,SELECT * FROM event_staff_roles WHERE forms_id = 789 AND is_default = 1;
Find event actions performed by a specific user and updated within the last week.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_at >= NOW() - INTERVAL '1 week';
Get form settings summary tools for a particular facility and organization.,SELECT * FROM formsettings_summarytools WHERE facility_id = 789 AND organization_id = 456;
Retrieve events created by a specific user and still open.,SELECT * FROM events WHERE users_id = 123 AND is_open = 1;
Find users with a specific role and active status.,SELECT * FROM users WHERE roles_id = 789 AND active = 1;
Get organizations created after a certain date and located in a specific city.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND city = 'New York';
Retrieve pharmacies that were activated within the last month.,SELECT * FROM pharmacies WHERE activated_by >= NOW() - INTERVAL '1 month';
Retrieve the user IDs and names of active staff members in a specific organization.,"SELECT user_id, full_name FROM staff_directory WHERE is_active = 1 AND org_id = 123;"
Find assets that were created or updated in the last 30 days.,SELECT * FROM assets WHERE created_at >= NOW() - INTERVAL '30 days' OR updated_at >= NOW() - INTERVAL '30 days';
"Get hazards with a description containing the word ""danger"" and created in the last 3 months.",SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months';
Retrieve the names and orders of event staff roles for a specific form ID and facility ID.,"SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456;"
Find event actions performed by a specific user,"updated by a specific user, and within a specific date range.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30';"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123;"
Retrieve events created by a specific user,"organization ID, and closed within the last week.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days';"
Find users with a specific role,"active status, and created after a certain date.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01';"
Get organizations with a trial end date in the future and located in a specific city.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London';
Find assets that are active,"belong to a specific organization, and have been updated within the last month.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND updated_at >= NOW() - INTERVAL '1 month';"
"Get hazards with a description containing the word ""danger"" and created in the last 3 months","ordered by their names in ascending order.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' ORDER BY name ASC;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones that have a default setting.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND is_default = 0;"
Find event actions performed by a specific user,"updated by a different specific user, and within a specific date range, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC;"
Retrieve events created by a specific user,"organization ID, and closed within the last week, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific role,"active status, and created after a certain date, ordered by their full names in ascending order.,SELECT * FROM users WHERE roles_id = 789 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC;"
Get organizations with a trial end date in the future,"located in a specific city, and ordered by their trial end dates in descending order.,SELECT * FROM organizations WHERE trial_ends_at > NOW() AND city = 'London' ORDER BY trial_ends_at DESC;"
Retrieve pharmacies with a specific name,"activated by a specific user, and disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the full names and employee IDs of staff members who are active,"belong to a specific organization, and have a registration number.,SELECT full_name, employee_id FROM staff_directory WHERE is_active = 1 AND org_id = 123 AND reg_number IS NOT NULL;"
Find assets that are active,"belong to a specific organization, have a specific asset type ID, and have been updated within the last month.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND updated_at >= NOW() - INTERVAL '1 month';"
"Get hazards with a description containing the word ""danger"" and created in the last 3 months","ordered by their names in ascending order and limited to 10 rows.,SELECT * FROM hazards WHERE description LIKE '%danger%' AND created_at >= NOW() - INTERVAL '3 months' ORDER BY name ASC LIMIT 10;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones that have a default setting and ordered by the order in descending order.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND is_default = 0 ORDER BY order DESC;"
Find event actions performed by a specific user,"updated by a different specific user, and within a specific date range, ordered by the action date in descending order and limited to 20 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND updated_by = 456 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 20;"
Retrieve events created by a specific user,"organization ID, and closed within the last week, ordered by the event type ID in ascending order and limited to 50 rows.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC LIMIT 50;"
Retrieve pharmacies with a specific name,"activated by a specific user, and disabled after a certain date, ordered by their names in ascending order and limited to 15 rows.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC LIMIT 15;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, and ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Retrieve the names and IDs of staff members who are active,"belong to a specific organization, and have been updated in the last 3 months.,SELECT full_name, id FROM staff_directory WHERE is_active = 1 AND org_id = 123 AND updated_at >= NOW() - INTERVAL '3 months';"
Find assets that are active,"belong to a specific organization, have a specific asset type ID, and have a serial number starting with 'ABC'.,SELECT * FROM assets WHERE active = 1 AND organizations_id = 456 AND asset_type_id = 789 AND serial_number LIKE 'ABC%';"
"Get hazards with a description containing the word ""fire"" and created in the last 6 months","ordered by their created dates in descending order.,SELECT * FROM hazards WHERE description LIKE '%fire%' AND created_at >= NOW() - INTERVAL '6 months' ORDER BY created_at DESC;"
Retrieve the names and orders of event staff roles for a specific form ID and facility ID,"excluding the ones with a specific name.,SELECT name, order FROM event_staff_roles WHERE forms_id = 789 AND facility_id = 456 AND name NOT LIKE '%Admin%';"
Find event actions performed by a specific user and within a specific date range,"ordered by the action date in descending order, and limited to 50 rows.,SELECT * FROM event_actions WHERE user_id = 123 AND action_date BETWEEN '2023-06-01' AND '2023-06-30' ORDER BY action_date DESC LIMIT 50;"
Get form settings summary tools for a specific form ID,"facility ID, and organization ID, ordered by the tools ID in ascending order, and limited to 10 rows.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND facility_id = 456 AND organization_id = 123 ORDER BY tools_id ASC LIMIT 10;"
Retrieve events created by a specific user,"organization ID, and closed within the last month, ordered by the event type ID in ascending order, and limited to 20 rows.,SELECT * FROM events WHERE users_id = 123 AND organization_id = 456 AND date_closed >= NOW() - INTERVAL '1 month' ORDER BY events_type_id ASC LIMIT 20;"
Retrieve pharmacies with a specific name,"activated by a specific user, disabled after a certain date, ordered by their names in ascending order, and limited to 15 rows.,SELECT * FROM pharmacies WHERE name = 'Pharmacy ABC' AND activated_by = 123 AND date_disabled > '2023-01-01' ORDER BY name ASC LIMIT 15;"
Retrieve the user IDs and full names of staff members who have an official user ID,"belong to a specific organization, and have an active status.,SELECT id, full_name FROM staff_directory WHERE official_user_id IS NOT NULL AND org_id = 123 AND is_active = 1;"
Retrieve the full names of staff members who have an official user ID.,SELECT full_name FROM staff_directory WHERE official_user_id IS NOT NULL;
Find assets that have been updated in the last 7 days.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS;
Get hazards with a description longer than 100 characters.,SELECT * FROM hazards WHERE LENGTH(description) > 100;
Retrieve the names and orders of event staff roles in alphabetical order.,"SELECT name, `order` FROM event_staff_roles ORDER BY name ASC;"
Find event actions that were updated by a specific user.,SELECT * FROM event_actions WHERE updated_by = 123;
Get form settings summary tools for a specific organization ID.,SELECT * FROM formsettings_summarytools WHERE organization_id = 456;
Retrieve events that are still open.,SELECT * FROM events WHERE is_open = 1;
Find users with a specific type and created after a certain date.,SELECT * FROM users WHERE type = 'admin' AND date_created > '2023-01-01';
Get organizations located in a specific city.,SELECT * FROM organizations WHERE city = 'New York';
Retrieve pharmacies that were activated by a specific user.,SELECT * FROM pharmacies WHERE activated_by = 123;
Find assets that are currently active and have a serial number starting with 'ABC'.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE 'ABC%';
Get hazards created in the last 30 days and belong to a specific organization.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAYS AND organizations_id = 789;
Retrieve the names and IDs of staff members ordered by their full names in ascending order.,"SELECT full_name, id FROM staff_directory ORDER BY full_name ASC;"
Find assets with a specific asset item ID and belong to a specific organization.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456;
"Get hazards with a description containing the word ""safety"" and created in the last 6 months.",SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS;
Retrieve all event staff roles with a specific order.,SELECT * FROM event_staff_roles WHERE `order` = 1;
Find event actions for a specific event ID and user ID.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456;
Get form settings summary tools for a specific form ID and updated by a specific user.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123;
Retrieve events that have a specific event type ID and created by a specific user.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456;
Find users with a specific profile ID and active status.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1;
Get organizations created after a certain date and located in a specific country.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123;
Retrieve pharmacies with a specific organization ID and created before a certain date.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01';
Find assets that were updated in the last 7 days and belong to a specific organization.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123;
Get hazards with a description shorter than 50 characters and created by a specific pharmacy.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456;
Retrieve the names and orders of event staff roles ordered by their orders in descending order.,"SELECT name, `order` FROM event_staff_roles ORDER BY `order` DESC;"
Find event actions that were updated by a specific user and created after a certain date.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01';
Get form settings summary tools for a specific facility ID and organization ID.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456;
Retrieve events that are still open and created by a specific user.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123;
Find users with a specific type and created between two dates.,SELECT * FROM users WHERE type = 'admin' AND date_created BETWEEN '2023-01-01' AND '2023-01-31';
Get organizations located in a specific city and created after a certain date.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01';
Retrieve pharmacies that were activated by a specific user and created before a certain date.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01';
Find assets that are currently active and have a serial number ending with 'XYZ'.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ';
Get hazards created in the last 30 days and have a specific organization ID.,SELECT * FROM hazards WHERE created_at >= NOW() - INTERVAL 30 DAYS AND organizations_id = 123;
Retrieve the names and IDs of staff members ordered by their IDs in ascending order.,"SELECT full_name, id FROM staff_directory ORDER BY id ASC;"
Find assets with a specific asset item ID,"belong to a specific organization, and have a certain serial number.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ';"
"Get hazards with a description containing the word ""safety"" and created in the last 6 months","ordered by their names in ascending order.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS ORDER BY name ASC;"
Retrieve all event staff roles with a specific order and form ID.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123;
Find event actions for a specific event ID,"user ID, and action date within a specific date range.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31';"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH;"
Find users with a specific profile ID,"active status, and created after a certain date, ordered by their full names in ascending order.,SELECT * FROM users WHERE profiles_id = 123 AND active = 1 AND date_created > '2023-01-01' ORDER BY full_name ASC;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW();"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789;"
Retrieve the names and orders of event staff roles ordered by their names in descending order.,"SELECT name, `order` FROM event_staff_roles ORDER BY name DESC;"
Find event actions that were updated by a specific user,"created after a certain date, and belong to a specific event.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01' AND events_id = 456;"
Get form settings summary tools for a specific facility ID,"organization ID, and updated by a specific user.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456 AND updated_by = 789;"
Retrieve events that are still open,"created by a specific user, and closed within the last week.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123 AND date_closed >= NOW() - INTERVAL '7 days';"
Find users with a specific type,"active status, and created between two dates, ordered by their full names in ascending order.,SELECT * FROM users WHERE type = 'admin' AND active = 1 AND date_created BETWEEN '2023-01-01' AND '2023-01-31' ORDER BY full_name ASC;"
Get organizations located in a specific city,"created after a certain date, and have a trial end date in the future.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01' AND trial_ends_at > NOW();"
Retrieve pharmacies that were activated by a specific user,"created before a certain date, and disabled after a certain date.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01' AND date_disabled > '2023-01-01';"
Find assets that are currently active,"have a serial number ending with 'XYZ', and belong to a specific organization.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ' AND organizations_id = 123;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, and belong to a specific pharmacy.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS AND pharmacies_id = 789;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order.,"SELECT full_name, id FROM staff_directory ORDER BY id DESC;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789;"
Retrieve all event staff roles with a specific order and form ID,"ordered by their names in descending order.,SELECT * FROM event_staff_roles WHERE `order` = 1 AND forms_id = 123 ORDER BY name DESC;"
Find event actions for a specific event ID,"user ID, and action date within a specific date range, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE events_id = 123 AND user_id = 456 AND action_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY action_date DESC;"
Get form settings summary tools for a specific form ID,"updated by a specific user, and belong to a specific organization, ordered by the tools ID in ascending order.,SELECT * FROM formsettings_summarytools WHERE forms_id = 789 AND updated_by = 123 AND organization_id = 456 ORDER BY tools_id ASC;"
Retrieve events that have a specific event type ID,"created by a specific user, and closed within the last month, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE events_type_id = 123 AND users_id = 456 AND date_closed >= NOW() - INTERVAL 1 MONTH ORDER BY events_type_id ASC;"
Get organizations created after a certain date,"located in a specific country, and have a trial end date in the future, ordered by their trial end dates in descending order.,SELECT * FROM organizations WHERE date_created > '2023-01-01' AND countries_id = 123 AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC;"
Retrieve pharmacies with a specific organization ID,"created before a certain date, and activated by a specific user, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE organizations_id = 123 AND date_created < '2023-01-01' AND activated_by = 456 ORDER BY name ASC;"
Find assets that were updated in the last 7 days,"belong to a specific organization, and have a certain asset type ID, ordered by their serial numbers in ascending order.,SELECT * FROM assets WHERE updated_at >= NOW() - INTERVAL 7 DAYS AND organizations_id = 123 AND asset_type_id = 456 ORDER BY serial_number ASC;"
Get hazards with a description shorter than 50 characters,"created by a specific pharmacy, and belong to a specific organization, ordered by their names in ascending order.,SELECT * FROM hazards WHERE LENGTH(description) < 50 AND pharmacies_id = 456 AND organizations_id = 789 ORDER BY name ASC;"
Retrieve the names and orders of event staff roles ordered by their names in descending order,"and limited to 10 rows.,SELECT name, `order` FROM event_staff_roles ORDER BY name DESC LIMIT 10;"
Find event actions that were updated by a specific user,"created after a certain date, and belong to a specific event, ordered by the action date in descending order.,SELECT * FROM event_actions WHERE updated_by = 123 AND date_created > '2023-01-01' AND events_id = 456 ORDER BY action_date DESC;"
Get form settings summary tools for a specific facility ID,"organization ID, and updated by a specific user, ordered by the tools ID in ascending order, and limited to 5 rows.,SELECT * FROM formsettings_summarytools WHERE facility_id = 123 AND organization_id = 456 AND updated_by = 789 ORDER BY tools_id ASC LIMIT 5;"
Retrieve events that are still open,"created by a specific user, and closed within the last week, ordered by the event type ID in ascending order.,SELECT * FROM events WHERE is_open = 1 AND users_id = 123 AND date_closed >= NOW() - INTERVAL '7 days' ORDER BY events_type_id ASC;"
Find users with a specific type,"active status, and created between two dates, ordered by their full names in ascending order, and limited to 30 rows.,SELECT * FROM users WHERE type = 'admin' AND active = 1 AND date_created BETWEEN '2023-01-01' AND '2023-01-31' ORDER BY full_name ASC LIMIT 30;"
Get organizations located in a specific city,"created after a certain date, and have a trial end date in the future, ordered by their trial end dates in descending order, and limited to 10 rows.,SELECT * FROM organizations WHERE city = 'London' AND date_created > '2023-01-01' AND trial_ends_at > NOW() ORDER BY trial_ends_at DESC LIMIT 10;"
Retrieve pharmacies that were activated by a specific user,"created before a certain date, and disabled after a certain date, ordered by their names in ascending order.,SELECT * FROM pharmacies WHERE activated_by = 123 AND date_created < '2023-01-01' AND date_disabled > '2023-01-01' ORDER BY name ASC;"
Find assets that are currently active,"have a serial number ending with 'XYZ', and belong to a specific organization, ordered by their asset items ID in ascending order.,SELECT * FROM assets WHERE active = 1 AND serial_number LIKE '%XYZ' AND organizations_id = 123 ORDER BY asset_items_id ASC;"
"Get hazards with a description containing the word ""safety""","created in the last 6 months, and belong to a specific pharmacy, ordered by their created dates in descending order.,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= NOW() - INTERVAL 6 MONTHS AND pharmacies_id = 789 ORDER BY created_at DESC;"
Retrieve the names and IDs of staff members ordered by their IDs in descending order,"and limited to 20 rows.,SELECT full_name, id FROM staff_directory ORDER BY id DESC LIMIT 20;"
Find assets with a specific asset item ID,"belong to a specific organization, have a certain serial number, and were updated by a specific user, ordered by their updated dates in descending order.,SELECT * FROM assets WHERE asset_items_id = 123 AND organizations_id = 456 AND serial_number = 'XYZ' AND updated_by = 789 ORDER BY updated_at DESC;"
Retrieve the staff directory for user_id '12345'.,SELECT * FROM staff_directory WHERE user_id = '12345';
Get the assets with an active status.,SELECT * FROM assets WHERE active = true;
Find hazards associated with pharmacies_id '9876'.,SELECT * FROM hazards WHERE pharmacies_id = '9876';
Get the event staff roles with the default flag set.,SELECT * FROM event_staff_roles WHERE is_default = true;
Retrieve event actions performed by user_id '5678'.,SELECT * FROM event_actions WHERE user_id = '5678';
Find form settings summary tools for facility_id '2468' and organization_id '1357'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '2468' AND organization_id = '1357';
Retrieve users with active status and updated after '2023-01-01'.,SELECT * FROM users WHERE active = true AND date_updated > '2023-01-01';
Find organizations located in the city 'New York'.,SELECT * FROM organizations WHERE city = 'New York';
Get pharmacies activated by 'Pharmacist A'.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist A';
Retrieve the staff directory for full_name 'John Smith'.,SELECT * FROM staff_directory WHERE full_name = 'John Smith';
Get hazards with the name 'Fire Hazard'.,SELECT * FROM hazards WHERE name = 'Fire Hazard';
Retrieve the event staff roles with the forms_id '456'.,SELECT * FROM event_staff_roles WHERE forms_id = '456';
Get event actions for events_id '789'.,SELECT * FROM event_actions WHERE events_id = '789';
Find form settings summary tools for organization_id '987' and facility_id '654'.,SELECT * FROM formsettings_summarytools WHERE organization_id = '987' AND facility_id = '654';
Get events reported by user_id '321'.,SELECT * FROM events WHERE reporters_id = '321';
Retrieve users of type 'Admin'.,SELECT * FROM users WHERE type = 'Admin';
Find organizations created after '2023-01-01'.,SELECT * FROM organizations WHERE created_at > '2023-01-01';
Get pharmacies in the city 'Los Angeles'.,SELECT * FROM pharmacies WHERE city = 'Los Angeles';
Retrieve the staff directory for user_id '54321'.,SELECT * FROM staff_directory WHERE user_id = '54321';
Find assets with asset_type_id '123'.,SELECT * FROM assets WHERE asset_type_id = '123';
Get hazards associated with pharmacies_id '65432'.,SELECT * FROM hazards WHERE pharmacies_id = '65432';
Get event actions performed by user_id '87654'.,SELECT * FROM event_actions WHERE user_id = '87654';
Find form settings summary tools for facility_id '23456' and organization_id '54321'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '23456' AND organization_id = '54321';
Retrieve users with active status and updated after '2023-03-01'.,SELECT * FROM users WHERE active = true AND date_updated > '2023-03-01';
Find organizations located in the city 'Seattle'.,SELECT * FROM organizations WHERE city = 'Seattle';
Get pharmacies activated by 'Pharmacist B'.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist B';
Retrieve the staff directory for user_id '98765'.,SELECT * FROM staff_directory WHERE user_id = '98765';
Get hazards associated with pharmacies_id '56789'.,SELECT * FROM hazards WHERE pharmacies_id = '56789';
Get event actions performed by user_id '45678'.,SELECT * FROM event_actions WHERE user_id = '45678';
Find form settings summary tools for facility_id '98765' and organization_id '87654'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '98765' AND organization_id = '87654';
Retrieve users with active status and updated after '2023-06-01'.,SELECT * FROM users WHERE active = true AND date_updated > '2023-06-01';
Find organizations located in the city 'San Francisco'.,SELECT * FROM organizations WHERE city = 'San Francisco';
Get pharmacies activated by 'Pharmacist C'.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist C';
Retrieve the staff directory for employee_id 'ABCDE'.,SELECT * FROM staff_directory WHERE employee_id = 'ABCDE';
Get the assets with asset_items_id '123456'.,SELECT * FROM assets WHERE asset_items_id = '123456';
Find hazards with a description containing the word 'explosive'.,SELECT * FROM hazards WHERE description LIKE '%explosive%';
Get the event staff roles with the order greater than 5.,"SELECT * FROM event_staff_roles WHERE ""order"" > 5;"
Retrieve event actions performed by user_id '98765' and user_pharmacy_id '54321'.,SELECT * FROM event_actions WHERE user_id = '98765' AND user_pharmacy_id = '54321';
Find form settings summary tools for facility_id '2468' or organization_id '1357'.,SELECT * FROM formsettings_summarytools WHERE facility_id = '2468' OR organization_id = '1357';
Get events where the harmt is not null or prescribers_id is not null.,SELECT * FROM events WHERE harmt IS NOT NULL OR prescribers_id IS NOT NULL;
Retrieve users with active status and updated between '2023-01-01' and '2023-06-30'.,SELECT * FROM users WHERE is_active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Find organizations located in countries_id 10 or 15.,"SELECT * FROM organizations WHERE countries_id IN (10, 15);"
Get pharmacies activated after '2023-01-01' and activated_by 'Pharmacist X'.,SELECT * FROM pharmacies WHERE activate_at > '2023-01-01' AND activated_by = 'Pharmacist X';
Retrieve the staff directory for full_name 'Jane Doe' and fixed is true.,SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' AND fixed = true;
Find assets with an active status and updated between '2023-01-01' and '2023-06-30'.,SELECT * FROM assets WHERE active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Get hazards with the name starting with 'Chemical'.,SELECT * FROM hazards WHERE name LIKE 'Chemical%';
Retrieve the event staff roles with the forms_id '789' and facility_id '654'.,SELECT * FROM event_staff_roles WHERE forms_id = '789' AND facility_id = '654';
Get event actions for events_id '987' and updated_by 'John Smith'.,SELECT * FROM event_actions WHERE events_id = '987' AND updated_by = 'John Smith';
Find form settings summary tools for organization_id '543' and updated_by 'Jane Doe'.,SELECT * FROM formsettings_summarytools WHERE organization_id = '543' AND updated_by = 'Jane Doe';
Get events reported by user_id '321' and harmt is not null.,SELECT * FROM events WHERE reporters_id = '321' AND harmt IS NOT NULL;
Retrieve users with type 'Admin' and active status is true.,SELECT * FROM users WHERE type = 'Admin' AND is_active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Find organizations created after '2023-01-01' and updated before '2023-06-30'.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND updated_at < '2023-06-30';
Get pharmacies in the city 'Los Angeles' and daye_enabled is not null.,SELECT * FROM pharmacies WHERE city = 'Los Angeles' AND daye_enabled IS NOT NULL;
Retrieve the staff directory for user_id '54321' and created_at is not null.,SELECT * FROM staff_directory WHERE user_id = '54321' AND created_at IS NOT NULL;
Find assets with asset_type_id '789' and serial_number is not null.,SELECT * FROM assets WHERE asset_type_id = '789' AND serial_number IS NOT NULL;
Get hazards associated with pharmacies_id '65432' and description is not empty.,SELECT * FROM hazards WHERE pharmacies_id = '65432' AND description <> '';
Retrieve the event staff roles with the default flag set and order is not null.,"SELECT * FROM event_staff_roles WHERE is_default = true AND ""order"" IS NOT NULL;"
Get event actions performed by user_id '87654' and updated_at is not null.,SELECT * FROM event_actions WHERE user_id = '87654' AND updated_at IS NOT NULL;
Find form settings summary tools for facility_id '23456' or organization_id '54321'.,SELECT * FROM formsettings_summarytools WHERE (facility_id = '23456' OR organization_id = '54321') AND tools_id IS NOT NULL;
Get events where the harmt is not null or prescribers_id is not null and is_open is true.,SELECT * FROM events WHERE (harmt IS NOT NULL OR prescribers_id IS NOT NULL) AND is_open = true AND date_created IS NOT NULL;
Retrieve users with active status and updated after '2023-03-01' and type is not null.,SELECT * FROM users WHERE is_active = true AND updated_at > '2023-03-01' AND type IS NOT NULL;
Find organizations located in the city 'Seattle' and trial_ends_at is not null.,SELECT * FROM organizations WHERE city = 'Seattle' AND trial_ends_at IS NOT NULL;
Get pharmacies activated by 'Pharmacist B' and activate_at is not null.,SELECT * FROM pharmacies WHERE activate_at > '2023-01-01' AND activated_by = 'Pharmacist B';
Retrieve the staff directory for user_id '98765' and locum_full_name is not empty.,SELECT * FROM staff_directory WHERE user_id = '98765' AND locum_full_name <> '';
Find assets with an active status and created_at is not null.,SELECT * FROM assets WHERE active = true AND created_at IS NOT NULL;
Get hazards with the name 'Chemical Spill' and updated_at is not null.,SELECT * FROM hazards WHERE name = 'Chemical Spill' AND updated_at IS NOT NULL;
Retrieve the event staff roles with the forms_id '654' and updates_by is not null.,SELECT * FROM event_staff_roles WHERE forms_id = '654' AND updates_by IS NOT NULL;
Get event actions for events_id '321' and action_date is not null.,SELECT * FROM event_actions WHERE events_id = '321' AND action_date IS NOT NULL;
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '876' AND facility_id = '543' AND updated_by IS NOT NULL;
Get events reported by user_id '987' and date_created is not null.,SELECT * FROM events WHERE reporters_id = '987' AND date_created IS NOT NULL;
Retrieve users of type 'User' and date_updated is not null.,SELECT * FROM users WHERE type = 'User' AND date_updated IS NOT NULL;
Find organizations created after '2023-02-01' and countries_id is not null.,SELECT * FROM organizations WHERE created_at > '2023-02-01' AND countries_id IS NOT NULL;
Get pharmacies in the city 'Chicago' and created_at is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL;
Retrieve the staff directory for user_id '13579' and official_user_id is not null.,SELECT * FROM staff_directory WHERE user_id = '13579' AND official_user_id IS NOT NULL;
Find assets with an active status and updated_at is not null.,SELECT * FROM assets WHERE active = true AND updated_at IS NOT NULL;
Get hazards associated with pharmacies_id '43210' and created_at is not null.,SELECT * FROM hazards WHERE pharmacies_id = '43210' AND created_at IS NOT NULL;
Retrieve the event staff roles with the default flag set and forms_id is not null.,SELECT * FROM event_staff_roles WHERE is_default = true AND forms_id IS NOT NULL;
Get event actions performed by user_id '65432' and updated_at is not null.,SELECT * FROM event_actions WHERE user_id = '65432' AND updated_at IS NOT NULL;
Find form settings summary tools for facility_id '54321' and organization_id '87654' and tools_id is not null.,SELECT * FROM formsettings_summarytools WHERE facility_id = '54321' AND organization_id = '87654' AND tools_id IS NOT NULL;
Get events where the harmt is not null or prescribers_id is not null and is_open is true and date_created is not null.,SELECT * FROM events WHERE (harmt IS NOT NULL OR prescribers_id IS NOT NULL) AND is_open = true AND date_created IS NOT NULL AND date_closed IS NOT NULL;
Retrieve users with active status and updated after '2023-04-01' and updated_at is not null.,SELECT * FROM users WHERE is_active = true AND updated_at > '2023-04-01' AND updated_at IS NOT NULL;
Find organizations located in the city 'Denver' and trial_ends_at is not null.,SELECT * FROM organizations WHERE city = 'Denver' AND trial_ends_at IS NOT NULL;
Get pharmacies activated by 'Pharmacist D' and activate_at is not null.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist D' AND activate_at IS NOT NULL;
Retrieve the staff directory for user_id '97531' and employee_id is not null.,SELECT * FROM staff_directory WHERE user_id = '97531' AND employee_id IS NOT NULL;
Find assets with an active status and serial_number is not empty.,SELECT * FROM assets WHERE active = true AND serial_number <> '';
Get hazards with the name 'Chemical Spill' and description is not empty.,SELECT * FROM hazards WHERE name = 'Chemical Spill' AND description <> '';
Retrieve the event staff roles with the forms_id '654' and order is not null.,"SELECT * FROM event_staff_roles WHERE forms_id = '654' AND ""order"" IS NOT NULL;"
Get event actions for events_id '321' and action_date is not null and date_done is not null.,SELECT * FROM event_actions WHERE events_id = '321' AND action_date IS NOT NULL AND date_done IS NOT NULL;
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null and updated_at is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '876' AND facility_id = '543' AND updated_by IS NOT NULL AND updated_at IS NOT NULL;
Get events reported by user_id '987' and date_created is not null and updated_by is not null.,SELECT * FROM events WHERE reporters_id = '987' AND date_created IS NOT NULL AND updated_by IS NOT NULL AND harmt IS NOT NULL;
Retrieve users of type 'User' and active status is true and date_created is not null.,SELECT * FROM users WHERE type = 'User' AND is_active = true AND date_created IS NOT NULL AND sf_id IS NOT NULL;
Find organizations created after '2023-02-01' and countries_id is not null and trial_ends_at is not null.,SELECT * FROM organizations WHERE created_at > '2023-02-01' AND countries_id IS NOT NULL AND trial_ends_at IS NOT NULL AND name <> '';
Get pharmacies in the city 'Chicago' and created_at is not null and activated_by is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL AND activated_by IS NOT NULL;
Retrieve the staff directory for user_id '13579' and official_user_id is not null and fixed is true.,SELECT * FROM staff_directory WHERE user_id = '13579' AND official_user_id IS NOT NULL AND fixed = true;
Find assets with an active status and updated_at is not null and asset_type_id is not null.,SELECT * FROM assets WHERE active = true AND updated_at IS NOT NULL AND asset_type_id IS NOT NULL;
Get hazards associated with pharmacies_id '43210' and created_at is not null and pharmacies_id is not null.,SELECT * FROM hazards WHERE pharmacies_id = '43210' AND created_at IS NOT NULL AND pharmacies_id IS NOT NULL;
Retrieve the event staff roles with the default flag set and forms_id is not null and facility_id is not null.,SELECT * FROM event_staff_roles WHERE is_default = true AND forms_id IS NOT NULL AND facility_id IS NOT NULL;
Get event actions performed by user_id '65432' and updated_at is not null and user_pharmacy_id is not null.,SELECT * FROM event_actions WHERE user_id = '65432' AND updated_at IS NOT NULL AND user_pharmacy_id IS NOT NULL;
Find form settings summary tools for facility_id '54321' and organization_id '87654' and tools_id is not null and updated_by is not null.,SELECT * FROM formsettings_summarytools WHERE facility_id = '54321' AND organization_id = '87654' AND tools_id IS NOT NULL AND updated_by IS NOT NULL;
Get events where the harmt is not null or prescribers_id is not null and is_open is true and date_created is not null and date_closed is not null.,SELECT * FROM events WHERE (harmt IS NOT NULL OR prescribers_id IS NOT NULL) AND is_open = true AND date_created IS NOT NULL AND date_closed IS NOT NULL;
Retrieve users with active status and updated after '2023-04-01' and updated_at is not null and date_updated is not null.,SELECT * FROM users WHERE is_active = true AND updated_at > '2023-03-01' AND type IS NOT NULL AND date_updated IS NOT NULL;
Find organizations located in the city 'Denver' and trial_ends_at is not null and countries_id is not null.,SELECT * FROM organizations WHERE city = 'Seattle' AND trial_ends_at IS NOT NULL AND countries_id IS NOT NULL;
Get pharmacies activated by 'Pharmacist D' and activate_at is not null and activated_by is not null.,SELECT * FROM pharmacies WHERE activated_by = 'Pharmacist B' AND activate_at IS NOT NULL;
Retrieve the staff directory for user_id '97531' and employee_id is not null and full_name is not empty.,SELECT * FROM staff_directory WHERE user_id = '98765' AND created_at IS NOT NULL;
Find assets with an active status and serial_number is not empty and asset_type_id is not null.,SELECT * FROM assets WHERE asset_type_id = '789' AND serial_number IS NOT NULL;
Get hazards with the name 'Chemical Spill' and description is not empty and pharmacies_id is not null.,SELECT * FROM hazards WHERE pharmacies_id = '65432' AND description <> '';
Retrieve the event staff roles with the forms_id '654' and order is not null and name is not empty.,SELECT * FROM event_staff_roles WHERE forms_id = '654' AND order IS NOT NULL;
Get event actions for events_id '321' and action_date is not null and date_done is not null and updated_by is not null.,SELECT * FROM event_actions WHERE events_id = '987' AND updated_by = 'John Smith';
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null and tools_id is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '543' AND updated_by = 'Jane Doe';
Get events reported by user_id '987' and date_created is not null and updated_by is not null and harmt is not null.,SELECT * FROM events WHERE reporters_id = '321' AND harmt IS NOT NULL;
Retrieve users of type 'User' and active status is true and date_created is not null and sf_id is not null.,SELECT * FROM users WHERE type = 'Admin' AND is_active = true;
Find organizations created after '2023-02-01' and countries_id is not null and trial_ends_at is not null and name is not empty.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND updated_at < '2023-06-30';
Get pharmacies in the city 'Chicago' and created_at is not null and activated_by is not null and organizations_id is not null.,SELECT * FROM pharmacies WHERE city = 'Los Angeles' AND daye_enabled IS NOT NULL;
Retrieve the staff directory for user_id '13579' and official_user_id is not null and fixed is true and full_name is not empty.,SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' AND fixed = true;
Find assets with an active status and updated_at is not null and asset_type_id is not null and asset_items_id is not null.,SELECT * FROM assets WHERE active = true AND updated_at BETWEEN '2023-01-01' AND '2023-06-30';
Get hazards associated with pharmacies_id '43210' and created_at is not null and pharmacies_id is not null and name is not empty.,SELECT * FROM hazards WHERE name LIKE 'Chemical%';
Retrieve the event staff roles with the default flag set and forms_id is not null and facility_id is not null and order is not null.,SELECT * FROM event_staff_roles WHERE forms_id = '789' AND facility_id = '654';
Get event actions performed by user_id '65432' and updated_at is not null and user_pharmacy_id is not null and action_date is not null.,SELECT * FROM event_actions WHERE events_id = '987' AND updated_by = 'John Smith';
Find form settings summary tools for facility_id '54321' and organization_id '87654' and tools_id is not null and updated_by is not null and forms_id is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '543' AND updated_by = 'Jane Doe';
Get events where the harmt is not null or prescribers_id is not null and is_open is true and date_created is not null and date_closed is not null and users_fullname is not empty.,SELECT * FROM events WHERE reporters_id = '321' AND harmt IS NOT NULL;
Retrieve users with active status and updated after '2023-04-01' and updated_at is not null and date_updated is not null and profiles_id is not null.,SELECT * FROM users WHERE type = 'User' AND is_active = true;
Find organizations located in the city 'Denver' and trial_ends_at is not null and countries_id is not null and name is not empty and address is not empty.,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND updated_at < '2023-06-30';
Get pharmacies activated by 'Pharmacist D' and activate_at is not null and activated_by is not null and date_disabled is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL;
Retrieve the staff directory for user_id '97531' and employee_id is not null and full_name is not empty and official_user_id is not null.,SELECT * FROM staff_directory WHERE user_id = '13579' AND official_user_id IS NOT NULL;
Find assets with an active status and serial_number is not empty and asset_type_id is not null and created_at is not null.,SELECT * FROM assets WHERE active = true AND updated_at IS NOT NULL;
Get hazards with the name 'Chemical Spill' and description is not empty and pharmacies_id is not null and updated_at is not null.,SELECT * FROM hazards WHERE pharmacies_id = '43210' AND created_at IS NOT NULL;
Retrieve the event staff roles with the forms_id '654' and order is not null and name is not empty and facility_id is not null.,SELECT * FROM event_staff_roles WHERE forms_id = '654' AND updates_by IS NOT NULL;
Get event actions for events_id '321' and action_date is not null and date_done is not null and updated_by is not null and date_created is not null.,SELECT * FROM event_actions WHERE events_id = '321' AND action_date IS NOT NULL;
Find form settings summary tools for organization_id '876' and facility_id '543' and updated_by is not null and tools_id is not null and facility_id is not null.,SELECT * FROM formsettings_summarytools WHERE organization_id = '876' AND facility_id = '543' AND updated_by IS NOT NULL;
Get events reported by user_id '987' and date_created is not null and updated_by is not null and harmt is not null and organization_id is not null.,SELECT * FROM events WHERE reporters_id = '987' AND date_created IS NOT NULL;
Retrieve users of type 'User' and active status is true and date_created is not null and sf_id is not null and roles_id is not null.,SELECT * FROM users WHERE type = 'User' AND date_updated IS NOT NULL;
Find organizations created after '2023-02-01' and countries_id is not null and trial_ends_at is not null and name is not empty and updated_at is not null.,SELECT * FROM organizations WHERE created_at > '2023-02-01' AND countries_id IS NOT NULL;
Get pharmacies in the city 'Chicago' and created_at is not null and activated_by is not null and organizations_id is not null and updated_at is not null.,SELECT * FROM pharmacies WHERE city = 'Chicago' AND created_at IS NOT NULL;
Retrieve the staff directory for employees with IDs starting with 'EMP-'.,SELECT * FROM staff_directory WHERE employee_id LIKE 'EMP-%';
Get the assets that have been recently updated.,SELECT * FROM assets WHERE updated_at > (CURRENT_TIMESTAMP - INTERVAL 1 DAY);
Find hazards related to pharmacies with names containing the word 'Healthcare'.,SELECT * FROM hazards WHERE pharmacies_id IN (SELECT pharmacies_id FROM pharmacies WHERE name LIKE '%Healthcare%');
Get the event staff roles with names ending in 'Coordinator'.,SELECT * FROM event_staff_roles WHERE name LIKE '%Coordinator';
Retrieve event actions performed by users who have the role of 'Supervisor' in their profile.,SELECT * FROM event_actions WHERE user_id IN (SELECT user_id FROM users WHERE profiles_id IN (SELECT profiles_id FROM profiles WHERE role = 'Supervisor'));
Find form settings summary tools for facilities located in cities starting with 'S'.,SELECT * FROM formsettings_summarytools WHERE facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'S%');
Get events that involve multiple harm types and are reported by users with the 'Admin' role.,SELECT * FROM events WHERE harmt IS NOT NULL AND reporters_id IN (SELECT users_id FROM users WHERE profiles_id IN (SELECT profiles_id FROM profiles WHERE role = 'Admin'));
Retrieve users with active status and last updated on weekends.,"SELECT * FROM users WHERE is_active = 1 AND DAYOFWEEK(updated_at) IN (1, 7);"
Find organizations that are operating in multiple countries.,SELECT * FROM organizations WHERE sf_id IN (SELECT sf_id FROM organizations GROUP BY sf_id HAVING COUNT(DISTINCT countries_id) > 1);
Get pharmacies activated by users with names containing 'Pharma' and located in cities starting with 'P'.,SELECT * FROM pharmacies WHERE activated_by LIKE '%Pharma%' AND organizations_id IN (SELECT organizations_id FROM organizations WHERE address LIKE 'P%');
Retrieve the staff directory for users whose full names contain both 'John' and 'Doe'.,SELECT * FROM staff_directory WHERE full_name LIKE '%John%' AND full_name LIKE '%Doe%';
Find assets with the highest value in their asset_items_id.,SELECT * FROM assets WHERE asset_items_id IN (SELECT MAX(asset_items_id) FROM assets);
Get hazards associated with pharmacies that have the highest number of reported incidents.,SELECT * FROM hazards WHERE pharmacies_id IN (SELECT pharmacies_id FROM pharmacies GROUP BY pharmacies_id ORDER BY COUNT(*) DESC LIMIT 1);
Retrieve the event staff roles with the most number of forms associated with them.,SELECT * FROM event_staff_roles WHERE forms_id IN (SELECT forms_id FROM event_staff_roles GROUP BY forms_id ORDER BY COUNT(*) DESC);
Find event actions that were performed during weekends.,"SELECT * FROM event_actions WHERE WEEKDAY(action_date) IN (5, 6);"
Get form settings summary tools for organizations with names containing 'Institute' and facilities located in cities starting with 'M'.,SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE name LIKE '%Institute%') AND facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'M%');
Retrieve events where the harmt value is the same as the prescribers_id value.,SELECT * FROM events WHERE harmt = prescribers_id;
Find users who have the same date of creation and update.,SELECT * FROM users WHERE DATE(date_created) = DATE(updated_at);
Get organizations located in countries that have more than one trial ending date.,SELECT * FROM organizations WHERE trial_ends_at IN (SELECT trial_ends_at FROM organizations GROUP BY trial_ends_at HAVING COUNT(*) > 1);
Retrieve pharmacies that were activated on a specific date by users with the same initials as the pharmacy's name.,"SELECT * FROM pharmacies WHERE activate_at = 'specific_date' AND activated_by = SUBSTRING(name, 1, 2);"
Find the staff directory for users whose IDs are palindromes.,SELECT * FROM staff_directory WHERE employee_id = REVERSE(employee_id);
Get assets with serial numbers containing a sequence of three consecutive numbers.,SELECT * FROM assets WHERE serial_number REGEXP '[0-9]{3}';
Retrieve hazards with descriptions that include at least three different colors.,SELECT * FROM hazards WHERE description LIKE '%color1%' OR description LIKE '%color2%' OR description LIKE '%color3%';
Find event staff roles that have the same order as their respective forms_id.,SELECT * FROM event_staff_roles WHERE order = forms_id;
Get event actions performed by users who have the same user_pharmacy_id as their user_id.,SELECT * FROM event_actions WHERE user_id = user_pharmacy_id;
Retrieve form settings summary tools for organizations with the most recent updates and facilities with the oldest updates.,SELECT * FROM formsettings_summarytools WHERE updated_at IN (SELECT MAX(updated_at) FROM formsettings_summarytools) UNION SELECT * FROM formsettings_summarytools WHERE updated_at IN (SELECT MIN(updated_at) FROM formsettings_summarytools);
Find events where the harmt and prescribers_id values have the same number of digits.,SELECT * FROM events WHERE LENGTH(harmt) = LENGTH(prescribers_id);
Get users who have updated their profiles at least twice within a week.,"SELECT * FROM users WHERE updated_at >= (SELECT DATE_SUB(NOW(), INTERVAL 1 WEEK)) GROUP BY user_id HAVING COUNT(DISTINCT DATE(updated_at)) >= 2;"
Retrieve organizations that have the same trial_ends_at date as their creation date.,SELECT * FROM organizations WHERE trial_ends_at = DATE(created_at);
Find pharmacies in cities where the number of enabled pharmacies is greater than the number of disabled pharmacies.,SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) > (SELECT COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL);
Get the staff directory for users with the longest full names.,SELECT * FROM staff_directory WHERE LENGTH(full_name) = (SELECT MAX(LENGTH(full_name)) FROM staff_directory);
Retrieve assets that have been updated in the last 24 hours and have serial numbers with alternating letters and numbers.,SELECT * FROM assets WHERE updated_at > (CURRENT_TIMESTAMP - INTERVAL 1 DAY) AND serial_number REGEXP '([A-Za-z0-9]{2})+';
Find hazards with descriptions that mention a specific industry keyword.,SELECT * FROM hazards WHERE description LIKE '%industry_keyword%';
Get event staff roles with names containing the word 'Lead' and order values in descending order.,SELECT * FROM event_staff_roles WHERE name LIKE '%Lead%' ORDER BY order DESC;
Retrieve event actions performed by users whose user_pharmacy_id is an anagram of their user_id.,"SELECT * FROM event_actions WHERE WEEKDAY(action_date) IN (5, 6) AND date_done IS NOT NULL;"
Find form settings summary tools for organizations that have updated their facilities after updating their tools.,SELECT * FROM formsettings_summarytools WHERE facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'M%') AND updated_by IN (SELECT name FROM organizations WHERE name LIKE '%Institute%');
Get events where the harmt value is a prime number.,SELECT * FROM events WHERE harmt = prescribers_id AND harmt IS NOT NULL;
Retrieve users who have updated their profiles on the same day they were created.,SELECT * FROM users WHERE DATE(date_created) = DATE(updated_at) AND sf_id = updated_at;
Find organizations located in countries with the longest trial_ends_at duration.,SELECT * FROM organizations WHERE trial_ends_at IN (SELECT trial_ends_at FROM organizations GROUP BY trial_ends_at HAVING MAX(trial_ends_at) - MIN(trial_ends_at) = (SELECT MAX(trial_ends_at) - MIN(trial_ends_at) FROM organizations));
Get pharmacies activated by users with the shortest names.,SELECT * FROM pharmacies WHERE LENGTH(activated_by) = (SELECT MIN(LENGTH(activated_by)) FROM pharmacies);
Retrieve the staff directory for users whose full names have the same number of characters as their employee_id.,SELECT * FROM staff_directory WHERE LENGTH(full_name) = LENGTH(employee_id);
Find assets with serial numbers that form a palindrome.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number);
Get hazards with descriptions that contain at least three different animal names.,SELECT * FROM hazards WHERE description LIKE '%animal1%' OR description LIKE '%animal2%' OR description LIKE '%animal3%';
Retrieve event staff roles with names that contain the word 'Master' and have order values in ascending order.,SELECT * FROM event_staff_roles WHERE name LIKE '%Master%' ORDER BY order ASC;
Find event actions performed by users who have the same user_id and user_pharmacy_id.,SELECT * FROM event_actions WHERE user_id = user_pharmacy_id AND user_id IS NOT NULL;
"Get form settings summary tools for organizations that have updated their facilities after updating their tools, and the updated_by value is the same as the organization name.",SELECT * FROM formsettings_summarytools WHERE facility_id IN (SELECT facility_id FROM facilities WHERE city LIKE 'M%') AND updated_by = (SELECT name FROM organizations WHERE name = updated_by);
Retrieve events where the harmt value is a perfect square.,SELECT * FROM events WHERE harmt = ROUND(SQRT(harmt));
Find users who have updated their profiles on the same day of the week they were created.,SELECT * FROM users WHERE WEEKDAY(date_created) = WEEKDAY(updated_at);
Get organizations that have the same trial_ends_at date as their updated_at date.,SELECT * FROM organizations WHERE trial_ends_at = updated_at;
Retrieve pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies.,SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) = (SELECT COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL);
Find the staff directory for users whose IDs contain a repeating pattern of characters.,SELECT * FROM staff_directory WHERE employee_id REGEXP '(.+)\1';
Get assets with serial numbers that include the user_id of the user who last updated them.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', (SELECT user_id FROM users ORDER BY updated_at DESC LIMIT 1), '%');"
Retrieve hazards with descriptions that mention specific weather conditions.,SELECT * FROM hazards WHERE description LIKE '%weather_condition1%' OR description LIKE '%weather_condition2%' OR description LIKE '%weather_condition3%';
Find event staff roles with names that include the word 'Expert' and have order values in a Fibonacci sequence.,"SELECT * FROM event_staff_roles WHERE name LIKE '%Expert%' ORDER BY FIELD(order, 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89);"
Get event actions performed by users whose user_pharmacy_id is a palindrome.,SELECT * FROM event_actions WHERE user_pharmacy_id = REVERSE(user_id);
Retrieve form settings summary tools for organizations where the tools_id is a prime number and the updated_by value contains the word 'Admin'.,"SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE tools_id IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29) AND updated_by LIKE '%Admin%');"
Find events where the harmt and prescribers_id values have the same digits but in a different order.,SELECT * FROM events WHERE harmt = prescribers_id AND harmt != prescribers_id;
Get users who have updated their profiles on a day that is a multiple of their sf_id.,SELECT * FROM users WHERE DAY(updated_at) % sf_id = 0;
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates.,"SELECT * FROM organizations WHERE trial_ends_at = DATE_ADD(created_at, INTERVAL updated_at DAY);"
Find pharmacies in cities where the number of enabled pharmacies is a prime number.,"SELECT * FROM pharmacies WHERE (SELECT COUNT(*) FROM pharmacies WHERE daye_enabled IS NOT NULL) IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);"
Get the staff directory for users whose full names contain a repeating sequence of three letters.,SELECT * FROM staff_directory WHERE full_name REGEXP '([A-Za-z]{3})\1\1';
Retrieve assets that have the same asset_type_id as their asset_items_id.,SELECT * FROM assets WHERE asset_type_id = asset_items_id;
Find hazards with descriptions that mention at least three different types of plants.,SELECT * FROM hazards WHERE description LIKE '%plant1%' OR description LIKE '%plant2%' OR description LIKE '%plant3%';
Get event staff roles with names that include the word 'Ninja' and have order values in descending prime order.,SELECT * FROM event_staff_roles WHERE name LIKE '%Ninja%' ORDER BY order DESC;
Retrieve event actions performed by users whose user_id is a multiple of their user_pharmacy_id.,SELECT * FROM event_actions WHERE user_id % user_pharmacy_id = 0;
Find form settings summary tools for organizations where the tools_id is a perfect square and the updated_by value is a palindrome.,"SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE tools_id IN (1, 4, 9, 16, 25, 36, 49, 64, 81) AND updated_by = REVERSE(updated_by));"
Get events where the harmt value is a multiple of the prescribers_id value.,SELECT * FROM events WHERE harmt % prescribers_id = 0;
Retrieve users who have updated their profiles on a day that is a power of 2.,"SELECT * FROM users WHERE DAY(updated_at) = POWER(2, sf_id);"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(DATE(created_at), DATE(updated_at));"
"Get pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies, and the city name is a palindrome.",SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) = (SELECT COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL) AND city = REVERSE(city);
Retrieve the staff directory for users whose IDs are prime numbers.,"SELECT * FROM staff_directory WHERE employee_id IN (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);"
Find assets with serial numbers that include the user_id of the user who created them.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', (SELECT user_id FROM users ORDER BY created_at DESC LIMIT 1), '%');"
Get hazards with descriptions that mention at least one fictional character and one famous historical figure.,SELECT * FROM hazards WHERE description LIKE '%fictional_character%' AND description LIKE '%famous_historical_figure%';
Retrieve event staff roles with names that include the word 'Guru' and have order values in ascending prime order.,"SELECT * FROM event_staff_roles WHERE name LIKE '%Guru%' ORDER BY FIELD(order, 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97);"
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order.,"SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND CONCAT(SORT(user_id), '') = CONCAT(SORT(user_pharmacy_id), '');"
Get form settings summary tools for organizations where the tools_id is a Fibonacci number and the updated_by value is a palindrome.,"SELECT * FROM formsettings_summarytools WHERE organization_id IN (SELECT organization_id FROM organizations WHERE tools_id IN (0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89) AND updated_by = REVERSE(updated_by));"
Retrieve events where the harmt value is a palindrome.,SELECT * FROM events WHERE harmt = REVERSE(harmt);
Find users who have updated their profiles on a day that is a power of their sf_id.,"SELECT * FROM users WHERE DAY(updated_at) = POWER(sf_id, sf_id);"
"Get organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates, and the organization name contains the word 'Innovation'.","SELECT * FROM organizations WHERE trial_ends_at = DATE_ADD(created_at, INTERVAL updated_at DAY) AND name LIKE '%Innovation%';"
Retrieve pharmacies in cities where the number of enabled pharmacies is a perfect square.,"SELECT * FROM pharmacies WHERE (SELECT COUNT() FROM pharmacies WHERE daye_enabled IS NOT NULL) = POWER(COUNT() FROM pharmacies WHERE date_disabled IS NOT NULL, 2);"
Retrieve the staff directory for users whose IDs contain a palindrome.,SELECT * FROM staff_directory WHERE user_id LIKE '%a%' OR user_id LIKE '%e%' OR user_id LIKE '%i%' OR user_id LIKE '%o%' OR user_id LIKE '%u%';
Get assets with serial numbers that are an anagram of the user_id of the user who last updated them.,SELECT * FROM assets WHERE serial_number IN (SELECT user_id FROM users WHERE user_id LIKE '%a%' OR user_id LIKE '%e%' OR user_id LIKE '%i%' OR user_id LIKE '%o%' OR user_id LIKE '%u%') ORDER BY serial_number;
Find hazards related to pharmacies with names containing the word 'Wellness'.,SELECT * FROM hazards WHERE pharmacy_name LIKE '%Wellness%';
Get the event staff roles with names that form a sentence when concatenated together.,"SELECT * FROM event_staff_roles WHERE CONCAT(role_name, ' ') LIKE '%sentence%';"
Retrieve event actions performed by users who have the role of 'Manager' in their profile.,SELECT * FROM event_actions WHERE user_id IN (SELECT user_id FROM user_profiles WHERE role = 'Manager');
Find form settings summary tools for facilities located in cities with a vowel as the second letter.,SELECT * FROM form_settings_summary WHERE facility_city LIKE '_[AEIOU]%';
Get events that involve harm types with alphabetical characters and are reported by users with a username starting with 'A'.,SELECT * FROM events WHERE harm_types REGEXP '^[a-zA-Z]+$' AND reported_by LIKE 'A%';
Retrieve users with active status and last updated on a Monday.,SELECT * FROM users WHERE status = 'active' AND WEEKDAY(last_updated) = 0;
Find organizations that operate in countries whose names contain the word 'United'.,SELECT * FROM organizations WHERE country_name LIKE '%United%';
Get pharmacies activated by users with names containing 'Med' and located in cities ending with 'ville'.,SELECT * FROM pharmacies WHERE activated_by LIKE '%Med%' AND pharmacy_city LIKE '%ville';
Retrieve the staff directory for users whose full names contain a pattern of alternating vowels and consonants.,SELECT * FROM staff_directory WHERE full_name REGEXP '^[AEIOU]+[^AEIOU]+[AEIOU]+[^AEIOU]+$';
Find assets with the highest value in their asset_items_id and a serial number that is a palindrome.,SELECT * FROM assets WHERE asset_items_id = (SELECT MAX(asset_items_id) FROM assets) AND serial_number = REVERSE(serial_number);
Get hazards associated with pharmacies that have the highest number of reported incidents and a description containing the word 'safety'.,SELECT * FROM hazards WHERE pharmacy_id IN (SELECT pharmacy_id FROM pharmacies WHERE reported_incidents = (SELECT MAX(reported_incidents) FROM pharmacies) AND description LIKE '%safety%');
Retrieve the event staff roles with the most number of forms associated with them and names starting with 'Lead'.,"SELECT * FROM event_staff_roles WHERE role_name LIKE 'Lead%' AND role_id IN (SELECT role_id FROM forms GROUP BY role_id HAVING COUNT() = (SELECT MAX(form_count) FROM (SELECT role_id, COUNT() AS form_count FROM forms GROUP BY role_id) AS temp));"
Find event actions that were performed on public holidays.,SELECT * FROM event_actions WHERE action_date IN (SELECT date FROM holidays WHERE is_public_holiday = true);
Get form settings summary tools for organizations with names containing 'Health' and facilities located in cities with more than two words.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE organization_name LIKE '%Health%') AND facility_city REGEXP '^[a-zA-Z]+ [a-zA-Z]+ [a-zA-Z]+$';
Retrieve events where the harmt value is the same as the prescribers_id value and the event type is 'Emergency'.,SELECT * FROM events WHERE harmt = prescribers_id AND event_type = 'Emergency';
Find users who have the same date of creation and update and have a profile picture.,SELECT * FROM users WHERE creation_date = update_date AND profile_picture IS NOT NULL;
Get organizations located in countries with names starting with 'The' and trial_ends_at is not null.,SELECT * FROM organizations WHERE country_name LIKE 'The%' AND trial_ends_at IS NOT NULL;
Retrieve pharmacies that were activated on a specific date by users with the same initials as the pharmacy's name and a user profile picture.,"SELECT * FROM pharmacies WHERE activation_date = 'specific_date' AND activated_by = SUBSTRING(pharmacy_name, 1, 2) AND user_id = SUBSTRING(pharmacy_name, 1, 2) AND profile_picture IS NOT NULL;"
Find the staff directory for users whose IDs are the reverse of their employee_id.,SELECT * FROM staff_directory WHERE REVERSE(user_id) = employee_id;
Get assets with serial numbers containing a sequence of consecutive prime numbers.,SELECT * FROM assets WHERE serial_number LIKE '%2357%' OR serial_number LIKE '%357%';
"Retrieve hazards with descriptions that include at least three different types of hazards (e.g., fire, chemical, electrical).",SELECT * FROM hazards WHERE description LIKE '%fire%' AND description LIKE '%chemical%' AND description LIKE '%electrical%';
Find event staff roles that have the same order as their respective forms_id and names ending with 'Specialist'.,SELECT * FROM event_staff_roles WHERE forms_id = role_id AND role_name LIKE '%Specialist';
Get event actions performed by users who have the same user_pharmacy_id as their user_id and the action date is a national holiday.,SELECT * FROM event_actions WHERE user_id = user_pharmacy_id AND action_date IN (SELECT date FROM holidays WHERE is_national_holiday = true);
Retrieve form settings summary tools for organizations with the most recent updates and facilities with the oldest updates and updated_by is an anagram of the organization name.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations ORDER BY update_date DESC LIMIT 1) AND facility_id IN (SELECT facility_id FROM facilities ORDER BY update_date ASC LIMIT 1) AND updated_by = (SELECT organization_name FROM organizations ORDER BY update_date DESC LIMIT 1);
Find events where the harmt and prescribers_id values have the same number of digits and the event is marked as 'Urgent'.,SELECT * FROM events WHERE LENGTH(harmt) = LENGTH(prescribers_id) AND event_mark = 'Urgent';
Get users who have updated their profiles at least twice within a week and have the same date of creation and update.,"SELECT * FROM users WHERE creation_date = update_date AND DATEDIFF(update_date, creation_date) <= 7 GROUP BY user_id HAVING COUNT(*) >= 2;"
Retrieve organizations that have the same trial_ends_at date as their creation date and have a company logo.,SELECT * FROM organizations WHERE trial_ends_at = creation_date AND company_logo IS NOT NULL;
Find pharmacies in cities where the number of enabled pharmacies is greater than the number of disabled pharmacies and the city name contains a repeating letter.,SELECT * FROM pharmacies WHERE pharmacy_city IN (SELECT pharmacy_city FROM pharmacies GROUP BY pharmacy_city HAVING COUNT(*) > 2) AND enabled_pharmacies > disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z])\1';
Get the staff directory for users with the longest full names and a username containing the word 'super'.,SELECT * FROM staff_directory WHERE LENGTH(full_name) = (SELECT MAX(LENGTH(full_name)) FROM staff_directory) AND username LIKE '%super%';
Retrieve assets that have been updated in the last 24 hours and have serial numbers with alternating uppercase and lowercase letters.,SELECT * FROM assets WHERE last_updated >= NOW() - INTERVAL 1 DAY AND serial_number REGEXP '^[A-Za-z]{1}[a-zA-Z]{1}[A-Za-z]{1}[a-zA-Z]{1}.*';
"Find hazards with descriptions that mention at least three different natural disasters (e.g., earthquake, hurricane, tornado).",SELECT * FROM hazards WHERE description REGEXP 'earthquake' AND description REGEXP 'hurricane' AND description REGEXP 'tornado';
Get event staff roles with names containing the word 'Champion' and order values in descending even numbers.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Champion%' AND order_value % 2 = 0 ORDER BY order_value DESC;
Retrieve event actions performed by users whose user_pharmacy_id is an anagram of their user_id and the action date is their birthdate.,SELECT * FROM event_actions WHERE user_pharmacy_id = user_id AND action_date = birthdate;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and have the same updated_by value as the organization name.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = (SELECT organization_name FROM organizations WHERE updated_by = REVERSE(organization_name));
Get events where the harmt value is a prime number and the event location is in a city starting with 'S'.,SELECT * FROM events WHERE harmt IN (SELECT number FROM primes) AND event_location LIKE 'S%';
Retrieve users who have updated their profiles on the same day they were created and have a phone number.,SELECT * FROM users WHERE DATE(creation_date) = DATE(update_date) AND phone_number IS NOT NULL;
Find organizations located in countries with the longest trial_ends_at duration and a company website.,"SELECT * FROM organizations WHERE DATEDIFF(trial_ends_at, creation_date) = (SELECT MAX(DATEDIFF(trial_ends_at, creation_date)) FROM organizations) AND company_website IS NOT NULL;"
Get pharmacies activated by users with the shortest names and a registration certificate.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city = REVERSE(pharmacy_city);
Retrieve the staff directory for users whose full names have the same number of characters as their employee_id and a job title containing the word 'Senior'.,SELECT * FROM staff_directory WHERE REVERSE(user_id) = employee_id AND job_title LIKE '%Senior%';
"Find assets with serial numbers that form a pattern using a combination of letters and numbers (e.g., A1B2C3).",SELECT * FROM assets WHERE serial_number REGEXP '^[A-Za-z0-9]*$';
Get hazards with descriptions that contain at least three different colors and are classified as 'High Risk'.,SELECT * FROM hazards WHERE description REGEXP 'red' AND description REGEXP 'blue' AND description REGEXP 'green' AND hazard_classification = 'High Risk';
Retrieve event staff roles with names that contain the word 'Captain' and have order values in ascending prime numbers.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Captain%' AND order_value IN (SELECT number FROM primes ORDER BY number ASC);
Find event actions performed by users who have the same user_id and user_pharmacy_id and the action date is a weekend.,"SELECT * FROM event_actions WHERE user_id = user_pharmacy_id AND WEEKDAY(action_date) IN (5, 6);"
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares);
Retrieve events where the harmt value is a perfect square and the event type is 'Accident'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Meeting';
Find users who have updated their profiles on a day that is a multiple of their sf_id and have a bio.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND bio IS NOT NULL;"
Get organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and a mission statement.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_logo IS NOT NULL;"
Retrieve pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name is a palindrome.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (disabled_pharmacies * disabled_pharmacies) AND pharmacy_award = 'Pharmacy of the Year' AND pharmacy_name = REVERSE(pharmacy_city);
Find the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id);
Get assets with serial numbers that include the user_id of the user who created them and have a purchase receipt.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND purchase_receipt IS NOT NULL;"
"Retrieve hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal.",SELECT * FROM hazards WHERE description REGEXP 'computer' AND description REGEXP 'smartphone' AND description REGEXP 'animal';
Find event staff roles with names that include the word 'Ambassador' and order values in descending prime numbers.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Ambassador%' AND order_value IN (SELECT number FROM primes ORDER BY number DESC);
Get event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a public holiday.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM holidays WHERE is_national_holiday = true);
Retrieve form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares);
Find events where the harmt value is a palindrome and the event type is 'Meeting'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Accident';
Get users who have updated their profiles on a day that is a power of 2 and have a skill endorsement.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true;"
Retrieve organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and a company logo.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement IS NOT NULL;"
Find pharmacies in cities where the number of enabled pharmacies is a perfect square and have a 'Pharmacy of the Year' award.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city = REVERSE(pharmacy_name);
Get the staff directory for users whose IDs are the reverse of their employee_id and have a professional certification.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = supervisor_last_name AND job_title LIKE '%Expert%';
Retrieve assets with serial numbers that contain the user_id of the user who last updated them and have a warranty.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true);
"Find hazards with descriptions that mention at least three different types of food (e.g., pizza, sushi, burger) and are marked as 'Critical'.",SELECT * FROM hazards WHERE description REGEXP 'earthquake' AND description REGEXP 'hurricane' AND description REGEXP 'tornado' AND hazard_classification = 'Severe';
Get event staff roles with names that include the word 'Innovator' and order values in ascending Fibonacci sequence.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC);
Retrieve event actions performed by users whose user_id is a multiple of their user_pharmacy_id and the action date is a national holiday.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM holidays WHERE is_weekday = true) AND action_time BETWEEN '09:00:00' AND '17:00:00';
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the tools_id is a perfect square.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic');
Get events where the harmt value is a multiple of the prescribers_id value and the event location is in a city ending with 'town'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference';
Retrieve users who have updated their profiles on a day that is a power of their sf_id and have a verified email address.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL;"
Find organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true;"
Get pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z])\1';
Retrieve the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert'.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%';
Find assets with serial numbers that form a palindrome and have a purchase date on a public holiday.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true);
"Get hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe'.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe';
Retrieve event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC);
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND user_id IN (SELECT number FROM digits_permutation) AND user_pharmacy_id IN (SELECT number FROM digits_permutation);
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference'.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference';
Find users who have updated their profiles on a day that is a power of 2 and have a verified phone number.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND phone_number_verified = true;"
Get organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation'.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_website IS NOT NULL;"
Retrieve pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true;
Find the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager'.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%';
Get assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL;"
"Retrieve hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency'.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency';
Find event staff roles with names that include the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles);
Get event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true;
Retrieve form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true;
Find events where the harmt value is a palindrome and the event type is 'Workshop' and the event location is a city with a palindrome name.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company';
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist'.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%';
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL;
Get events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL;
Retrieve users who have updated their profiles on a day that is a power of 2 and have a verified phone number and a skill endorsement and have received a performance award.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND phone_number_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL;"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation' and a company logo and are recognized as a leader in their industry.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_logo IS NOT NULL AND recognized_leader = true AND diverse_workforce = true;"
Get pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true;
Retrieve the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager' and have received a promotion.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%' AND promotion_status = 'Promoted';
Find assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record and a service history.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL;"
"Get hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency' and have a high likelihood of occurrence.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency' AND likelihood_of_occurrence = 'High';
Retrieve event staff roles with names that include the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true;
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Workshop' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Workshop' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7';
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award IS NOT NULL;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_from_attendees = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true;
Get events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_industry_publication = true;
Retrieve users who have updated their profiles on a day that is a power of 2 and have a verified phone number and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND phone_number_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true;"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation' and a company logo and are recognized as a leader in their industry and have a positive reputation among customers and stakeholders.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_logo IS NOT NULL AND recognized_leader = true AND positive_reputation_among_customers = true;"
Get pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7';
Retrieve the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager' and have received a promotion and have successfully completed leadership training.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%' AND promotion_status = 'Promoted' AND completed_leadership_training = true;
Find assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record and a service history and have been audited for compliance.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND audited_for_compliance = true;"
"Get hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency' and have a high likelihood of occurrence and have been identified as potential risks in the industry.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency' AND likelihood_of_occurrence = 'High' AND identified_as_industry_risks = true;
Retrieve event staff roles with names that include the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_from_attendees = true AND contributed_to_best_practices = true;
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND recognized_as_industry_influencer = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_industry_publication = true AND diverse_audience = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND invited_to_speak_at_conferences = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND recognized_as_leaders = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award and have successfully completed a management training program.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award = true AND management_training_program_completion = true;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true;
Find form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true;
Get events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true;
Retrieve users who have updated their profiles on a day that is a power of 2 and have a verified phone number and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true;"
Find organizations that have the trial_ends_at date equal to the concatenation of their creation and updated_at dates and have a mission statement including the word 'innovation' and a company logo and are recognized as a leader in their industry and have a positive reputation among customers and stakeholders and have demonstrated sustained financial growth over the years.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND mission_statement LIKE '%innovation%' AND company_logo IS NOT NULL AND recognized_leader = true AND positive_reputation = true AND sustained_financial_growth = true;"
Get pharmacies in cities where the number of enabled pharmacies is a perfect square and the city name is a palindrome of the pharmacy name and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems.,SELECT * FROM pharmacies WHERE enabled_pharmacies = (SELECT number FROM perfect_squares) AND pharmacy_city = REVERSE(pharmacy_name) AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true;
Retrieve the staff directory for users whose IDs are prime numbers and have the same last name as their supervisor and a job title containing the word 'Manager' and have received a promotion and have successfully completed leadership training and have been recognized as outstanding performers by senior management.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND last_name = (SELECT last_name FROM staff_directory WHERE user_id = supervisor_id) AND job_title LIKE '%Manager%' AND promotion_status = 'Promoted' AND leadership_training_completion = true AND outstanding_performer_recognition = true;
Find assets with serial numbers that include the user_id of the user who created them and have a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets and have undergone regular calibration and quality assurance checks.,"SELECT * FROM assets WHERE serial_number LIKE CONCAT('%', user_id, '%') AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true AND calibration_quality_assurance_checks = true;"
"Get hazards with descriptions that mention at least one type of technology (e.g., computer, smartphone) and one type of animal and are marked as 'Emergency' and have a high likelihood of occurrence and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies and have been communicated to all relevant stakeholders.",SELECT * FROM hazards WHERE description LIKE '%technology%' AND description LIKE '%animal%' AND hazard_classification = 'Emergency' AND likelihood_of_occurrence = 'High' AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true AND communication_to_stakeholders = true;
Retrieve event staff roles with names that contain the word 'Legend' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences and have published books on event planning.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Legend%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true AND published_books_event_planning = true;
Find event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals and has served as a judge for event industry awards.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true AND event_industry_award_judge = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals and has an active mentorship program for new employees.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true AND mentorship_program = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants and has achieved a high level of attendee satisfaction.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true AND attendee_satisfaction_high = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management and have launched their own event planning consultancy.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true AND event_planning_consultancy_launch = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region and have been featured in business magazines as examples of successful organizations and have received prestigious industry accolades.,"SELECT * FROM organizations WHERE trial_ends_at = CONCAT(creation_date, updated_at) AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND top_employer_recognition = true AND business_magazine_feature = true AND industry_accolades_received = true AND international_market_presence = true;"
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems and has partnered with local healthcare providers for collaborative patient care.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true AND collaborative_patient_care = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award and have successfully completed a management training program and have published articles on event management in leading industry journals.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award = true AND management_training_program_completion = true AND published_articles_event_management_journals = true;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets and have undergone regular calibration and quality assurance checks and have been insured against loss or damage.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true AND calibration_quality_assurance_checks = true AND insurance_against_loss_damage = true;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies and have been communicated to all relevant stakeholders and have been incorporated into employee training programs.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true AND communication_to_stakeholders = true AND employee_training_programs = true;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences and have published books on event planning and have provided training workshops for aspiring event professionals.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true AND published_books_event_planning = true AND training_workshops_aspiring_professionals = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals and has served as a judge for event industry awards and has organized international conferences in collaboration with renowned industry associations.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true AND event_industry_award_judge = true AND international_conference_organization = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals and has an active mentorship program for new employees and has launched a research and innovation center for event technology advancements.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true AND mentorship_program = true AND research_innovation_center_launched = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants and has achieved a high level of attendee satisfaction and has generated significant media coverage.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true AND attendee_satisfaction_high = true AND significant_media_coverage = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management and have launched their own event planning consultancy and have expanded their business globally.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true AND event_planning_consultancy_launch = true AND business_expansion_global = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region and have been featured in business magazines as examples of successful organizations and have received prestigious industry accolades and have established their presence in multiple international markets.,SELECT * FROM organizations WHERE trial_ends_at = creation_date + updated_at AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND top_employer_recognition = true AND business_magazine_feature = true AND industry_accolades_received = true AND international_market_presence = true AND sustainable_business_practices = true;
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems and has partnered with local healthcare providers for collaborative patient care and has implemented a patient medication adherence program.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true AND healthcare_provider_collaboration = true AND patient_medication_adherence_program = true;
Get the staff directory for users whose IDs are prime numbers and have a job title containing the word 'Expert' and a professional certification and have received a leadership award and have successfully completed a management training program and have published articles on event management in leading industry journals and have delivered keynote speeches at international event conferences.,SELECT * FROM staff_directory WHERE user_id IN (SELECT number FROM primes) AND job_title LIKE '%Expert%' AND professional_certification IS NOT NULL AND leadership_award = true AND management_training_program_completion = true AND published_articles_event_management_journals = true AND keynote_speeches_delivered = true;
Retrieve assets with serial numbers that form a palindrome and have a purchase date on a public holiday and a warranty and a maintenance record and a service history and have been audited for compliance and have been recognized as high-value assets and have undergone regular calibration and quality assurance checks and have been insured against loss or damage and have been included in a comprehensive asset management system.,SELECT * FROM assets WHERE serial_number = REVERSE(serial_number) AND purchase_date IN (SELECT date FROM holidays WHERE is_public_holiday = true) AND warranty IS NOT NULL AND maintenance_record IS NOT NULL AND service_history IS NOT NULL AND compliance_audit = true AND high_value_asset_recognition = true AND calibration_quality_assurance_checks = true AND insurance_against_loss_damage = true AND asset_management_system_included = true;
"Find hazards with descriptions that mention at least three different types of transportation (e.g., car, train, plane) and are marked as 'Severe' and have a safety plan and emergency response procedures and have been identified as potential risks in the industry and have been addressed through risk mitigation strategies and have been communicated to all relevant stakeholders and have been incorporated into employee training programs and have been subject to periodic reviews and updates.",SELECT * FROM hazards WHERE description LIKE '%car%' AND description LIKE '%train%' AND description LIKE '%plane%' AND hazard_classification = 'Severe' AND safety_plan IS NOT NULL AND emergency_response_procedures IS NOT NULL AND potential_risk_industry_identification = true AND risk_mitigation_strategy = true AND communication_to_stakeholders = true AND employee_training_programs = true AND periodic_reviews_updates = true;
Get event staff roles with names that contain the word 'Wizard' and order values in descending prime Fibonacci sequence and have the highest number of assigned forms and a job title containing the word 'Specialist' and are recognized as experts in their field and have received positive feedback from event attendees and have contributed to the development of best practices in event management and have been invited to speak at industry conferences and have published books on event planning and have provided training workshops for aspiring event professionals and have organized international conferences in collaboration with renowned industry associations.,SELECT * FROM event_staff_roles WHERE role_name LIKE '%Wizard%' AND order_value IN (SELECT number FROM primes_fibonacci ORDER BY number DESC) AND assigned_forms = (SELECT MAX(assigned_forms) FROM event_staff_roles) AND job_title LIKE '%Specialist%' AND recognized_expert = true AND positive_feedback_event_attendees = true AND best_practices_contribution = true AND industry_conference_speaker = true AND published_books_event_planning = true AND training_workshops_aspiring_professionals = true AND international_conference_organization = true;
Retrieve event actions performed by users whose user_id and user_pharmacy_id have the same digits but in a different order and the action date is a weekday and the action time is during working hours and the user has attended a training session and has received positive customer feedback and has contributed to the success of previous events and has been recognized as an industry influencer and has published articles in leading event management journals and has served as a judge for event industry awards and has organized international conferences in collaboration with renowned industry associations and has received international recognition for event innovation and excellence.,SELECT * FROM event_actions WHERE user_id != user_pharmacy_id AND action_date IN (SELECT date FROM weekdays) AND action_time BETWEEN '09:00:00' AND '17:00:00' AND attended_training_session = true AND positive_customer_feedback = true AND contributed_to_previous_events = true AND industry_influencer_recognition = true AND published_articles_event_management_journals = true AND event_industry_award_judge = true AND international_conference_organization = true AND event_innovation_excellence_recognition = true;
Get form settings summary tools for organizations that have updated their facilities after updating their tools and the updated_by value is a palindrome of the organization name and the tools_id is a perfect square and the organization has a partnership with an academic institution and the facilities have passed a safety inspection and the organization has received an industry award and has implemented environmentally friendly practices and has a strong commitment to corporate social responsibility and has established a scholarship program for aspiring event professionals and has an active mentorship program for new employees and has launched a research and innovation center for event technology advancements and has contributed to the development of industry standards and best practices.,SELECT * FROM form_settings_summary WHERE organization_id IN (SELECT organization_id FROM organizations WHERE facility_updated_at > tool_updated_at) AND updated_by = REVERSE(organization_name) AND tools_id IN (SELECT number FROM perfect_squares) AND organization_id IN (SELECT organization_id FROM partnerships WHERE institution_type = 'Academic') AND facility_passed_safety_inspection = true AND industry_award IS NOT NULL AND environmentally_friendly_practices = true AND corporate_social_responsibility_commitment = true AND scholarship_program = true AND mentorship_program = true AND research_innovation_center_launched = true AND industry_standards_best_practices_contribution = true;
Retrieve events where the harmt value is a palindrome and the event type is 'Conference' and the event location is a city with a palindrome name and the event is sponsored by a well-known company and has a guest speaker and has been featured in a prominent industry publication and has attracted a diverse audience from different countries and has received positive feedback from event participants and has achieved a high level of attendee satisfaction and has generated significant media coverage and has been recognized as a leading event in the industry.,SELECT * FROM events WHERE harmt = REVERSE(harmt) AND event_type = 'Conference' AND event_location = REVERSE(event_location) AND event_sponsor = 'Well-known Company' AND guest_speaker IS NOT NULL AND featured_in_publication = true AND diverse_attendees_countries = true AND positive_feedback_event_participants = true AND attendee_satisfaction_high = true AND significant_media_coverage = true AND leading_event_recognition = true;
Get users who have updated their profiles on a day that is a power of 2 and have a verified email address and a skill endorsement and have received a performance award and have contributed to a successful project and have mentored other employees and have been invited to speak at industry conferences and have been recognized as thought leaders in the field of event management and have launched their own event planning consultancy and have expanded their business globally and have been appointed as advisors to event industry associations.,"SELECT * FROM users WHERE DATE(update_date) = POWER(2, sf_id) AND email_verified = true AND skill_endorsement IS NOT NULL AND performance_award IS NOT NULL AND contributed_to_successful_project = true AND mentored_employees = true AND industry_conference_speaker = true AND thought_leader_recognition = true AND event_planning_consultancy_launch = true AND business_expansion_global = true AND industry_association_advisor = true;"
Retrieve organizations that have the trial_ends_at date equal to the sum of their creation and updated_at dates and have a company website and a social media presence and have a diverse workforce representing different cultures and have been recognized as one of the top employers in the region and have been featured in business magazines as examples of successful organizations and have received prestigious industry accolades and have established their presence in multiple international markets and have implemented sustainable business practices to reduce environmental impact.,SELECT * FROM organizations WHERE trial_ends_at = creation_date + updated_at AND company_website IS NOT NULL AND social_media_presence = true AND diverse_workforce = true AND top_employer_recognition = true AND business_magazine_feature = true AND industry_accolades_received = true AND international_market_presence = true AND sustainable_business_practices = true AND scholarship_program = true;
Find pharmacies in cities where the number of enabled pharmacies is equal to the number of disabled pharmacies and the city name contains a repeating sequence of letters and the pharmacy has received a 'Pharmacy of the Year' award and has a drive-through service and offers home delivery and has a 24/7 customer support hotline and is actively involved in community outreach programs and has implemented advanced pharmacy automation systems and has partnered with local healthcare providers for collaborative patient care and has implemented a patient medication adherence program and has a dedicated clinical pharmacist on staff.,SELECT * FROM pharmacies WHERE enabled_pharmacies = disabled_pharmacies AND pharmacy_city REGEXP '([a-zA-Z]+)\1' AND pharmacy_award = 'Pharmacy of the Year' AND drive_through_service = true AND home_delivery_service = true AND customer_support_hotline = '24/7' AND community_outreach_programs = true AND advanced_pharmacy_automation_systems = true AND healthcare_provider_collaboration = true AND patient_medication_adherence_program = true AND clinical_pharmacist_on_staff = true;
"Fetch the last 10 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 10;"
"Retrieve the first 5 entries from the assets table.","SELECT * FROM assets LIMIT 5;"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25';"
"Retrieve the last 2 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 2 DAY;"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE();"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE();"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE();"
"Fetch the first 3 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 3;"
"Retrieve the last 5 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 5;"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25';"
"Retrieve the data from the events table for the last 7 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 7 DAY;"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP;"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP;"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP;"
"Fetch the last 20 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 20;"
"Retrieve the first 15 entries from the assets table.","SELECT * FROM assets LIMIT 15;"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25';"
"Retrieve the last 3 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 3 DAY;"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE();"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE();"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE();"
"Fetch the first 5 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 5;"
"Retrieve the last 10 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 10;"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25';"
"Retrieve the data from the events table for the last 7 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 7 DAY;"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP;"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP;"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP;"
"Fetch the last 15 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 15;"
"Retrieve the first 20 entries from the assets table.","SELECT * FROM assets LIMIT 20;"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25';"
"Retrieve the last 4 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 4 DAY;"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE();"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE();"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE();"
"Fetch the first 8 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 8;"
"Retrieve the last 7 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 7;"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25';"
"Retrieve the data from the events table for the last 10 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 10 DAY;"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 25 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 25"
"Retrieve the first 30 entries from the assets table.","SELECT * FROM assets LIMIT 30"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 5 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 5 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 12 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 12"
"Retrieve the last 15 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 15"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 15 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 15 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 30 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 30"
"Retrieve the first 25 entries from the assets table.","SELECT * FROM assets LIMIT 25"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 6 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 6 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 20 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 20"
"Retrieve the last 20 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 20"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 20 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 20 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 35 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 35"
"Retrieve the first 40 entries from the assets table.","SELECT * FROM assets LIMIT 40"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 7 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 7 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 25 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 25"
"Retrieve the last 30 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 30"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 25 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 25 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 40 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 40"
"Retrieve the first 35 entries from the assets table.","SELECT * FROM assets LIMIT 35"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 8 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 8 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 30 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 30"
"Retrieve the last 25 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 25"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 30 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 30 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 45 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 45"
"Retrieve the first 50 entries from the assets table.","SELECT * FROM assets LIMIT 50"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 10 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 10 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 35 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 35"
"Retrieve the last 40 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 40"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 35 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 35 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 50 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 50"
"Retrieve the first 45 entries from the assets table.","SELECT * FROM assets LIMIT 45"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 15 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 15 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 40 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 40"
"Retrieve the last 45 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 45"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 40 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 40 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 55 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 55"
"Retrieve the first 60 entries from the assets table.","SELECT * FROM assets LIMIT 60"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 20 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 20 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 45 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 45"
"Retrieve the last 50 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 50"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 45 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 45 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 60 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 60"
"Retrieve the first 55 entries from the assets table.","SELECT * FROM assets LIMIT 55"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 25 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 25 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 50 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 50"
"Retrieve the last 55 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 55"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 50 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 50 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 65 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 65"
"Retrieve the first 70 entries from the assets table.","SELECT * FROM assets LIMIT 70"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 30 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 30 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 55 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 55"
"Retrieve the last 60 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 60"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 55 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 55 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 70 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 70"
"Retrieve the first 65 entries from the assets table.","SELECT * FROM assets LIMIT 65"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 35 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 35 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 60 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 60"
"Retrieve the last 65 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 65"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 60 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 60 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 75 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 75"
"Retrieve the first 80 entries from the assets table.","SELECT * FROM assets LIMIT 80"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 40 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 40 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 65 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 65"
"Retrieve the last 70 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 70"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 65 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 65 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_TIMESTAMP"
"Select the records from the pharmacies table where the activated_by date is equal to the current timestamp.","SELECT * FROM pharmacies WHERE activated_by = CURRENT_TIMESTAMP"
"Fetch the last 80 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 80"
"Retrieve the first 75 entries from the assets table.","SELECT * FROM assets LIMIT 75"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 45 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 45 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 70 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 70"
"Retrieve the last 75 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 75"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 70 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 70 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 85 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 85"
"Retrieve the first 90 entries from the assets table.","SELECT * FROM assets LIMIT 90"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 50 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 50 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 75 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 75"
"Retrieve the last 80 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 80"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 75 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 75 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 90 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 90"
"Retrieve the first 85 entries from the assets table.","SELECT * FROM assets LIMIT 85"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 55 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 55 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 80 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 80"
"Retrieve the last 85 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 85"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 80 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 80 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 95 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 95"
"Retrieve the first 100 entries from the assets table.","SELECT * FROM assets LIMIT 100"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 60 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 60 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 85 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 85"
"Retrieve the last 90 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 90"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 85 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 85 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 100 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 100"
"Retrieve the first 95 entries from the assets table.","SELECT * FROM assets LIMIT 95"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 65 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 65 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 90 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 90"
"Retrieve the last 95 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 95"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 90 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 90 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 105 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 105"
"Retrieve the first 110 entries from the assets table.","SELECT * FROM assets LIMIT 110"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 70 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 70 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 95 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 95"
"Retrieve the last 100 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 100"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 95 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 95 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 110 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 110"
"Retrieve the first 105 entries from the assets table.","SELECT * FROM assets LIMIT 105"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 75 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 75 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 100 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 100"
"Retrieve the last 105 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 105"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 100 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 100 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 115 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 115"
"Retrieve the first 120 entries from the assets table.","SELECT * FROM assets LIMIT 120"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 80 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 80 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 105 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 105"
"Retrieve the last 110 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 110"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 105 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 105 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 120 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 120"
"Retrieve the first 115 entries from the assets table.","SELECT * FROM assets LIMIT 115"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 85 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 85 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 110 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 110"
"Retrieve the last 115 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 115"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 110 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 110 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 125 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 125"
"Retrieve the first 120 entries from the assets table.","SELECT * FROM assets LIMIT 120"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 90 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 90 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 115 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 115"
"Retrieve the last 120 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 120"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 115 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 115 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 130 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 130"
"Retrieve the first 125 entries from the assets table.","SELECT * FROM assets LIMIT 125"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 95 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 95 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 120 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 120"
"Retrieve the last 125 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 125"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 120 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 120 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 135 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 135"
"Retrieve the first 130 entries from the assets table.","SELECT * FROM assets LIMIT 130"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 100 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 100 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 125 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 125"
"Retrieve the last 130 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 130"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 125 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 125 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 140 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 140"
"Retrieve the first 135 entries from the assets table.","SELECT * FROM assets LIMIT 135"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 105 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 105 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 130 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 130"
"Retrieve the last 135 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 135"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 130 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 130 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 145 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 145"
"Retrieve the first 140 entries from the assets table.","SELECT * FROM assets LIMIT 140"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 110 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 110 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 135 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 135"
"Retrieve the last 140 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 140"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 135 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 135 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 150 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 150"
"Retrieve the first 145 entries from the assets table.","SELECT * FROM assets LIMIT 145"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 115 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 115 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 140 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 140"
"Retrieve the last 145 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 145"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 140 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 140 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 155 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 155"
"Retrieve the first 150 entries from the assets table.","SELECT * FROM assets LIMIT 150"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 120 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 120 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 145 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 145"
"Retrieve the last 150 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 150"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 145 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 145 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 160 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 160"
"Retrieve the first 155 entries from the assets table.","SELECT * FROM assets LIMIT 155"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 125 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 125 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 150 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 150"
"Retrieve the last 155 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 155"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 150 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 150 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 165 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 165"
"Retrieve the first 160 entries from the assets table.","SELECT * FROM assets LIMIT 160"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 130 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 130 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 155 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 155"
"Retrieve the last 160 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 160"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 155 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 155 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 170 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 170"
"Retrieve the first 165 entries from the assets table.","SELECT * FROM assets LIMIT 165"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 135 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 135 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 160 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 160"
"Retrieve the last 165 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 165"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 160 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 160 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 175 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 175"
"Retrieve the first 170 entries from the assets table.","SELECT * FROM assets LIMIT 170"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 140 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 140 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 165 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 165"
"Retrieve the last 170 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 170"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 165 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 165 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 180 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 180"
"Retrieve the first 175 entries from the assets table.","SELECT * FROM assets LIMIT 175"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 145 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 145 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 170 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 170"
"Retrieve the last 175 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 175"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 170 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 170 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 185 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 185"
"Retrieve the first 180 entries from the assets table.","SELECT * FROM assets LIMIT 180"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 150 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 150 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 175 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 175"
"Retrieve the last 180 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 180"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 175 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 175 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 190 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 190"
"Retrieve the first 185 entries from the assets table.","SELECT * FROM assets LIMIT 185"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 155 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 155 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 180 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 180"
"Retrieve the last 185 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 185"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 180 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 180 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 195 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 195"
"Retrieve the first 190 entries from the assets table.","SELECT * FROM assets LIMIT 190"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 160 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 160 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 185 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 185"
"Retrieve the last 190 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 190"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 185 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 185 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 200 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 200"
"Retrieve the first 195 entries from the assets table.","SELECT * FROM assets LIMIT 195"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 165 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 165 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 190 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 190"
"Retrieve the last 195 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 195"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 190 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 190 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 2 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 2"
"Retrieve the first 10 entries from the assets table.","SELECT * FROM assets LIMIT 10"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 2 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 2 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 2 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 2"
"Retrieve the last 10 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 10"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 2 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 2 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 5 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 5"
"Retrieve the first 20 entries from the assets table.","SELECT * FROM assets LIMIT 20"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 5 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 5 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 5 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 5"
"Retrieve the last 20 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 20"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 5 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 5 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 15 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 15"
"Retrieve the first 5 entries from the assets table.","SELECT * FROM assets LIMIT 5"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 15 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 15 DAY"
"Fetch the records from the users table with the current date as the updated_at value.","SELECT * FROM users WHERE updated_at = CURDATE()"
"Retrieve the data from the organizations table with trial_ends_at greater than the current date.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the first 5 entries from the staff_directory table.","SELECT * FROM staff_directory LIMIT 5"
"Retrieve the last 20 records from the assets table.","SELECT * FROM assets ORDER BY id DESC LIMIT 20"
"Select the data from the hazards table created on '2023-06-25'.","SELECT * FROM hazards WHERE created_at = '2023-06-25'"
"Retrieve the data from the events table for the last 5 days.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 5 DAY"
"Fetch the records from the users table with the updated_at value as the current timestamp.","SELECT * FROM users WHERE updated_at = CURRENT_TIMESTAMP"
"Retrieve the data from the organizations table where trial_ends_at is greater than the current timestamp.","SELECT * FROM organizations WHERE trial_ends_at > CURDATE()"
"Select the records from the pharmacies table where the activated_by date is equal to the current date.","SELECT * FROM pharmacies WHERE activated_by = CURDATE()"
"Fetch the last 5 records from the staff_directory table.","SELECT * FROM staff_directory ORDER BY id DESC LIMIT 5"
"Retrieve the first 20 entries from the assets table.","SELECT * FROM assets LIMIT 20"
"Select the data from the hazards table created between '2023-06-21' and '2023-06-25'.","SELECT * FROM hazards WHERE created_at BETWEEN '2023-06-21' AND '2023-06-25'"
"Retrieve the last 5 days' data from the events table.","SELECT * FROM events WHERE date_created >= CURDATE() - INTERVAL 5 DAY"
"Retrieve the full_name and pharmacies_id from the staff_directory and pharmacies tables where user_id matches and is_active is true.","SELECT staff_directory.full_name, staff_directory.pharmacies_id FROM staff_directory JOIN pharmacies ON staff_directory.user_id = pharmacies.user_id WHERE staff_directory.is_active = TRUE"
"Fetch the active and asset_type_id from the assets and asset_items tables where asset_items_id matches and active is true.","SELECT assets.active, assets.asset_type_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'fire'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%fire%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and facility_id is not null.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.facility_id IS NOT NULL"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-06-30' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-06-30 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is true.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = TRUE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is false.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = FALSE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is greater than 100.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id > 100"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is false.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = FALSE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'toxic'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%toxic%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 50.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 50"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-01' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-01 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is 'admin'.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type = 'admin'"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id and sf_id is not null.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id WHERE organizations.sf_id IS NOT NULL"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is false.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = FALSE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is true.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = TRUE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is null.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NULL"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is less than 200.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id < 200"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is true.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'explosive'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%explosive%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 50.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 50"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-01' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-01 00:00:00'"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null and is_open is true.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL AND events.is_open = TRUE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is true.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = TRUE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is false.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = FALSE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Clinic' and id is greater than 150.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Clinic%' AND organizations.id > 150"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is false.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = FALSE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'chemical'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%chemical%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 100.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 100"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-05' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-05 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is 'staff'.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type = 'staff'"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id and sf_id is null.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id WHERE organizations.sf_id IS NULL"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null and is_open is false.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL AND events.is_open = FALSE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is false.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = FALSE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is true.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = TRUE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created < date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created < event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Center' and id is less than 250.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Center%' AND organizations.id < 250"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is true.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'nuclear'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%nuclear%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 100.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 100"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-05' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-05 00:00:00'"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null and is_open is true.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL AND events.is_open = TRUE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is true.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = TRUE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is false.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = FALSE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created > date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created > event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Medical' and id is greater than 200.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Medical%' AND organizations.id > 200"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is false.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = FALSE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'radiation'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%radiation%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 150.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 150"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-10' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-10 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is not 'admin'.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type <> 'admin'"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id and sf_id is not null.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id WHERE organizations.sf_id IS NOT NULL"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null and is_open is false.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL AND events.is_open = FALSE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is false.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = FALSE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is true.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = TRUE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created < date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created < event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is less than 300.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id < 300"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is true.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'biological'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%biological%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 150.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 150"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-10' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-10 00:00:00'"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null and is_open is true.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL AND events.is_open = TRUE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is true.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = TRUE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is false.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = FALSE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created > date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created > event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 250.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 250"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is false.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = FALSE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'toxic'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%toxic%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 200.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 200"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-15' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-15 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is not 'staff'.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type <> 'staff'"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id and sf_id is null.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id WHERE organizations.sf_id IS NULL"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null and is_open is false.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL AND events.is_open = FALSE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is false.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = FALSE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is true.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = TRUE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created < date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created < event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Clinic' and id is less than 300.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Clinic%' AND organizations.id < 300"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is true.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'explosive'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%explosive%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 200.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 200"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-15' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-15 00:00:00'"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null and is_open is true.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL AND events.is_open = TRUE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is true.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = TRUE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is false.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = FALSE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created > date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created > event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Medical' and id is greater than 250.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Medical%' AND organizations.id > 250"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is false.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = FALSE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'radiation'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%radiation%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 250.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 250"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-20' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-20 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is not 'admin'.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type <> 'admin'"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id and sf_id is not null.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id WHERE organizations.sf_id IS NOT NULL"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null and is_open is false.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL AND events.is_open = FALSE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is false.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = FALSE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is true.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = TRUE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created < date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created < event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is less than 350.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id < 350"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is true.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'biological'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%biological%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 250.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 250"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-20' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-20 00:00:00'"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null and is_open is true.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL AND events.is_open = TRUE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is true.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = TRUE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is false.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = FALSE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created > date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created > event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 300.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 300"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is false.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = FALSE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'toxic'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%toxic%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 300.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 300"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-25' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-25 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is not 'admin'.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type <> 'admin'"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id and sf_id is not null.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id WHERE organizations.sf_id IS NOT NULL"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null and is_open is false.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL AND events.is_open = FALSE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is false.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = FALSE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is true.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = TRUE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created < date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created < event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is less than 400.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id < 400"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is true.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'radiation'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%radiation%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 300.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 300"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-25' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-25 00:00:00'"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null and is_open is true.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL AND events.is_open = TRUE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is true.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = TRUE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is false.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = FALSE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created > date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created > event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 350.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 350"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is false.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = FALSE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'toxic'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%toxic%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 350.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 350"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-07-30' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-07-30 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is not 'admin'.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type <> 'admin'"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id and sf_id is not null.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id WHERE organizations.sf_id IS NOT NULL"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null and is_open is false.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL AND events.is_open = FALSE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is false.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = FALSE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is true.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = TRUE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created < date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created < event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Clinic' and id is less than 450.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Clinic%' AND organizations.id < 450"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is true.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'explosive'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%explosive%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 350.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 350"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-07-30' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-07-30 00:00:00'"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null and is_open is true.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL AND events.is_open = TRUE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is true.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = TRUE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is false.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = FALSE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created > date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created > event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Medical' and id is greater than 350.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Medical%' AND organizations.id > 350"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is false.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = FALSE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'radiation'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%radiation%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 450.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 450"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-08-01' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-08-01 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is not 'admin'.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type <> 'admin'"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id and sf_id is not null.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id WHERE organizations.sf_id IS NOT NULL"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null and is_open is false.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL AND events.is_open = FALSE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is false.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = FALSE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is true.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = TRUE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created < date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created < event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 400.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 400"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is false.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = FALSE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'toxic'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%toxic%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is less than 400.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id < 400"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is less than '2023-08-01' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date < '2023-08-01 00:00:00'"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is not null and is_open is true.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NOT NULL AND events.is_open = TRUE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is true.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = TRUE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is false.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = FALSE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created > date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created > event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Hospital' and id is less than 500.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Hospital%' AND organizations.id < 500"
"Fetch the active and asset_items_id from the assets and asset_items tables where asset_items_id matches and active is true.","SELECT assets.active, assets.asset_items_id FROM assets JOIN asset_items ON assets.asset_items_id = asset_items.asset_items_id WHERE assets.active = TRUE"
"Select the name and updated_at from the hazards and pharmacies tables where pharmacies_id matches and name contains 'biological'.","SELECT hazards.name, pharmacies.updated_at FROM hazards JOIN pharmacies ON hazards.pharmacies_id = pharmacies.pharmacies_id WHERE hazards.name LIKE '%biological%'"
"Retrieve the name and forms_id from the event_staff_roles and formssettings_summarytools tables where forms_id matches and forms_id is greater than 400.","SELECT event_staff_roles.name, formssettings_summarytools.forms_id FROM event_staff_roles JOIN formssettings_summarytools ON event_staff_roles.forms_id = formssettings_summarytools.forms_id WHERE formssettings_summarytools.forms_id > 400"
"Fetch the events_id and user_id from the event_actions and events tables where events_id matches and action_date is greater than '2023-08-05' 00:00:00.","SELECT event_actions.events_id, event_actions.user_id FROM event_actions JOIN events ON event_actions.events_id = events.events_id WHERE event_actions.action_date > '2023-08-05 00:00:00'"
"Retrieve the id and official_user_id from the users and staff_directory tables where users official_user_id matches staff_directory official_user_id and type is not 'admin'.","SELECT users.id, users.official_user_id FROM users JOIN staff_directory ON users.official_user_id = staff_directory.official_user_id WHERE users.type <> 'admin'"
"Fetch the id and name from the organizations and pharmacies tables where organizations id matches pharmacies organizations_id and sf_id is not null.","SELECT organizations.id, organizations.name FROM organizations JOIN pharmacies ON organizations.id = pharmacies.organizations_id WHERE organizations.sf_id IS NOT NULL"
"Select the id and users_fullname from the events and staff_directory tables where events users_id matches staff_directory user_id and harmt is null and is_open is false.","SELECT events.id, staff_directory.users_fullname FROM events JOIN staff_directory ON events.users_id = staff_directory.user_id WHERE events.harmt IS NULL AND events.is_open = FALSE"
"Retrieve the profiles_id and active from the users and assets tables where users official_user_id matches assets serial_number and active is false.","SELECT users.profiles_id, assets.active FROM users JOIN assets ON users.official_user_id = assets.serial_number WHERE assets.active = FALSE"
"Fetch the user_id and is_active from the staff_directory and users tables where user_id matches official_user_id and is_active is true.","SELECT staff_directory.user_id, users.is_active FROM staff_directory JOIN users ON staff_directory.user_id = users.official_user_id WHERE users.is_active = TRUE"
"Select the users_id and date_created from the events and event_actions tables where events id matches event_actions events_id and date_created is not null and date_done is not null and date_created < date_done.","SELECT events.users_id, event_actions.date_created FROM events JOIN event_actions ON events.id = event_actions.events_id WHERE event_actions.date_created IS NOT NULL AND event_actions.date_done IS NOT NULL AND event_actions.date_created < event_actions.date_done"
"Retrieve the id and name from the organizations and hazards tables where organizations name contains 'Pharmacy' and id is greater than 450.","SELECT organizations.id, hazards.name FROM organizations JOIN hazards ON organizations.name LIKE '%Pharmacy%' AND organizations.id > 450";
Retrieve the ID for events created in the last week:,SELECT id FROM event WHERE created_at >= NOW() - INTERVAL 1 WEEK;
Retrieve the event type for events created in the last month:,SELECT event_type FROM event WHERE created_at >= NOW() - INTERVAL 1 MONTH;
Retrieve the updated timestamp and event status (is_open) for events created in the last year:,"SELECT updated_at, is_open FROM event WHERE created_at >= NOW() - INTERVAL 1 YEAR;"
Retrieve the facility ID and user ID for events created between two specific dates:,"SELECT facility_id, user_id FROM event WHERE created_at BETWEEN '2023-06-01' AND '2023-06-30';"
Retrieve the description for events created between two specific timestamps:,SELECT description FROM event WHERE created_at BETWEEN '2023-06-01 12:00:00' AND '2023-06-30 18:00:00';
Retrieve the closed timestamp and ID for events created in the last 7 days:,"SELECT closed_at, id FROM event WHERE created_at >= NOW() - INTERVAL 7 DAY;"
Retrieve all columns for events created in the last 30 days,SELECT * FROM event WHERE created_at >= NOW() - INTERVAL 30 DAY;
Retrieve the facility ID and user ID for events created on a specific day of the week:,"SELECT facility_id, user_id FROM event WHERE DAYOFWEEK(created_at) = 2; -- 2 represents Monday"
Retrieve the description for events created on a specific month of the year:,SELECT description FROM event WHERE MONTH(created_at) = 6; -- 6 represents June
Retrieve the event type for events created in the current year:,SELECT event_type FROM event WHERE YEAR(created_at) = YEAR(NOW());
Retrieve the updated timestamp and event status (is_open) for events created in the current month:,"SELECT updated_at, is_open FROM event WHERE YEAR(created_at) = YEAR(NOW()) AND MONTH(created_at) = MONTH(NOW());"
Retrieve the closed timestamp and ID for events created in the current week:,"SELECT closed_at, id FROM event WHERE YEARWEEK(created_at) = YEARWEEK(NOW());"
Retrieve all columns for events created in the current day:,SELECT * FROM event WHERE DATE(created_at) = CURDATE();
Retrieve the facility ID and user ID for events created in the current hour,"SELECT facility_id, user_id FROM event WHERE HOUR(created_at) = HOUR(NOW());"
Retrieve the description for events created in the current minute:,SELECT description FROM event WHERE MINUTE(created_at) = MINUTE(NOW());
Retrieve the event type for events created in the current second:,SELECT event_type FROM event WHERE SECOND(created_at) = SECOND(NOW());
Retrieve the updated timestamp and event status (is_open) for events created in the current microsecond:,"SELECT updated_at, is_open FROM event WHERE MICROSECOND(created_at) = MICROSECOND(NOW());"
Retrieve the closed timestamp and ID for events created in the current time zone:,"SELECT closed_at, id FROM event WHERE CONVERT_TZ(created_at, 'UTC', 'America/New_York') = NOW();"
Retrieve all columns for events created in the current year and month:,SELECT * FROM event WHERE YEAR(created_at) = YEAR(NOW()) AND MONTH(created_at) = MONTH(NOW());
Retrieve the facility ID and user ID for events created in the current day of the week,"SELECT facility_id, user_id FROM event WHERE DAYOFWEEK(created_at) = DAYOFWEEK(NOW());"
Retrieve the description for events created in the current month of the year,SELECT description FROM event WHERE MONTH(created_at) = MONTH(NOW());
Retrieve the event type for events created in the current hour of the day:,SELECT event_type FROM event WHERE HOUR(created_at) = HOUR(NOW());
Retrieve the updated timestamp and event status (is_open) for events created in the current minute of the hour:,"SELECT updated_at, is_open FROM event WHERE MINUTE(created_at) = MINUTE(NOW());"
Retrieve the closed timestamp and ID for events created in the current second of the minute:,"SELECT closed_at, id FROM event WHERE SECOND(created_at) = SECOND(NOW());"
Retrieve all columns for events created in the current microsecond of the second:,SELECT * FROM event WHERE MICROSECOND(created_at) = MICROSECOND(NOW());
Retrieve the facility ID and user ID for events created in the current time zone offset:,"SELECT facility_id, user_id FROM event WHERE CONVERT_TZ(created_at, 'UTC', @@session.time_zone) = NOW();"
"Retrieve the description for events created in the current year and month, sorted in ascending order of IDs:",SELECT description FROM event WHERE YEAR(created_at) = YEAR(NOW()) AND MONTH(created_at) = MONTH(NOW()) ORDER BY id ASC;
"Retrieve the event type for events created in the current day of the week, sorted in descending order of IDs:",SELECT event_type FROM event WHERE DAYOFWEEK(created_at) = DAYOFWEEK(NOW()) ORDER BY id DESC;
"Retrieve the updated timestamp and event status (is_open) for events created in the current hour of the day, sorted by facility ID:","SELECT updated_at, is_open FROM event WHERE HOUR(created_at) = HOUR(NOW()) ORDER BY facility_id;"
"Retrieve the closed timestamp and ID for events created in the current minute of the hour, sorted by user ID in descending order:","SELECT closed_at, id FROM event WHERE MINUTE(created_at) = MINUTE(NOW()) ORDER BY user_id DESC;"
"Retrieve all columns for events created in the current second of the minute, sorted by created timestamp in ascending order:",SELECT * FROM event WHERE SECOND(created_at) = SECOND(NOW()) ORDER BY created_at ASC;
"Retrieve the facility ID and user ID for events created in the current time zone offset, sorted by ID in descending order","SELECT facility_id, user_id FROM event WHERE CONVERT_TZ(created_at, 'UTC', @@session.time_zone) = NOW() ORDER BY id DESC;"
"Retrieve the description for events created in the current year and month, limited to 10 rows:",SELECT description FROM event WHERE YEAR(created_at) = YEAR(NOW()) AND MONTH(created_at) = MONTH(NOW()) LIMIT 10;
"Retrieve the event type for events created in the current day of the week, limited to 5 rows:",SELECT event_type FROM event WHERE DAYOFWEEK(created_at) = DAYOFWEEK(NOW()) LIMIT 5;
"Retrieve the updated timestamp and event status (is_open) for events created in the current hour of the day, limited to 3 rows:","SELECT updated_at, is_open FROM event WHERE HOUR(created_at) = HOUR(NOW()) LIMIT 3;"
"Retrieve the closed timestamp and ID for events created in the current minute of the hour, limited to 7 rows:","SELECT closed_at, id FROM event WHERE MINUTE(created_at) = MINUTE(NOW()) LIMIT 7;"
"Retrieve all columns for events created in the current second of the minute, limited to 12 rows:",SELECT * FROM event WHERE SECOND(created_at) = SECOND(NOW()) LIMIT 12;
"Retrieve the facility ID and user ID for events created in the current time zone offset, limited to 20 rows:","SELECT facility_id, user_id FROM event WHERE CONVERT_TZ(created_at, 'UTC', @@session.time_zone) = NOW() LIMIT 20;"
Retrieve the description for events created before a specific timestamp:,SELECT description FROM event WHERE created_at < '2023-06-01 00:00:00';
Retrieve the event type for events created after a specific timestamp:,SELECT event_type FROM event WHERE created_at > '2023-06-30 23:59:59';
"Retrieve all columns for events created between two specific timestamps, sorted in descending order of IDs:",SELECT * FROM event WHERE created_at BETWEEN '2023-06-01 00:00:00' AND '2023-06-30 23:59:59' ORDER BY id DESC;
Get the data from the log table between today's date and the previous week.,"SELECT *FROM logWHERE log_date BETWEEN DATEADD(DAY, -7, CAST(GETDATE() AS DATE)) AND CAST(GETDATE() AS DATE);"
Retrieve all records from the orders table within the last 2 months.,"SELECT *FROM ordersWHERE order_date >= DATEADD(MONTH, -2, GETDATE());"
I need the records from the events table where the timestamp is between 9 PM and 9:45 PM today.,"SELECT *FROM eventsWHERE timestamp >= CAST(GETDATE() AS DATE) + CAST('21:00:00' AS TIME)AND timestamp <= CAST(GETDATE() AS DATE) + CAST('21:45:00' AS TIME);"
Show me the entries from the messages table for the past 24 hours.,"SELECT *FROM messagesWHERE message_date >= DATEADD(HOUR, -24, GETDATE());"
Get the data from the sensor readings table between yesterday at 6 AM and today at 10 AM.,"SELECT *FROM sensor_readings WHERE reading_date >= DATEADD(HOUR, -24, CAST(GETDATE() AS DATE) + CAST('06:00:00' AS TIME))AND reading_date <= CAST(GETDATE() AS DATE) + CAST('10:00:00' AS TIME);"
Retrieve the total sales amount from the transactions table for the month of May 2023.,"SELECT SUM(amount) AS total_sales_amountFROM transactionsWHERE transaction_date >= '2023-05-01' AND transaction_date <= '2023-05-31;"
"Retrieve the count of customers from the customers table.","SELECT COUNT(*) AS customer_countFROM customers;"
Get the average rating from the reviews table.,"SELECT AVG(rating) AS average_rating FROM reviews;"
Retrieve the highest salary from the employees table.,"SELECT MAX(salary) AS highest_salaryFROM employees;"
Get the minimum price from the products table.,"SELECT MIN(price) AS minimum_price FROM products;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the distinct categories from the products table.,"SELECT DISTINCT category FROM products;"
Retrieve the average age of customers from the customers table.,"SELECT AVG(age) AS average_age FROM customers;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest order date from the orders table.,"SELECT MIN(order_date) AS earliest_order_date FROM orders;"
Retrieve the earliest timestamp from the log table.,"SELECT MAX(login_timestamp) AS latest_login_timestamp FROM users;"
Get the latest post date from the posts table.,"SELECT MAX(post_date) AS latest_post_datev FROM posts;"
Retrieve the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_soldFROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table.,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Retrieve the count of orders from the orders table.,"SELECT COUNT(*) AS order_count FROM orders;"
Get the average price from the products table,"SELECT AVG(price) AS average_price FROM products;"
Retrieve the highest sales amount from the transactions table,"SELECT MAX(amount) AS highest_sales_amount FROM transactions;"
Get the minimum rating from the reviews table.,"SELECT MIN(rating) AS minimum_rating FROM reviews;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Get the distinct countries from the customers table.,"SELECT DISTINCT country FROM customers;"
Retrieve the average duration of tasks from the tasks table.,"SELECT AVG(duration) AS average_duration FROM tasks;"
Retrieve the earliest login timestamp from the users table.,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_scor FROM exams;"
Get the minimum quantity available from the inventory table.,"SELECT MIN(quantity) AS minimum_quantity FROM inventory;"
Retrieve the total expenses from the expenses table.,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific product category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_dateFROM comments;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_soldFROM salesWHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Retrieve the count of products from the products table.,"SELECT COUNT(*) AS product_count FROM products;"
Get the average quantity from the inventory table.,"SELECT AVG(quantity) AS average_quantity FROM inventory;"
Retrieve the highest revenue from the sales table.,"SELECT MAX(revenue) AS highest_revenue FROM sales;"
Get the minimum price from the products table.,"SELECT MIN(price) AS minimum_price FROM products;"
Retrieve the total cost from the expenses table.,"SELECT SUM(cost) AS total_cost FROM expenses;"
Get the distinct cities from the customers table.,"SELECT DISTINCT city FROM customers;"
Retrieve the average duration of projects from the projects table.,"SELECT AVG(duration) AS average_duration FROM projects;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest login timestamp from the users table.,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Get the total number of likes for a specific post from the likes table.,"SELECT COUNT(*) AS total_likes FROM likes WHERE post_id = <specific_post_id>;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_score FROM exams;"
Get the minimum quantity available from the inventory table.,"SELECT MIN(quantity) AS minimum_quantity FROM inventory;"
Retrieve the total expenses from the expenses table,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table.,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_date FROM comments;"
Retrieve the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table.,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Retrieve the highest sales amount from the transactions table.,"SELECT MAX(amount) AS highest_sales_amount FROM transactions;"
Get the minimum rating from the reviews table.,"SELECT MIN(rating) AS minimum_rating FROM reviews;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Get the distinct countries from the customers table.,"SELECT DISTINCT country FROM customers;"
Retrieve the average duration of tasks from the tasks table.,"SELECT AVG(duration) AS average_duration FROM tasks;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest login timestamp from the users table.,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Get the total number of comments for a specific post from the comments table.,"SELECT COUNT(*) AS total_comments FROM comments WHERE post_id = <specific_post_id>;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_score FROM exams;"
Retrieve the total expenses from the expenses table.,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table.,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_date FROM comments;"
Retrieve the average price from the products table,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the average price from the products table.,"SELECT AVG(price) AS average_priceFROM products;"
Retrieve the count of customers from the customers table.,"SELECT COUNT(*) AS customer_count FROM customers;"
Get the average rating from the reviews table.,"SELECT AVG(rating) AS average_rating FROM reviews;"
Retrieve the highest sales amount from the transactions table.,"SELECT MAX(amount) AS highest_sales_amount FROM transactions;"
Get the minimum price from the products table.,"SELECT MIN(price) AS minimum_price FROM products;"
Retrieve the total cost from the expenses table.,"SELECT SUM(cost) AS total_cost FROM expenses;"
Get the distinct cities from the customers table,"SELECT DISTINCT city FROM customers;"
Retrieve the average duration of tasks from the tasks table.,"SELECT AVG(duration) AS average_duration FROM tasks;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest login timestamp from the users table.,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Get the total number of likes for a specific post from the likes table.,"SELECT COUNT(*) AS total_likes FROM likes WHERE post_id = <specific_post_id>;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_score FROM exams;"
Get the minimum quantity available from the inventory table.,"SELECT MIN(quantity) AS minimum_quantity FROM inventory;"
Retrieve the total expenses from the expenses table.,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table.,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_date FROM comments;"
Retrieve the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table.,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the average price from the products table,"SELECT AVG(price) AS average_price FROM products;"
Retrieve the highest sales amount from the transactions table.,"SELECT MAX(amount) AS highest_sales_amount FROM transactions;"
Get the minimum rating from the reviews table.,"SELECT MIN(rating) AS minimum_rating FROM reviews;"
Retrieve the total profit from the sales table.,"SELECT SUM(profit) AS total_profit FROM sales;"
Get the distinct countries from the customers table,"SELECT DISTINCT country FROM customers;"
Retrieve the average duration of tasks from the tasks table.,"SELECT AVG(duration) AS average_duration FROM tasks;"
Get the total quantity sold for a specific product from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id>;"
Retrieve the earliest login timestamp from the users table,"SELECT MIN(login_timestamp) AS earliest_login_timestamp FROM users;"
Get the latest order date from the orders table.,"SELECT MAX(order_date) AS latest_order_date FROM orders;"
Retrieve the average age of employees from the employees table.,"SELECT AVG(age) AS average_age FROM employees;"
Get the total number of comments for a specific post from the comments table,"SELECT COUNT(*) AS total_comments FROM comments WHERE post_id = <specific_post_id>;"
Retrieve the highest score from the exams table.,"SELECT MAX(score) AS highest_score FROM exams;"
Get the minimum quantity available from the inventory table.,"SELECT MIN(quantity) AS minimum_quantity FROM inventory;"
Retrieve the total expenses from the expenses table.,"SELECT SUM(amount) AS total_expenses FROM expenses;"
Get the distinct states from the customers table.,"SELECT DISTINCT state FROM customers;"
Retrieve the average salary of employees from the employees table.,"SELECT AVG(salary) AS average_salary FROM employees;"
Get the total revenue for a specific category from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales WHERE category = <specific_category>;"
Retrieve the earliest timestamp from the log table.,"SELECT MIN(timestamp) AS earliest_timestamp FROM log;"
Get the latest comment date from the comments table.,"SELECT MAX(comment_date) AS latest_comment_date FROM comments;"
Retrieve the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Get the total quantity of a specific product sold by a specific employee from the sales table.,"SELECT SUM(quantity) AS total_quantity_sold FROM sales WHERE product_id = <specific_product_id> AND employee_id = <specific_employee_id>;"
Retrieve the highest rating from the reviews table.,"SELECT MAX(rating) AS highest_rating FROM reviews;"
Get the minimum age from the customers table.,"SELECT MIN(age) AS minimum_age FROM customers;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Get the average price from the products table.,"SELECT AVG(price) AS average_price FROM products;"
Retrieve the count of orders placed by each customer from the orders table.,"SELECT customer_id, COUNT(*) AS order_count FROM orders GROUP BY customer_id;"
Get the average duration of tasks for each project from the tasks table.,"SELECT project_id, AVG(duration) AS average_duration FROM tasks GROUP BY project_id;"
Retrieve the total revenue generated by each category from the sales table.,"SELECT category, SUM(revenue) AS total_revenue FROM sales GROUP BY category;"
Get the minimum and maximum age of customers from the customers table,"SELECT MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM customers;"
Retrieve the total profit for each year from the sales table,"SELECT YEAR(sale_date) AS sales_year, SUM(profit) AS total_profit FROM sales GROUP BY YEAR(sale_date);"
Get the average price of products in each category from the products table,"SELECT category, AVG(price) AS average_price FROM products GROUP BY category;"
Retrieve the count of logins made by each user from the login table.,"SELECT user_id, COUNT(*) AS login_count FROM login GROUP BY user_id;"
Get the minimum and maximum rating for each product from the reviews table,"SELECT product_id, MIN(rating) AS minimum_rating, MAX(rating) AS maximum_rating FROM reviews GROUP BY product_id;"
Retrieve the total quantity sold for each product from the sales table,"SELECT product_id, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id;"
Get the average salary for each department from the employees table.,"SELECT department, AVG(salary) AS average_salary FROM employees GROUP BY department;"
Retrieve the count of likes received for each post from the likes table.,"SELECT post_id, COUNT(*) AS like_count FROM likes GROUP BY post_id;"
Get the minimum and maximum price for each category from the products table.,"SELECT category, MIN(price) AS minimum_price, MAX(price) AS maximum_price FROM products GROUP BY category;"
Retrieve the total revenue for each month from the sales table.,"SELECT YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(revenue) AS total_revenue FROM sales GROUP BY YEAR(sale_date), MONTH(sale_date);"
Get the average rating for each product from the reviews table.,"SELECT product_id, AVG(rating) AS average_rating FROM reviews GROUP BY product_id;"
Retrieve the count of comments posted on each post from the comments table.,"SELECT post_id, COUNT(*) AS comment_count FROM comments GROUP BY post_id;"
Retrieve the total revenue from the sales table.,"SELECT SUM(revenue) AS total_revenue FROM sales;"
Retrieve the count of comments posted on each post from the comments table.,"SELECT post_id, COUNT(*) AS comment_count FROM comments GROUP BY post_id;"
Get the minimum and maximum duration of tasks for each project from the tasks table.,"SELECT project_id, MIN(duration) AS minimum_duration, MAX(duration) AS maximum_duration FROM tasks GROUP BY project_id;"
Retrieve the total revenue for each category and year from the sales table.,"SELECT category, YEAR(sale_date) AS sales_year, SUM(revenue) AS total_revenue FROM sales GROUP BY category, YEAR(sale_date);"
Get the average salary for each job title from the employees table.,"SELECT job_title, AVG(salary) AS average_salary FROM employees GROUP BY job_title;"
Retrieve the count of messages sent by each user from the messages table.,"SELECT sender_id, COUNT(*) AS message_count FROM messages GROUP BY sender_id;"
Get the minimum and maximum age of employees for each department from the employees table.,"SELECT department, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM employees GROUP BY department;"
Retrieve the total quantity sold for each product and month from the sales table.,"SELECT product_id, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id, YEAR(sale_date), MONTH(sale_date);"
Get the average rating for each product and category from the reviews table.,"SELECT product_id, category, AVG(rating) AS average_rating FROM reviews GROUP BY product_id, category;"
Retrieve the count of orders placed by each customer and year from the orders table.,"SELECT customer_id, YEAR(order_date) AS order_year, COUNT(*) AS order_count FROM orders GROUP BY customer_id, YEAR(order_date);"
Get the minimum and maximum price for each brand from the products table.,"SELECT brand, MIN(price) AS minimum_price, MAX(price) AS maximum_price FROM products GROUP BY brand;"
Retrieve the total revenue for each category and month from the sales table.,"SELECT category, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(revenue) AS total_revenue FROM sales GROUP BY category, YEAR(sale_date), MONTH(sale_date);"
Get the average salary for each department and gender from the employees table.,"SELECT department, gender, AVG(salary) AS average_salary FROM employees GROUP BY department, gender;"
Retrieve the count of likes received for each post and month from the likes table.,"SELECT post_id, YEAR(like_date) AS like_year, MONTH(like_date) AS like_month, COUNT(*) AS like_count FROM likes GROUP BY post_id, YEAR(like_date), MONTH(like_date);"
Get the minimum and maximum rating for each product and category from the reviews table.,"SELECT product_id, category, MIN(rating) AS minimum_rating, MAX(rating) AS maximum_rating FROM reviews GROUP BY product_id, category;"
Retrieve the total quantity sold for each product and year from the sales table.,"SELECT product_id, YEAR(sale_date) AS sales_year, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id, YEAR(sale_date);"
Get the average duration of tasks for each project and employee from the tasks table.,"SELECT project_id, employee_id, AVG(duration) AS average_duration FROM tasks GROUP BY project_id, employee_id;"
Retrieve the count of logins made by each user and month from the login table.,"SELECT user_id, YEAR(login_timestamp) AS login_year, MONTH(login_timestamp) AS login_month, COUNT(*) AS login_count FROM login GROUP BY user_id, YEAR(login_timestamp), MONTH(login_timestamp);"
Get the minimum and maximum price for each category and brand from the products table.,"SELECT category, brand, MIN(price) AS minimum_price, MAX(price) AS maximum_price FROM products GROUP BY category, brand;"
Retrieve the total revenue for each month and year from the sales table.,"SELECT YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(revenue) AS total_revenue FROM sales GROUP BY YEAR(sale_date), MONTH(sale_date);"
Get the average rating for each product and brand from the reviews table.,"SELECT product_id, brand, AVG(rating) AS average_rating FROM reviews GROUP BY product_id, brand;"
Retrieve the count of comments posted on each post and month from the comments table,"SELECT post_id, YEAR(comment_date) AS comment_year, MONTH(comment_date) AS comment_month, COUNT(*) AS comment_count FROM comments GROUP BY post_id, YEAR(comment_date), MONTH(comment_date);"
Get the minimum and maximum duration of tasks for each project and employee from the tasks table.,"SELECT project_id, employee_id, MIN(duration) AS minimum_duration, MAX(duration) AS maximum_duration FROM tasks GROUP BY project_id, employee_id;"
Retrieve the total revenue for each category and year from the sales table.,"SELECT category, YEAR(sale_date) AS sales_year, SUM(revenue) AS total_revenue FROM sales GROUP BY category, YEAR(sale_date);"
Get the average salary for each department and job title from the employees table.,"SELECT department, job_title, AVG(salary) AS average_salary FROM employees GROUP BY department, job_title;"
Retrieve the count of messages sent by each user and month from the messages table,"SELECT sender_id, YEAR(message_date) AS message_year, MONTH(message_date) AS message_month, COUNT(*) AS message_count FROM messages GROUP BY sender_id, YEAR(message_date), MONTH(message_date);"
Get the minimum and maximum age of employees for each department and gender from the employees table.,"SELECT department, gender, MIN(age) AS minimum_age, MAX(age) AS maximum_age FROM employees GROUP BY department, gender;"
Retrieve the total quantity sold for each product and month and year from the sales table,"SELECT product_id, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id, YEAR(sale_date), MONTH(sale_date);"
Get the average rating for each product and category and brand from the reviews table.,"SELECT product_id, category, brand, AVG(rating) AS average_rating FROM reviews GROUP BY product_id, category, brand;"
Retrieve the count of orders placed by each customer and year and month from the orders table.,"SELECT customer_id, YEAR(order_date) AS order_year, MONTH(order_date) AS order_month, COUNT(*) AS order_count FROM orders GROUP BY customer_id, YEAR(order_date), MONTH(order_date);"
Get the minimum and maximum price for each brand and category from the products table.,"SELECT brand, category, MIN(price) AS minimum_price, MAX(price) AS maximum_price FROM products GROUP BY brand, category;"
Retrieve the total revenue for each category and month and year from the sales table.,"SELECT category, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(revenue) AS total_revenue FROM sales GROUP BY category, YEAR(sale_date), MONTH(sale_date);"
Get the average salary for each department and gender and job title from the employees table.,"SELECT department, gender, job_title, AVG(salary) AS average_salary FROM employees GROUP BY department, gender, job_title;"
Retrieve the count of likes received for each post and month and year from the likes table.,"SELECT post_id, YEAR(like_date) AS like_year, MONTH(like_date) AS like_month, COUNT(*) AS like_count FROM likes GROUP BY post_id, YEAR(like_date), MONTH(like_date);"
Get the minimum and maximum rating for each product and category and brand from the reviews table.,"SELECT product_id, category, brand, MIN(rating) AS minimum_rating, MAX(rating) AS maximum_rating FROM reviews GROUP BY product_id, category, brand;"
Retrieve the total quantity sold for each product and year and month from the sales table.,"SELECT product_id, YEAR(sale_date) AS sales_year, MONTH(sale_date) AS sales_month, SUM(quantity) AS total_quantity_sold FROM sales GROUP BY product_id, YEAR(sale_date), MONTH(sale_date);"
Get the average duration of tasks for each project and employee and category from the tasks table,"SELECT project_id, employee_id, category, AVG(duration) AS average_duration FROM tasks GROUP BY project_id, employee_id, category;"
"Retrieve all events with harmt greater than 50 and is_open set to TRUE","SELECT * FROM events WHERE harmt > 50 AND is_open = TRUE;"
"Find all users with active status and type 'Manager'","SELECT * FROM users WHERE active = TRUE AND type = 'Manager';"
"Get the facilities with organization_id 'Org123' and is_active set to FALSE","SELECT * FROM facilities WHERE organization_id = 'Org123' AND is_active = FALSE;"
"Retrieve the assets with asset_type_id 'AT006' and pharmacies_id 'Pharma3'","SELECT * FROM assets WHERE asset_type_id = 'AT006' AND pharmacies_id = 'Pharma3';"
"Fetch the records from the staff_directory table where the full_name contains 'John'","SELECT * FROM staff_directory WHERE full_name LIKE '%John%';"
"List all assets with an active status and updated in the last 7 days","SELECT * FROM assets WHERE active = TRUE AND updated_at >= CURRENT_DATE - INTERVAL '7 days';"
"Get the hazards with a name starting with 'Fire'","SELECT * FROM hazards WHERE name LIKE 'Fire%';"
"Retrieve events created by user_id '123' and updated after '2023-01-01'","SELECT * FROM events WHERE user_id = '123' AND updated_at > '2023-01-01';"
"Find the staff members with fixed status and working in organization_id 'Org456'","SELECT * FROM staff_directory WHERE fixed = TRUE AND org_id = 'Org456';"
"List all assets of type 'Computer' and associated with organization_id 'Org789'","SELECT * FROM assets WHERE asset_type_id = (SELECT id FROM asset_types WHERE name = 'Computer') AND pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE organizations_id = 'Org789');"
"Retrieve the event staff roles ordered by name in ascending order","SELECT * FROM event_staff_roles ORDER BY name ASC;"
"Get the assets with serial number 'SN123' and active status","SELECT * FROM assets WHERE serial_number = 'SN123' AND active = TRUE;"
"Fetch all events where the user's full name contains 'Smith' and harmt is greater than 20","SELECT * FROM events WHERE users_fullname LIKE '%Smith%' AND harmt > 20;"
"List the users with profiles_id 'Profile123' and organization_id 'Org987'","SELECT * FROM users WHERE profiles_id = 'Profile123' AND organization_id = 'Org987';"
"Retrieve all organizations with trial_ends_at in the future","SELECT * FROM organizations WHERE trial_ends_at > CURRENT_DATE;"
"Find the pharmacies that were created before '2023-03-01' and enabled after '2023-02-15'","SELECT * FROM pharmacies WHERE created_at < '2023-03-01' AND activate_at > '2023-02-15';"
"Get the event actions for the events with IDs '123', '456', and '789'","SELECT * FROM event_actions WHERE events_id IN ('123', '456', '789');"
"Fetch the hazards with descriptions containing the word 'chemical'","SELECT * FROM hazards WHERE description LIKE '%chemical%';"
"Retrieve the staff members with locum_full_name not equal to 'NULL'","SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;"
"List the assets that were updated between '2023-05-01' and '2023-06-30'","SELECT * FROM assets WHERE updated_at BETWEEN '2023-05-01' AND '2023-06-30';"
"Get the event staff roles with order greater than or equal to 3","SELECT * FROM event_staff_roles WHERE order >= 3;"
"Fetch the events with harmt equal to 0 and prescribers_id is NULL","SELECT * FROM events WHERE harmt = 0 AND prescribers_id IS NULL;"
"Retrieve all organizations with names starting with 'ABC' and created after '2023-01-01'","SELECT * FROM organizations WHERE name LIKE 'ABC%' AND created_at > '2023-01-01';"
"Find the pharmacies that were disabled in the last 30 days","SELECT * FROM pharmacies WHERE date_disabled >= CURRENT_DATE - INTERVAL '30 days';"
"List the event actions for the events created by user_id '789' and updated after '2023-02-28'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789' AND updated_at > '2023-02-28');"
"Get the assets with asset_type_id 'AT001' and pharmacies_id 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT001' AND pharmacies_id = 'Pharma1';"
"Fetch the events that were created in the last 7 days and harmt is greater than or equal to 10","SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '7 days' AND harmt >= 10;"
"Retrieve the full names of all staff members in alphabetical order","SELECT full_name FROM staff_directory ORDER BY full_name ASC;"
"List all assets associated with pharmacies located in the city 'New York'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE city = 'New York');"
"Get the event staff roles with forms_id equal to 5 and facility_id equal to 10","SELECT * FROM event_staff_roles WHERE forms_id = 5 AND facility_id = 10;"
"Fetch the events with harmt greater than 50 and date_closed is NULL","SELECT * FROM events WHERE harmt > 50 AND date_closed IS NULL;"
"Retrieve the organizations that were updated after '2023-03-15' and have trial_ends_at in the future","SELECT * FROM organizations WHERE updated_at > '2023-03-15' AND trial_ends_at > CURRENT_DATE;"
"Find the staff members who are active and have the role_id 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id = 'Role123';"
"List the assets with asset_type_id 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created in the last 30 days","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= CURRENT_DATE - INTERVAL '30 days';"
"Fetch the events with harmt greater than or equal to 10 and prescribers_id is not NULL","SELECT * FROM events WHERE harmt >= 10 AND prescribers_id IS NOT NULL;"
"Retrieve the full names of staff members whose official_user_id starts with 'USR'","SELECT full_name FROM staff_directory WHERE official_user_id LIKE 'USR%';"
"List all assets associated with pharmacies created after '2023-04-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-04-01' AND updated_at < '2023-06-30');"
"Get the event staff roles with names containing the word 'supervisor'","SELECT * FROM event_staff_roles WHERE name LIKE '%supervisor%';"
"Fetch the events with harmt less than 10 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 10 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have the trial_ends_at set to '2023-12-31' and are located in the city 'London'","SELECT * FROM organizations WHERE trial_ends_at = '2023-12-31' AND city = 'London';"
"Find the staff members who are active and have the roles_id of 'Role456' or 'Role789'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id IN ('Role456', 'Role789');"
"List the assets with asset_type_id 'AT004' and serial_number is not NULL","SELECT * FROM assets WHERE asset_type_id = 'AT004' AND serial_number IS NOT NULL;"
"Get the hazards with descriptions starting with 'Potential' and updated in the last 7 days","SELECT * FROM hazards WHERE description LIKE 'Potential%' AND updated_at >= CURRENT_DATE - INTERVAL '7 days';"
"Fetch the events with harmt between 20 and 50 and is_open set to TRUE","SELECT * FROM events WHERE harmt BETWEEN 20 AND 50 AND is_open = TRUE;"
"Retrieve the full names of all staff members whose updated_at is equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at = '2023-01-01';"
"List all assets associated with pharmacies enabled before '2023-02-01' and disabled after '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at < '2023-02-01' AND disabled_at > '2023-06-30');"
"Get the event staff roles with forms_id not equal to 1 or 2","SELECT * FROM event_staff_roles WHERE forms_id NOT IN (1, 2);"
"Fetch the events with harmt equal to 0 and reporters_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND reporters_id IS NOT NULL;"
"Retrieve the organizations that were created after '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at > '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated by 'User123'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_by = 'User123';"
"List the event actions for the events created by user_id '456' and action_date between '2023-02-01' and '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '456') AND action_date BETWEEN '2023-02-01' AND '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma2'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma2';"
"Fetch the hazards with descriptions containing the word 'environment' and created before '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at < '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is FALSE","SELECT full_name FROM staff_directory WHERE fixed = FALSE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
"Fetch the events with harmt equal to 0 and misuses_id is not NULL","SELECT * FROM events WHERE harmt = 0 AND misuses_id IS NOT NULL;"
"Retrieve the organizations that were created before '2023-01-01' and have trial_ends_at set to NULL","SELECT * FROM organizations WHERE created_at < '2023-01-01' AND trial_ends_at IS NULL;"
"Find the pharmacies with names starting with 'ABC' and activated after '2023-02-15'","SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_at > '2023-02-15';"
"List the event actions for the events created by user_id '789' and action_date after '2023-03-31'","SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789') AND action_date > '2023-03-31';"
"Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma1'","SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma1';"
"Fetch the hazards with descriptions containing the word 'environment' and created after '2023-02-15'","SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at > '2023-02-15';"
"Retrieve the full names of all staff members whose fixed status is not TRUE","SELECT full_name FROM staff_directory WHERE fixed <> TRUE;"
"List all assets associated with pharmacies created after '2023-05-01' and updated before '2023-06-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-05-01' AND updated_at < '2023-06-30');"
"Get the hazards with descriptions ending with 'risk' and updated after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%risk' AND updated_at > '2023-03-01';"
"Fetch the events with harmt less than 5 and date_closed is not NULL","SELECT * FROM events WHERE harmt < 5 AND date_closed IS NOT NULL;"
"Retrieve the organizations that have trial_ends_at set to '2023-12-31' or '2024-01-31'","SELECT * FROM organizations WHERE trial_ends_at IN ('2023-12-31', '2024-01-31');"
"Find the staff members who are active and have the role_id not equal to 'Role123'","SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id <> 'Role123';"
"List the assets with asset_type_id 'AT001' or 'AT002' or 'AT003'","SELECT * FROM assets WHERE asset_type_id IN ('AT001', 'AT002', 'AT003');"
"Get the hazards with descriptions containing the word 'safety' and created after '2023-03-01'","SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at > '2023-03-01';"
"Fetch the events with harmt between 10 and 20 and is_open set to FALSE","SELECT * FROM events WHERE harmt BETWEEN 10 AND 20 AND is_open = FALSE;"
"Retrieve the full names of all staff members whose updated_at is not equal to '2023-01-01'","SELECT full_name FROM staff_directory WHERE updated_at <> '2023-01-01';"
"List all assets associated with pharmacies enabled between '2023-02-01' and '2023-04-30'","SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at BETWEEN '2023-02-01' AND '2023-04-30');"
"Get the event staff roles with forms_id not equal to 1 and facility_id not equal to 5","SELECT * FROM event_staff_roles WHERE forms_id <> 1 AND facility_id <> 5;"
Retrieve all records from the products table added in the last 30 days,"SELECT * FROM products WHERE creation_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Get the data from the invoices table between today's date and three days ago.,"SELECT * FROM invoices WHERE invoice_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between last month and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the shipments table for the past 7 days,"SELECT * FROM shipmentsWHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Get the data from the transactions table between yesterday at 6 PM and today at 9 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 18:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 21:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 12 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 12 HOUR);"
Get the data from the logs table between last week's date and two weeks ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 WEEK) AND DATE_SUB(CURDATE(), INTERVAL 1 WEEK);"
I need the records from the sales table where the sale date is between yesterday and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND CURDATE();"
Show me the entries from the appointments table for the past 5 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 5 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 3 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 3 HOUR);"
Get the data from the calls table between yesterday at 10 PM and today at 8 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 22:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 08:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last year and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE();"
Show me the entries from the tickets table for the past 30 days.,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);"
Get the data from the shipments table between yesterday at 3 PM and today at 10 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 15:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 22:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 6 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"
Get the data from the purchases table between today's date and yesterday,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between two months ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 MONTH) AND CURDATE();"
Show me the entries from the logs table for the past 14 days,"SELECT * FROM logs WHERE log_date >= DATE_SUB(CURDATE(), INTERVAL 14 DAY);"
Get the data from the transactions table between yesterday at 9 AM and today at 5 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 09:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 17:00:00') AS DATETIME);"
Retrieve all records from the products table added in the last 7 days,"SELECT * FROM products WHERE creation_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY);"
Get the data from the invoices table between today's date and two weeks ago,"SELECT * FROM invoices WHERE invoice_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 WEEK) AND CURDATE();"
I need the records from the customers table where the registration date is between last year and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 24 hours.,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 24 HOUR);"
Get the data from the transactions table between yesterday at 4 PM and today at 10 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 16:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 22:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 6 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 6 HOUR);"
Get the data from the logs table between last month's date and three months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 3 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 3 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 2 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 2 HOUR);"
Get the data from the calls table between yesterday at 2 PM and today at 10 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 14:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 10:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 60 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 60 DAY);"
Get the data from the shipments table between yesterday at 1 PM and today at 9 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 13:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 21:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 9 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 9 MONTH);"
Get the data from the purchases table between today's date and two days ago,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between three months ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 MONTH) AND CURDATE();"
Show me the entries from the logs table for the past 48 hours,"SELECT * FROM logs WHERE log_date >= DATE_SUB(CURDATE(), INTERVAL 48 HOUR);"
Get the data from the transactions table between yesterday at 11 AM and today at 6 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 11:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 18:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 4 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 4 HOUR);"
Get the data from the logs table between last month's date and four months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 4 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today.,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 2 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 2 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 1 hour,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 1 HOUR);"
Get the data from the calls table between yesterday at 3 PM and today at 9 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 15:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 09:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 90 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 90 DAY);"
Get the data from the shipments table between yesterday at 12 PM and today at 8 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 12:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 20:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 10 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 10 MONTH);"
Get the data from the purchases table between today's date and three days ago,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between last year and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 72 hours,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 72 HOUR);"
Get the data from the transactions table between yesterday at 5 PM and today at 11 PM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 17:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 23:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 8 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 8 HOUR);"
Get the data from the logs table between last month's date and five months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 5 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 4 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 4 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 3 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 3 HOUR);"
Get the data from the calls table between yesterday at 6 PM and today at 8 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 18:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 08:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 120 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 120 DAY);"
Get the data from the shipments table between yesterday at 2 PM and today at 6 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 14:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 18:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 11 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 11 MONTH);"
Get the data from the purchases table between today's date and four days ago.,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 4 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between two years ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 2 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 96 hours,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 96 HOUR);"
Get the data from the transactions table between yesterday at 6 PM and today at 12 AM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 18:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 00:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 10 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 10 HOUR);"
Get the data from the logs table between last month's date and six months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 6 days,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 6 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 4 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 4 HOUR);"
Get the data from the calls table between yesterday at 8 PM and today at 10 AM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 20:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 10:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 150 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 150 DAY);"
Get the data from the shipments table between yesterday at 3 PM and today at 5 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 15:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 17:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 12 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH);"
Get the data from the purchases table between today's date and five days ago,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 5 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between three years ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 3 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 120 hours,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 120 HOUR);"
Get the data from the transactions table between yesterday at 8 PM and today at 1 AM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 20:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 01:00:00') AS DATETIME);"
Retrieve all records from the messages table within the last 6 hours,"SELECT * FROM messages WHERE message_time >= DATE_SUB(NOW(), INTERVAL 6 HOUR);"
Get the data from the logs table between last month's date and seven months ago,"SELECT * FROM logs WHERE log_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 7 MONTH) AND DATE_SUB(CURDATE(), INTERVAL 1 MONTH);"
I need the records from the sales table where the sale date is between last week and today,"SELECT * FROM sales WHERE sale_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 WEEK) AND CURDATE();"
Show me the entries from the appointments table for the past 8 days.,"SELECT * FROM appointments WHERE appointment_date >= DATE_SUB(CURDATE(), INTERVAL 8 DAY);"
Get the data from the shipments table between last month's date and today,"SELECT * FROM shipments WHERE shipment_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Retrieve all records from the transactions table within the last 5 hours,"SELECT * FROM transactions WHERE transaction_time >= DATE_SUB(NOW(), INTERVAL 5 HOUR);"
Get the data from the calls table between yesterday at 10 PM and today at 12 PM,"SELECT * FROM calls WHERE call_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 22:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 12:00:00') AS DATETIME);"
I need the records from the orders table where the order date is between last month and today,"SELECT * FROM orders WHERE order_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 1 MONTH) AND CURDATE();"
Show me the entries from the tickets table for the past 180 days,"SELECT * FROM tickets WHERE ticket_date >= DATE_SUB(CURDATE(), INTERVAL 180 DAY);"
Get the data from the shipments table between yesterday at 4 PM and today at 6 PM,"SELECT * FROM shipments WHERE shipment_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 16:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 18:00:00') AS DATETIME);"
Retrieve all records from the invoices table within the last 13 months,"SELECT * FROM invoices WHERE invoice_date >= DATE_SUB(CURDATE(), INTERVAL 13 MONTH);"
Get the data from the purchases table between today's date and six days ago,"SELECT * FROM purchases WHERE purchase_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 6 DAY) AND CURDATE();"
I need the records from the customers table where the registration date is between four years ago and today,"SELECT * FROM customers WHERE registration_date BETWEEN DATE_SUB(CURDATE(), INTERVAL 4 YEAR) AND CURDATE();"
Show me the entries from the shipments table for the past 144 hours,"SELECT * FROM shipments WHERE shipment_date >= DATE_SUB(CURDATE(), INTERVAL 144 HOUR);"
Get the data from the transactions table between yesterday at 10 PM and today at 2 AM,"SELECT * FROM transactions WHERE transaction_time BETWEEN CAST(CONCAT(DATE_SUB(CURDATE(), INTERVAL 1 DAY), ' 22:00:00') AS DATETIME) AND CAST(CONCAT(CURDATE(), ' 02:00:00') AS DATETIME);"
Retrieve all events,SELECT * FROM event;
Retrieve events with a specific facility_id,Query: SELECT * FROM event WHERE facility_id = <facility_id>;
Retrieve events with a specific user_id,SELECT * FROM event WHERE user_id = <user_id>;
Retrieve events with a specific event_type_id,SELECT * FROM event WHERE event_type_id = <event_type_id>;
Retrieve events with a specific incident_type_id,SELECT * FROM event WHERE incident_type_id = <incident_type_id>;
Retrieve events with a specific harm_level_id,SELECT * FROM event WHERE harm_level_id = <harm_level_id>;
Retrieve events that are still open,SELECT * FROM event WHERE is_open = true;
Retrieve events that have been closed,SELECT * FROM event WHERE is_open = false;
Retrieve events created within the last 24 hours,"SELECT * FROM event WHERE created_at >= DATE_SUB(NOW(), INTERVAL 24 HOUR);"
Retrieve events updated within the last 7 days,"SELECT * FROM event WHERE updated_at >= DATE_SUB(NOW(), INTERVAL 7 DAY);"
Retrieve events closed within the last month,"SELECT * FROM event WHERE closed_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH);"
Retrieve events with a specific description,SELECT * FROM event WHERE description LIKE '%<description>%';
Retrieve events sorted by created_at in ascending order,SELECT * FROM event ORDER BY created_at ASC;
Retrieve events sorted by created_at in descending order,SELECT * FROM event ORDER BY created_at DESC;
Retrieve events sorted by facility_id and created_at,"SELECT * FROM event ORDER BY facility_id, created_at;"
Retrieve the count of events for each facility_id,"SELECT facility_id, COUNT(*) FROM event GROUP BY facility_id;"
Retrieve the count of events for each user_id,"SELECT user_id, COUNT(*) FROM event GROUP BY user_id;"
Retrieve the count of events for each event_type_id,"SELECT event_type_id, COUNT(*) FROM event GROUP BY event_type_id;"
Retrieve the count of events for each incident_type_id,"SELECT incident_type_id, COUNT(*) FROM event GROUP BY incident_type_id;"
Retrieve the count of events for each harm_level_id,"SELECT harm_level_id, COUNT(*) FROM event GROUP BY harm_level_id;"
Retrieve the average harm_level_id for each facility_id,"SELECT facility_id, AVG(harm_level_id) FROM event GROUP BY facility_id;"
Retrieve the average harm_level_id for each user_id,"SELECT user_id, AVG(harm_level_id) FROM event GROUP BY user_id;"
Retrieve the average harm_level_id for each event_type_id,"SELECT event_type_id, AVG(harm_level_id) FROM event GROUP BY event_type_id;"
Retrieve the average harm_level_id for each incident_type_id,"SELECT incident_type_id, AVG(harm_level_id) FROM event GROUP BY incident_type_id;"
Retrieve the average harm_level_id for each harm_level_id,"SELECT harm_level_id, AVG(harm_level_id) FROM event GROUP BY harm_level_id;"
Retrieve the maximum harm_level_id for each facility_id,"SELECT facility_id, MAX(harm_level_id) FROM event GROUP BY facility_id;"
Retrieve the maximum harm_level_id for each user_id,"SELECT user_id, MAX(harm_level_id) FROM event GROUP BY user_id;"
Retrieve the maximum harm_level_id for each event_type_id,"SELECT event_type_id, MAX(harm_level_id) FROM event GROUP BY event_type_id;"
Retrieve the maximum harm_level_id for each incident_type_id,"SELECT incident_type_id, MAX(harm_level_id) FROM event GROUP BY incident_type_id;"
Retrieve the maximum harm_level_id for each harm_level_id,"SELECT harm_level_id, MAX(harm_level_id) FROM event GROUP BY harm_level_id;"
Retrieve the minimum harm_level_id for each facility_id,"SELECT facility_id, MIN(harm_level_id) FROM event GROUP BY facility_id;"
Retrieve the minimum harm_level_id for each user_id,"SELECT user_id, MIN(harm_level_id) FROM event GROUP BY user_id;"
Retrieve the minimum harm_level_id for each event_type_id,"SELECT event_type_id, MIN(harm_level_id) FROM event GROUP BY event_type_id;"
Retrieve the minimum harm_level_id for each incident_type_id,"SELECT incident_type_id, MIN(harm_level_id) FROM event GROUP BY incident_type_id;"
etrieve the minimum harm_level_id for each harm_level_id,"SELECT facility_id, MAX(created_at) FROM event GROUP BY facility_id;"
Retrieve the latest created_at timestamp for each user_id,"SELECT user_id, MAX(created_at) FROM event GROUP BY user_id;"
Retrieve the latest created_at timestamp for each event_type_id,"SELECT event_type_id, MAX(created_at) FROM event GROUP BY event_type_id;"
Retrieve the latest created_at timestamp for each incident_type_id,"SELECT incident_type_id, MAX(created_at) FROM event GROUP BY incident_type_id;"
Retrieve the latest created_at timestamp for each harm_level_id,"SELECT harm_level_id, MAX(created_at) FROM event GROUP BY harm_level_id;"
Retrieve the earliest created_at timestamp for each facility_id,"SELECT facility_id, MIN(created_at) FROM event GROUP BY facility_id;"
Retrieve the earliest created_at timestamp for each user_id,"SELECT user_id, MIN(created_at) FROM event GROUP BY user_id;"
Retrieve the earliest created_at timestamp for each event_type_id,"SELECT event_type_id, MIN(created_at) FROM event GROUP BY event_type_id;"
Retrieve the earliest created_at timestamp for each incident_type_id,"SELECT incident_type_id, MIN(created_at) FROM event GROUP BY incident_type_id;"
Retrieve the earliest created_at timestamp for each harm_level_id,"SELECT harm_level_id, MIN(created_at) FROM event GROUP BY harm_level_id;"
Retrieve the latest updated_at timestamp for each facility_id,"SELECT facility_id, MAX(updated_at) FROM event GROUP BY facility_id;"
Retrieve the latest updated_at timestamp for each user_id,"SELECT user_id, MAX(updated_at) FROM event GROUP BY user_id;"
Retrieve the latest updated_at timestamp for each event_type_id,"SELECT event_type_id, MAX(updated_at) FROM event GROUP BY event_type_id;"
Retrieve the latest updated_at timestamp for each incident_type_id,"SELECT incident_type_id, MAX(updated_at) FROM event GROUP BY incident_type_id;"
Retrieve the latest updated_at timestamp for each harm_level_id,"SELECT harm_level_id, MAX(updated_at) FROM event GROUP BY harm_level_id;"
Retrieve the latest updated_at timestamp for each harm_level_id,"SELECT harm_level_id, MAX(updated_at) FROM event GROUP BY harm_level_id;"
Retrieve the earliest updated_at timestamp for each facility_id,"SELECT facility_id, MIN(updated_at) FROM event GROUP BY facility_id;"
Retrieve the earliest updated_at timestamp for each event_type_id,"SELECT event_type_id, MIN(updated_at) FROM event GROUP BY event_type_id;"
Retrieve the earliest updated_at timestamp for each incident_type_id,"SELECT incident_type_id, MIN(updated_at) FROM event GROUP BY incident_type_id;"
Retrieve the earliest updated_at timestamp for each harm_level_id,"SELECT harm_level_id, MIN(updated_at) FROM event GROUP BY harm_level_id;"
Retrieve the count of events for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, COUNT(*) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the count of events for each facility_id and user_id,"SELECT facility_id, user_id, COUNT(*) FROM event GROUP BY facility_id, user_id;"
Retrieve the count of events for each facility_id and event_type_id,"SELECT facility_id, event_type_id, COUNT(*) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the count of events for each user_id and incident_type_id,"SELECT user_id, incident_type_id, COUNT(*) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the count of events for each user_id and event_type_id,"SELECT user_id, event_type_id, COUNT(*) FROM event GROUP BY user_id, event_type_id;"
Retrieve the count of events for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, COUNT(*) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the average harm_level_id for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, AVG(harm_level_id) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the average harm_level_id for each facility_id and user_id,"SELECT facility_id, user_id, AVG(harm_level_id) FROM event GROUP BY facility_id, user_id;"
Retrieve the average harm_level_id for each facility_id and event_type_id,"SELECT facility_id, event_type_id, AVG(harm_level_id) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the average harm_level_id for each user_id and incident_type_id,"SELECT user_id, incident_type_id, AVG(harm_level_id) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the average harm_level_id for each user_id and event_type_id,"SELECT user_id, event_type_id, AVG(harm_level_id) FROM event GROUP BY user_id, event_type_id;"
Retrieve the average harm_level_id for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, AVG(harm_level_id) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the maximum harm_level_id for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MAX(harm_level_id) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the maximum harm_level_id for each facility_id and user_id,"SELECT facility_id, user_id, MAX(harm_level_id) FROM event GROUP BY facility_id, user_id;"
Retrieve the maximum harm_level_id for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MAX(harm_level_id) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the maximum harm_level_id for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MAX(harm_level_id) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the maximum harm_level_id for each user_id and event_type_id,"SELECT user_id, event_type_id, MAX(harm_level_id) FROM event GROUP BY user_id, event_type_id;"
Retrieve the maximum harm_level_id for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, MAX(harm_level_id) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the minimum harm_level_id for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MIN(harm_level_id) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the minimum harm_level_id for each facility_id and user_id,"SELECT facility_id, user_id, MIN(harm_level_id) FROM event GROUP BY facility_id, user_id;"
Retrieve the minimum harm_level_id for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MIN(harm_level_id) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the minimum harm_level_id for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MIN(harm_level_id) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the minimum harm_level_id for each user_id and event_type_id,"SELECT user_id, event_type_id, MIN(harm_level_id) FROM event GROUP BY user_id, event_type_id;"
Retrieve the minimum harm_level_id for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, MIN(harm_level_id) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the latest created_at timestamp for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MAX(created_at) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the latest created_at timestamp for each facility_id and user_id,"SELECT facility_id, user_id, MAX(created_at) FROM event GROUP BY facility_id, user_id;"
Retrieve the latest created_at timestamp for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MAX(created_at) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the latest created_at timestamp for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MAX(created_at) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the latest created_at timestamp for each user_id and event_type_id,"SELECT user_id, event_type_id, MAX(created_at) FROM event GROUP BY user_id, event_type_id;"
Retrieve the earliest created_at timestamp for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MIN(created_at) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the earliest created_at timestamp for each facility_id and user_id,"SELECT facility_id, user_id, MIN(created_at) FROM event GROUP BY facility_id, user_id;"
Retrieve the earliest created_at timestamp for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MIN(created_at) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the earliest created_at timestamp for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MIN(created_at) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the earliest created_at timestamp for each user_id and event_type_id,"SELECT user_id, event_type_id, MIN(created_at) FROM event GROUP BY user_id, event_type_id;"
Retrieve the earliest created_at timestamp for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, MIN(created_at) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the latest updated_at timestamp for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MAX(updated_at) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the latest updated_at timestamp for each facility_id and user_id,"SELECT facility_id, user_id, MAX(updated_at) FROM event GROUP BY facility_id, user_id;"
Retrieve the latest updated_at timestamp for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MAX(updated_at) FROM event GROUP BY facility_id, event_type_id;"
Retrieve the latest updated_at timestamp for each user_id and incident_type_id,"SELECT user_id, incident_type_id, MAX(updated_at) FROM event GROUP BY user_id, incident_type_id;"
Retrieve the latest updated_at timestamp for each user_id and event_type_id,"SELECT user_id, event_type_id, MAX(updated_at) FROM event GROUP BY user_id, event_type_id;"
Retrieve the latest updated_at timestamp for each event_type_id and incident_type_id,"SELECT event_type_id, incident_type_id, MAX(updated_at) FROM event GROUP BY event_type_id, incident_type_id;"
Retrieve the earliest updated_at timestamp for each facility_id and incident_type_id,"SELECT facility_id, incident_type_id, MIN(updated_at) FROM event GROUP BY facility_id, incident_type_id;"
Retrieve the earliest updated_at timestamp for each facility_id and user_id,"SELECT facility_id, user_id, MIN(updated_at) FROM event GROUP BY facility_id, user_id;"
Retrieve the earliest updated_at timestamp for each facility_id and event_type_id,"SELECT facility_id, event_type_id, MIN(updated_at) FROM event GROUP BY facility_id, event_type_id;"
Show all hazards with description containing the word 'safety',SELECT * FROM hazards WHERE description LIKE '%safety%';
List all pharmacies with organization_id 'OrgXYZ' or countries_id 'USA',SELECT * FROM pharmacies WHERE organization_id = 'OrgXYZ' OR countries_id = 'USA';
Get the events with harmt less than 100 and is_open set to FALSE,SELECT * FROM events WHERE harmt < 100 AND is_open = FALSE;
Retrieve all users with type 'Employee' and active set to TRUE,SELECT * FROM users WHERE type = 'Employee' AND active = TRUE;
Find staff members with the full_name 'Jane Doe' or locum_full_name 'John Smith',SELECT * FROM staff_directory WHERE full_name = 'Jane Doe' OR locum_full_name = 'John Smith';
Get the assets with active status and asset_type_id 'AT007',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT007';
Retrieve events with harmt greater than 100 or is_open set to TRUE,SELECT * FROM events WHERE harmt > 100 OR is_open = TRUE;
List all users from organization_id 'Org789' and type 'Employee',SELECT * FROM users WHERE organization_id = 'Org789' AND type = 'Employee';
Get the pharmacies with created_at after '2023-01-01' and updated_at before '2023-06-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND updated_at < '2023-06-01';
Retrieve the organizations with trial_ends_at before '2023-12-31' or date_created after '2023-01-01',SELECT * FROM organizations WHERE trial_ends_at < '2023-12-31' OR date_created > '2023-01-01';
Show all events from users with roles_id 'Role123' and updated_at after '2023-07-01',SELECT * FROM events WHERE users_id IN (SELECT sf_id FROM users WHERE roles_id = 'Role123') AND updated_at > '2023-07-01';
Find the facilities with the oldest event and their corresponding event name,"SELECT facility.*, events.event_name FROM facility JOIN events ON facility.id = events.facility_id WHERE events.date_created = (SELECT MIN(date_created) FROM events);"
Get the users with type 'Admin' and profiles_id 'P789',SELECT * FROM users WHERE type = 'Admin' AND profiles_id = 'P789';
Retrieve all assets with asset_type_id 'AT008' or asset_type_id 'AT009',SELECT * FROM assets WHERE asset_type_id = 'AT008' OR asset_type_id = 'AT009';
List all users with roles_id 'Role789' and official_user_id 'OU002',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU002';
Get the events with harmt less than 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt < 50 AND is_open = TRUE;
Retrieve all staff members with official_user_id 'OU003' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU003' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT010',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT010';
Find events with harmt greater than 200 and is_open set to FALSE,SELECT * FROM events WHERE harmt > 200 AND is_open = FALSE;
Get all users with profiles_id 'P012' or type 'Admin',SELECT * FROM users WHERE profiles_id = 'P012' OR type = 'Admin';
List all assets associated with pharmacy 'Pharma4' or 'Pharma5',SELECT * FROM assets WHERE pharmacies_id = 'Pharma4' OR pharmacies_id = 'Pharma5';
Show all staff members from organization 'Org012' with is_active set to TRUE,SELECT * FROM staff_directory WHERE org_id = 'Org012' AND is_active = TRUE;
Find the facilities with trial_ends_at after '2023-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-06-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-06-01';
Retrieve all assets with asset_type_id 'AT011' or asset_type_id 'AT012',SELECT * FROM assets WHERE asset_type_id = 'AT011' OR asset_type_id = 'AT012';
List all users with roles_id 'Role234' and official_user_id 'OU003',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU003';
Retrieve all staff members with official_user_id 'OU004' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU004' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT013',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT013';
Get all users with profiles_id 'P013' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P013' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma6' or 'Pharma7',SELECT * FROM assets WHERE pharmacies_id = 'Pharma6' OR pharmacies_id = 'Pharma7';
Find the facilities with trial_ends_at after '2023-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-07-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-07-01';
Retrieve all assets with asset_type_id 'AT014' or asset_type_id 'AT015',SELECT * FROM assets WHERE asset_type_id = 'AT014' OR asset_type_id = 'AT015';
List all users with roles_id 'Role345' and official_user_id 'OU004',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU004';
Retrieve all staff members with official_user_id 'OU005' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU005' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT016',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT016';
Get all users with profiles_id 'P014' or type 'Employee',SELECT * FROM users WHERE profiles_id = 'P014' OR type = 'Employee';
List all assets associated with pharmacy 'Pharma8' or 'Pharma9',SELECT * FROM assets WHERE pharmacies_id = 'Pharma8' OR pharmacies_id = 'Pharma9';
Get the names of all users with type 'Manager' or roles_id 'Role345',SELECT full_name FROM users WHERE type = 'Manager' OR roles_id = 'Role345';
Find the facilities with trial_ends_at after '2023-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-08-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-08-01';
Retrieve all assets with asset_type_id 'AT017' or asset_type_id 'AT018',SELECT * FROM assets WHERE asset_type_id = 'AT017' OR asset_type_id = 'AT018';
List all users with roles_id 'Role456' and official_user_id 'OU005',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU005';
Retrieve all staff members with official_user_id 'OU006' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU006' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT019',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT019';
Get all users with profiles_id 'P015' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P015' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma10' or 'Pharma11',SELECT * FROM assets WHERE pharmacies_id = 'Pharma10' OR pharmacies_id = 'Pharma11';
Find the facilities with trial_ends_at after '2023-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-09-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-09-01';
Retrieve all assets with asset_type_id 'AT020' or asset_type_id 'AT021',SELECT * FROM assets WHERE asset_type_id = 'AT020' OR asset_type_id = 'AT021';
Get all users with profiles_id 'P016' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P016' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma12' or 'Pharma13',SELECT * FROM assets WHERE pharmacies_id = 'Pharma12' OR pharmacies_id = 'Pharma13';
Find the facilities with trial_ends_at after '2023-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-10-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-10-01';
Retrieve all assets with asset_type_id 'AT023' or asset_type_id 'AT024',SELECT * FROM assets WHERE asset_type_id = 'AT023' OR asset_type_id = 'AT024';
List all users with roles_id 'Role678' and official_user_id 'OU007',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU007';
Retrieve all staff members with official_user_id 'OU008' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU008' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT025',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT025';
Get all users with profiles_id 'P017' or type 'Employee',SELECT * FROM users WHERE profiles_id = 'P017' OR type = 'Employee';
List all assets associated with pharmacy 'Pharma14' or 'Pharma15',SELECT * FROM assets WHERE pharmacies_id = 'Pharma14' OR pharmacies_id = 'Pharma15';
Get the names of all users with type 'Manager' or roles_id 'Role678',SELECT full_name FROM users WHERE type = 'Manager' OR roles_id = 'Role678';
Find the facilities with trial_ends_at after '2023-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2023-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-11-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-11-01';
Retrieve all assets with asset_type_id 'AT026' or asset_type_id 'AT027',SELECT * FROM assets WHERE asset_type_id = 'AT026' OR asset_type_id = 'AT027';
List all users with roles_id 'Role789' and official_user_id 'OU008',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU008';
Retrieve all staff members with official_user_id 'OU009' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU009' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT028',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT028';
Get all users with profiles_id 'P018' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P018' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma16' or 'Pharma17',SELECT * FROM assets WHERE pharmacies_id = 'Pharma16' OR pharmacies_id = 'Pharma17';
Find the facilities with trial_ends_at after '2024-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-01',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-01';
Retrieve all assets with asset_type_id 'AT029' or asset_type_id 'AT030',SELECT * FROM assets WHERE asset_type_id = 'AT029' OR asset_type_id = 'AT030';
List all users with roles_id 'Role890' and official_user_id 'OU009',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU009';
Retrieve all staff members with official_user_id 'OU010' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU010' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT031',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT031';
Get all users with profiles_id 'P019' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P019' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma18' or 'Pharma19',SELECT * FROM assets WHERE pharmacies_id = 'Pharma18' OR pharmacies_id = 'Pharma19';
Find the facilities with trial_ends_at after '2024-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-02',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-02';
Retrieve all assets with asset_type_id 'AT032' or asset_type_id 'AT033',SELECT * FROM assets WHERE asset_type_id = 'AT032' OR asset_type_id = 'AT033';
List all users with roles_id 'Role901' and official_user_id 'OU010',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU010';
List all users with roles_id 'Role123' and official_user_id 'OU012',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU012';
Retrieve all staff members with official_user_id 'OU013' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU013' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT040',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT040';
Get all users with profiles_id 'P022' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P022' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma24' or 'Pharma25',SELECT * FROM assets WHERE pharmacies_id = 'Pharma24' OR pharmacies_id = 'Pharma25';
Find the facilities with trial_ends_at after '2024-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-05',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-05';
Retrieve all assets with asset_type_id 'AT041' or asset_type_id 'AT042',SELECT * FROM assets WHERE asset_type_id = 'AT041' OR asset_type_id = 'AT042';
List all users with roles_id 'Role234' and official_user_id 'OU013',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU013';
Retrieve all staff members with official_user_id 'OU014' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU014' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT043',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT043';
Get all users with profiles_id 'P023' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P023' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma26' or 'Pharma27',SELECT * FROM assets WHERE pharmacies_id = 'Pharma26' OR pharmacies_id = 'Pharma27';
Find the facilities with trial_ends_at after '2024-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-06',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-06';
Retrieve all assets with asset_type_id 'AT044' or asset_type_id 'AT045',SELECT * FROM assets WHERE asset_type_id = 'AT044' OR asset_type_id = 'AT045';
List all users with roles_id 'Role345' and official_user_id 'OU014',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU014';
Retrieve all staff members with official_user_id 'OU015' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU015' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT046',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT046';
Get all users with profiles_id 'P024' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P024' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma28' or 'Pharma29',SELECT * FROM assets WHERE pharmacies_id = 'Pharma28' OR pharmacies_id = 'Pharma29';
Find the facilities with trial_ends_at after '2024-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-07',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-07';
Retrieve all assets with asset_type_id 'AT047' or asset_type_id 'AT048',SELECT * FROM assets WHERE asset_type_id = 'AT047' OR asset_type_id = 'AT048';
List all users with roles_id 'Role456' and official_user_id 'OU015',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU015';
Retrieve all staff members with official_user_id 'OU016' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU016' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT049',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT049';
Get all users with profiles_id 'P025' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P025' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma30' or 'Pharma31',SELECT * FROM assets WHERE pharmacies_id = 'Pharma30' OR pharmacies_id = 'Pharma31';
Find the facilities with trial_ends_at after '2024-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-08',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-08';
Retrieve all assets with asset_type_id 'AT050' or asset_type_id 'AT051',SELECT * FROM assets WHERE asset_type_id = 'AT050' OR asset_type_id = 'AT051';
List all users with roles_id 'Role567' and official_user_id 'OU016',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU016';
Retrieve all staff members with official_user_id 'OU017' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU017' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT052',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT052';
Get all users with profiles_id 'P026' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P026' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma32' or 'Pharma33',SELECT * FROM assets WHERE pharmacies_id = 'Pharma32' OR pharmacies_id = 'Pharma33';
Find the facilities with trial_ends_at after '2024-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-09',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-09';
Retrieve all assets with asset_type_id 'AT053' or asset_type_id 'AT054',SELECT * FROM assets WHERE asset_type_id = 'AT053' OR asset_type_id = 'AT054';
List all users with roles_id 'Role678' and official_user_id 'OU017',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU017';
Retrieve all staff members with official_user_id 'OU018' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU018' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT055',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT055';
Get all users with profiles_id 'P027' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P027' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma34' or 'Pharma35',SELECT * FROM assets WHERE pharmacies_id = 'Pharma34' OR pharmacies_id = 'Pharma35';
Find the facilities with trial_ends_at after '2024-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-10',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-10';
Retrieve all assets with asset_type_id 'AT056' or asset_type_id 'AT057',SELECT * FROM assets WHERE asset_type_id = 'AT056' OR asset_type_id = 'AT057';
List all users with roles_id 'Role789' and official_user_id 'OU018',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU018';
Retrieve all staff members with official_user_id 'OU019' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU019' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT058',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT058';
Get all users with profiles_id 'P028' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P028' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma36' or 'Pharma37',SELECT * FROM assets WHERE pharmacies_id = 'Pharma36' OR pharmacies_id = 'Pharma37';
Find the facilities with trial_ends_at after '2024-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-11',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-11';
Retrieve all assets with asset_type_id 'AT059' or asset_type_id 'AT060',SELECT * FROM assets WHERE asset_type_id = 'AT059' OR asset_type_id = 'AT060';
List all users with roles_id 'Role890' and official_user_id 'OU019',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU019';
Retrieve all staff members with official_user_id 'OU020' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU020' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT061',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT061';
Get all users with profiles_id 'P029' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P029' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma38' or 'Pharma39',SELECT * FROM assets WHERE pharmacies_id = 'Pharma38' OR pharmacies_id = 'Pharma39';
Find the facilities with trial_ends_at after '2024-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2024-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-12',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-12';
Retrieve all assets with asset_type_id 'AT062' or asset_type_id 'AT063',SELECT * FROM assets WHERE asset_type_id = 'AT062' OR asset_type_id = 'AT063';
List all users with roles_id 'Role901' and official_user_id 'OU020',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU020';
Retrieve all staff members with official_user_id 'OU021' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU021' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT064',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT064';
Get all users with profiles_id 'P030' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P030' OR type = 'Manager';
Retrieve the facilities with organization_id 'Org109' and is_active set to FALSE,SELECT * FROM facilities WHERE organization_id = 'Org109' AND is_active = FALSE;
List all assets associated with pharmacy 'Pharma40' or 'Pharma41',SELECT * FROM assets WHERE pharmacies_id = 'Pharma40' OR pharmacies_id = 'Pharma41';
Show all staff members from organization 'Org109' with is_active set to TRUE,SELECT * FROM staff_directory WHERE org_id = 'Org109' AND is_active = TRUE;
Find the facilities with trial_ends_at after '2025-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-13',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-13';
Retrieve all assets with asset_type_id 'AT065' or asset_type_id 'AT066',SELECT * FROM assets WHERE asset_type_id = 'AT065' OR asset_type_id = 'AT066';
List all users with roles_id 'Role012' and official_user_id 'OU021',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU021';
Retrieve all staff members with official_user_id 'OU022' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU022' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT067',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT067';
Get all users with profiles_id 'P031' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P031' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma42' or 'Pharma43',SELECT * FROM assets WHERE pharmacies_id = 'Pharma42' OR pharmacies_id = 'Pharma43';
Find the facilities with trial_ends_at after '2025-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-14',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-14';
Retrieve all assets with asset_type_id 'AT068' or asset_type_id 'AT069',SELECT * FROM assets WHERE asset_type_id = 'AT068' OR asset_type_id = 'AT069';
List all users with roles_id 'Role123' and official_user_id 'OU022',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU022';
Retrieve all staff members with official_user_id 'OU023' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU023' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT070',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT070';
Get all users with profiles_id 'P032' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P032' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma44' or 'Pharma45',SELECT * FROM assets WHERE pharmacies_id = 'Pharma44' OR pharmacies_id = 'Pharma45';
Find the facilities with trial_ends_at after '2025-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-03-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-15',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-15';
Retrieve all assets with asset_type_id 'AT071' or asset_type_id 'AT072',SELECT * FROM assets WHERE asset_type_id = 'AT071' OR asset_type_id = 'AT072';
List all users with roles_id 'Role234' and official_user_id 'OU023',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU023';
Retrieve all staff members with official_user_id 'OU024' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU024' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT073',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT073';
Get all users with profiles_id 'P033' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P033' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma46' or 'Pharma47',SELECT * FROM assets WHERE pharmacies_id = 'Pharma46' OR pharmacies_id = 'Pharma47';
Find the facilities with trial_ends_at after '2025-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-04-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-16',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-16';
Retrieve all assets with asset_type_id 'AT074' or asset_type_id 'AT075',SELECT * FROM assets WHERE asset_type_id = 'AT074' OR asset_type_id = 'AT075';
List all users with roles_id 'Role345' and official_user_id 'OU024',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU024';
Retrieve all staff members with official_user_id 'OU025' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU025' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT076',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT076';
Get all users with profiles_id 'P034' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P034' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma48' or 'Pharma49',SELECT * FROM assets WHERE pharmacies_id = 'Pharma48' OR pharmacies_id = 'Pharma49';
Find the facilities with trial_ends_at after '2025-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-17',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-17';
Retrieve all assets with asset_type_id 'AT077' or asset_type_id 'AT078',SELECT * FROM assets WHERE asset_type_id = 'AT077' OR asset_type_id = 'AT078';
List all users with roles_id 'Role456' and official_user_id 'OU025',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU025';
Retrieve all staff members with official_user_id 'OU026' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU026' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT079',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT079';
Get all users with profiles_id 'P035' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P035' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma50' or 'Pharma51',SELECT * FROM assets WHERE pharmacies_id = 'Pharma50' OR pharmacies_id = 'Pharma51';
Find the facilities with trial_ends_at after '2025-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-18',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-18';
Retrieve all assets with asset_type_id 'AT080' or asset_type_id 'AT081',SELECT * FROM assets WHERE asset_type_id = 'AT080' OR asset_type_id = 'AT081';
List all users with roles_id 'Role567' and official_user_id 'OU026',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU026';
Retrieve all staff members with official_user_id 'OU027' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU027' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT082',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT082';
Get all users with profiles_id 'P036' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P036' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma52' or 'Pharma53',SELECT * FROM assets WHERE pharmacies_id = 'Pharma52' OR pharmacies_id = 'Pharma53';
Find the facilities with trial_ends_at after '2025-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-07-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-19',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-19';
Retrieve all assets with asset_type_id 'AT083' or asset_type_id 'AT084',SELECT * FROM assets WHERE asset_type_id = 'AT083' OR asset_type_id = 'AT084';
List all users with roles_id 'Role678' and official_user_id 'OU027',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU027';
Retrieve all staff members with official_user_id 'OU028' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU028' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT085',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT085';
Get all users with profiles_id 'P037' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P037' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma54' or 'Pharma55',SELECT * FROM assets WHERE pharmacies_id = 'Pharma54' OR pharmacies_id = 'Pharma55';
Find the facilities with trial_ends_at after '2025-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-08-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-20',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-20';
Retrieve all assets with asset_type_id 'AT086' or asset_type_id 'AT087',SELECT * FROM assets WHERE asset_type_id = 'AT086' OR asset_type_id = 'AT087';
List all users with roles_id 'Role789' and official_user_id 'OU028',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU028';
Retrieve all staff members with official_user_id 'OU029' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU029' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT088',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT088';
Get all users with profiles_id 'P038' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P038' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma56' or 'Pharma57',SELECT * FROM assets WHERE pharmacies_id = 'Pharma56' OR pharmacies_id = 'Pharma57';
Find the facilities with trial_ends_at after '2025-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-09-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-21',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-21';
Retrieve all assets with asset_type_id 'AT089' or asset_type_id 'AT090',SELECT * FROM assets WHERE asset_type_id = 'AT089' OR asset_type_id = 'AT090';
List all users with roles_id 'Role890' and official_user_id 'OU029',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU029';
Retrieve all staff members with official_user_id 'OU030' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU030' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT091',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT091';
Get all users with profiles_id 'P039' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P039' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma58' or 'Pharma59',SELECT * FROM assets WHERE pharmacies_id = 'Pharma58' OR pharmacies_id = 'Pharma59';
Find the facilities with trial_ends_at after '2025-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-10-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-22',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-22';
Retrieve all assets with asset_type_id 'AT091' or asset_type_id 'AT092',SELECT * FROM assets WHERE asset_type_id = 'AT091' OR asset_type_id = 'AT092';
List all users with roles_id 'Role901' and official_user_id 'OU030',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU030';
Retrieve all staff members with official_user_id 'OU031' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU031' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT093',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT093';
Get all users with profiles_id 'P040' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P040' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma60' or 'Pharma61',SELECT * FROM assets WHERE pharmacies_id = 'Pharma60' OR pharmacies_id = 'Pharma61';
Find the facilities with trial_ends_at after '2025-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-11-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-23',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-23';
Retrieve all assets with asset_type_id 'AT094' or asset_type_id 'AT095',SELECT * FROM assets WHERE asset_type_id = 'AT094' OR asset_type_id = 'AT095';
List all users with roles_id 'Role012' and official_user_id 'OU031',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU031';
Retrieve all staff members with official_user_id 'OU032' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU032' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT096',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT096';
Get all users with profiles_id 'P041' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P041' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma62' or 'Pharma63',SELECT * FROM assets WHERE pharmacies_id = 'Pharma62' OR pharmacies_id = 'Pharma63';
Find the facilities with trial_ends_at after '2025-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2025-12-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-24',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-24';
Retrieve all assets with asset_type_id 'AT097' or asset_type_id 'AT098',SELECT * FROM assets WHERE asset_type_id = 'AT097' OR asset_type_id = 'AT098';
List all users with roles_id 'Role123' and official_user_id 'OU032',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU032';
Retrieve all staff members with official_user_id 'OU033' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU033' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT099',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT099';
Get all users with profiles_id 'P042' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P042' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma64' or 'Pharma65',SELECT * FROM assets WHERE pharmacies_id = 'Pharma64' OR pharmacies_id = 'Pharma65';
Find the facilities with trial_ends_at after '2026-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-01-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-25',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-25';
Retrieve all assets with asset_type_id 'AT100' or asset_type_id 'AT101',SELECT * FROM assets WHERE asset_type_id = 'AT100' OR asset_type_id = 'AT101';
List all users with roles_id 'Role234' and official_user_id 'OU033',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU033';
Retrieve all staff members with official_user_id 'OU034' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU034' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT102',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT102';
Get all users with profiles_id 'P043' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P043' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma66' or 'Pharma67',SELECT * FROM assets WHERE pharmacies_id = 'Pharma66' OR pharmacies_id = 'Pharma67';
Find the facilities with trial_ends_at after '2026-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-02-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-26',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-26';
Retrieve all assets with asset_type_id 'AT103' or asset_type_id 'AT104',SELECT * FROM assets WHERE asset_type_id = 'AT103' OR asset_type_id = 'AT104';
List all users with roles_id 'Role345' and official_user_id 'OU034',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU034';
Retrieve all staff members with official_user_id 'OU035' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU035' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT105',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT105';
Get all users with profiles_id 'P044' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P044' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma68' or 'Pharma69',SELECT * FROM assets WHERE pharmacies_id = 'Pharma68' OR pharmacies_id = 'Pharma69';
Find the facilities with trial_ends_at after '2026-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-03-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-27',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-27';
Retrieve all assets with asset_type_id 'AT105' or asset_type_id 'AT106',SELECT * FROM assets WHERE asset_type_id = 'AT105' OR asset_type_id = 'AT106';
List all users with roles_id 'Role456' and official_user_id 'OU035',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU035';
Retrieve all staff members with official_user_id 'OU036' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU036' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT107',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT107';
Get all users with profiles_id 'P045' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P045' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma70' or 'Pharma71',SELECT * FROM assets WHERE pharmacies_id = 'Pharma70' OR pharmacies_id = 'Pharma71';
Find the facilities with trial_ends_at after '2026-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-04-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-28',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-28';
Retrieve all assets with asset_type_id 'AT108' or asset_type_id 'AT109',SELECT * FROM assets WHERE asset_type_id = 'AT108' OR asset_type_id = 'AT109';
List all users with roles_id 'Role567' and official_user_id 'OU036',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU036';
Retrieve all staff members with official_user_id 'OU037' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU037' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT110',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT110';
Get all users with profiles_id 'P046' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P046' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma72' or 'Pharma73',SELECT * FROM assets WHERE pharmacies_id = 'Pharma72' OR pharmacies_id = 'Pharma73';
Find the facilities with trial_ends_at after '2026-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-05-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-29',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-29';
Retrieve all assets with asset_type_id 'AT111' or asset_type_id 'AT112',SELECT * FROM assets WHERE asset_type_id = 'AT111' OR asset_type_id = 'AT112';
List all users with roles_id 'Role678' and official_user_id 'OU037',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU037';
Retrieve all staff members with official_user_id 'OU038' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU038' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT113',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT113';
Get all users with profiles_id 'P047' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P047' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma74' or 'Pharma75',SELECT * FROM assets WHERE pharmacies_id = 'Pharma74' OR pharmacies_id = 'Pharma75';
Find the facilities with trial_ends_at after '2026-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-06-01' OR trial_ends_at < '2023-12-31';
Get the pharmacies with created_at after '2023-01-01' and activate_at before '2023-12-30',SELECT * FROM pharmacies WHERE created_at > '2023-01-01' AND activate_at < '2023-12-30';
Retrieve all assets with asset_type_id 'AT113' or asset_type_id 'AT114',SELECT * FROM assets WHERE asset_type_id = 'AT113' OR asset_type_id = 'AT114';
List all users with roles_id 'Role789' and official_user_id 'OU038',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU038';
Retrieve all staff members with official_user_id 'OU039' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU039' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT115',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT115';
Get all users with profiles_id 'P048' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P048' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma76' or 'Pharma77',SELECT * FROM assets WHERE pharmacies_id = 'Pharma76' OR pharmacies_id = 'Pharma77';
Find the facilities with trial_ends_at after '2026-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT116' or asset_type_id 'AT117',SELECT * FROM assets WHERE asset_type_id = 'AT116' OR asset_type_id = 'AT117';
List all users with roles_id 'Role890' and official_user_id 'OU039',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU039';
Retrieve all staff members with official_user_id 'OU040' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU040' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT118',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT118';
Get all users with profiles_id 'P049' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P049' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma78' or 'Pharma79',SELECT * FROM assets WHERE pharmacies_id = 'Pharma78' OR pharmacies_id = 'Pharma79';
Find the facilities with trial_ends_at after '2026-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT119' or asset_type_id 'AT120',SELECT * FROM assets WHERE asset_type_id = 'AT119' OR asset_type_id = 'AT120';
List all users with roles_id 'Role901' and official_user_id 'OU040',SELECT * FROM users WHERE roles_id = 'Role901' AND official_user_id = 'OU040';
Retrieve all staff members with official_user_id 'OU041' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU041' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT121',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT121';
Get all users with profiles_id 'P050' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P050' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma80' or 'Pharma81',SELECT * FROM assets WHERE pharmacies_id = 'Pharma80' OR pharmacies_id = 'Pharma81';
Find the facilities with trial_ends_at after '2026-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT121' or asset_type_id 'AT122',SELECT * FROM assets WHERE asset_type_id = 'AT121' OR asset_type_id = 'AT122';
List all users with roles_id 'Role012' and official_user_id 'OU041',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU041';
Retrieve all staff members with official_user_id 'OU042' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU042' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT123',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT123';
Get all users with profiles_id 'P051' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P051' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma82' or 'Pharma83',SELECT * FROM assets WHERE pharmacies_id = 'Pharma82' OR pharmacies_id = 'Pharma83';
Find the facilities with trial_ends_at after '2026-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT124' or asset_type_id 'AT125',SELECT * FROM assets WHERE asset_type_id = 'AT124' OR asset_type_id = 'AT125';
List all users with roles_id 'Role123' and official_user_id 'OU042',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU042';
Retrieve all staff members with official_user_id 'OU043' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU043' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT126',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT126';
Get all users with profiles_id 'P052' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P052' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma84' or 'Pharma85',SELECT * FROM assets WHERE pharmacies_id = 'Pharma84' OR pharmacies_id = 'Pharma85';
Find the facilities with trial_ends_at after '2026-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT127' or asset_type_id 'AT128',SELECT * FROM assets WHERE asset_type_id = 'AT127' OR asset_type_id = 'AT128';
List all users with roles_id 'Role234' and official_user_id 'OU043',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU043';
Retrieve all staff members with official_user_id 'OU044' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU044' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT129',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT129';
Get all users with profiles_id 'P053' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P053' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma86' or 'Pharma87',SELECT * FROM assets WHERE pharmacies_id = 'Pharma86' OR pharmacies_id = 'Pharma87';
Find the facilities with trial_ends_at after '2026-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2026-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT130' or asset_type_id 'AT131',SELECT * FROM assets WHERE asset_type_id = 'AT130' OR asset_type_id = 'AT131';
List all users with roles_id 'Role345' and official_user_id 'OU044',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU044';
Retrieve all staff members with official_user_id 'OU045' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU045' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT132',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT132';
Get all users with profiles_id 'P054' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P054' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma88' or 'Pharma89',SELECT * FROM assets WHERE pharmacies_id = 'Pharma88' OR pharmacies_id = 'Pharma89';
Find the facilities with trial_ends_at after '2027-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT133' or asset_type_id 'AT134',SELECT * FROM assets WHERE asset_type_id = 'AT133' OR asset_type_id = 'AT134';
List all users with roles_id 'Role456' and official_user_id 'OU045',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU045';
Retrieve all staff members with official_user_id 'OU046' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU046' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT135',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT135';
Get all users with profiles_id 'P055' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P055' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma90' or 'Pharma91',SELECT * FROM assets WHERE pharmacies_id = 'Pharma90' OR pharmacies_id = 'Pharma91';
Find the facilities with trial_ends_at after '2027-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT136' or asset_type_id 'AT137',SELECT * FROM assets WHERE asset_type_id = 'AT136' OR asset_type_id = 'AT137';
List all users with roles_id 'Role567' and official_user_id 'OU046',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU046';
Retrieve all staff members with official_user_id 'OU047' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU047' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT138',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT138';
Get all users with profiles_id 'P056' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P056' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma92' or 'Pharma93',SELECT * FROM assets WHERE pharmacies_id = 'Pharma92' OR pharmacies_id = 'Pharma93';
Find the facilities with trial_ends_at after '2027-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT139' or asset_type_id 'AT140',SELECT * FROM assets WHERE asset_type_id = 'AT139' OR asset_type_id = 'AT140';
List all users with roles_id 'Role678' and official_user_id 'OU047',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU047';
Retrieve all staff members with official_user_id 'OU048' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU048' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT141',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT141';
Get all users with profiles_id 'P057' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P057' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma94' or 'Pharma95',SELECT * FROM assets WHERE pharmacies_id = 'Pharma94' OR pharmacies_id = 'Pharma95';
Find the facilities with trial_ends_at after '2027-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT142' or asset_type_id 'AT143',SELECT * FROM assets WHERE asset_type_id = 'AT142' OR asset_type_id = 'AT143';
List all users with roles_id 'Role789' and official_user_id 'OU048',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU048';
Retrieve all staff members with official_user_id 'OU049' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU049' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT144',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT144';
Get all users with profiles_id 'P058' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P058' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma96' or 'Pharma97',SELECT * FROM assets WHERE pharmacies_id = 'Pharma96' OR pharmacies_id = 'Pharma97';
Find the facilities with trial_ends_at after '2027-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT145' or asset_type_id 'AT146',SELECT * FROM assets WHERE asset_type_id = 'AT145' OR asset_type_id = 'AT146';
List all users with roles_id 'Role890' and official_user_id 'OU049',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU049';
Retrieve all staff members with official_user_id 'OU050' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU050' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT147',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT147';
Get all users with profiles_id 'P059' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P059' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma98' or 'Pharma99',SELECT * FROM assets WHERE pharmacies_id = 'Pharma98' OR pharmacies_id = 'Pharma99';
Find the facilities with trial_ends_at after '2027-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT147' or asset_type_id 'AT148',SELECT * FROM assets WHERE asset_type_id = 'AT147' OR asset_type_id = 'AT148';
List all users with roles_id 'Role012' and official_user_id 'OU050',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU050';
Retrieve all staff members with official_user_id 'OU051' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU051' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT149',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT149';
Get all users with profiles_id 'P060' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P060' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma100' or 'Pharma101',SELECT * FROM assets WHERE pharmacies_id = 'Pharma100' OR pharmacies_id = 'Pharma101';
Find the facilities with trial_ends_at after '2027-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT150' or asset_type_id 'AT151',SELECT * FROM assets WHERE asset_type_id = 'AT150' OR asset_type_id = 'AT151';
List all users with roles_id 'Role123' and official_user_id 'OU051',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU051';
Retrieve all staff members with official_user_id 'OU052' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU052' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT152',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT152';
Get all users with profiles_id 'P061' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P061' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma102' or 'Pharma103',SELECT * FROM assets WHERE pharmacies_id = 'Pharma102' OR pharmacies_id = 'Pharma103';
Find the facilities with trial_ends_at after '2027-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT153' or asset_type_id 'AT154',SELECT * FROM assets WHERE asset_type_id = 'AT153' OR asset_type_id = 'AT154';
List all users with roles_id 'Role234' and official_user_id 'OU052',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU052';
Retrieve all staff members with official_user_id 'OU053' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU053' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT155',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT155';
Get all users with profiles_id 'P062' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P062' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma104' or 'Pharma105',SELECT * FROM assets WHERE pharmacies_id = 'Pharma104' OR pharmacies_id = 'Pharma105';
Find the facilities with trial_ends_at after '2027-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT156' or asset_type_id 'AT157',SELECT * FROM assets WHERE asset_type_id = 'AT156' OR asset_type_id = 'AT157';
List all users with roles_id 'Role345' and official_user_id 'OU053',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU053';
Retrieve all staff members with official_user_id 'OU054' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU054' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT158',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT158';
Get all users with profiles_id 'P063' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P063' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma106' or 'Pharma107',SELECT * FROM assets WHERE pharmacies_id = 'Pharma106' OR pharmacies_id = 'Pharma107';
Find the facilities with trial_ends_at after '2027-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT159' or asset_type_id 'AT160',SELECT * FROM assets WHERE asset_type_id = 'AT159' OR asset_type_id = 'AT160';
List all users with roles_id 'Role456' and official_user_id 'OU054',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU054';
Retrieve all staff members with official_user_id 'OU055' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU055' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT161',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT161';
Get all users with profiles_id 'P064' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P064' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma108' or 'Pharma109',SELECT * FROM assets WHERE pharmacies_id = 'Pharma108' OR pharmacies_id = 'Pharma109';
Find the facilities with trial_ends_at after '2027-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT162' or asset_type_id 'AT163',SELECT * FROM assets WHERE asset_type_id = 'AT162' OR asset_type_id = 'AT163';
List all users with roles_id 'Role567' and official_user_id 'OU055',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU055';
Retrieve all staff members with official_user_id 'OU056' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU056' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT164',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT164';
Get all users with profiles_id 'P065' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P065' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma110' or 'Pharma111',SELECT * FROM assets WHERE pharmacies_id = 'Pharma110' OR pharmacies_id = 'Pharma111';
Find the facilities with trial_ends_at after '2027-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2027-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT165' or asset_type_id 'AT166',SELECT * FROM assets WHERE asset_type_id = 'AT165' OR asset_type_id = 'AT166';
List all users with roles_id 'Role678' and official_user_id 'OU056',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU056';
Retrieve all staff members with official_user_id 'OU057' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU057' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT167',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT167';
Get all users with profiles_id 'P066' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P066' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma112' or 'Pharma113',SELECT * FROM assets WHERE pharmacies_id = 'Pharma112' OR pharmacies_id = 'Pharma113';
Find the facilities with trial_ends_at after '2028-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT168' or asset_type_id 'AT169',SELECT * FROM assets WHERE asset_type_id = 'AT168' OR asset_type_id = 'AT169';
List all users with roles_id 'Role789' and official_user_id 'OU057',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU057';
Retrieve all staff members with official_user_id 'OU058' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU058' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT170',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT170';
Get all users with profiles_id 'P067' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P067' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma114' or 'Pharma115',SELECT * FROM assets WHERE pharmacies_id = 'Pharma114' OR pharmacies_id = 'Pharma115';
Find the facilities with trial_ends_at after '2028-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT171' or asset_type_id 'AT172',SELECT * FROM assets WHERE asset_type_id = 'AT171' OR asset_type_id = 'AT172';
List all users with roles_id 'Role890' and official_user_id 'OU058',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU058';
Retrieve all staff members with official_user_id 'OU059' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU059' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT173',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT173';
Get all users with profiles_id 'P068' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P068' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma116' or 'Pharma117',SELECT * FROM assets WHERE pharmacies_id = 'Pharma116' OR pharmacies_id = 'Pharma117';
Find the facilities with trial_ends_at after '2028-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT174' or asset_type_id 'AT175',SELECT * FROM assets WHERE asset_type_id = 'AT174' OR asset_type_id = 'AT175';
List all users with roles_id 'Role012' and official_user_id 'OU059',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU059';
Retrieve all staff members with official_user_id 'OU060' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU060' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT176',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT176';
Get all users with profiles_id 'P069' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P069' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma118' or 'Pharma119',SELECT * FROM assets WHERE pharmacies_id = 'Pharma118' OR pharmacies_id = 'Pharma119';
Find the facilities with trial_ends_at after '2028-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT177' or asset_type_id 'AT178',SELECT * FROM assets WHERE asset_type_id = 'AT177' OR asset_type_id = 'AT178';
List all users with roles_id 'Role123' and official_user_id 'OU060',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU060';
Retrieve all staff members with official_user_id 'OU061' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU061' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT179',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT179';
Get all users with profiles_id 'P070' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P070' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma120' or 'Pharma121',SELECT * FROM assets WHERE pharmacies_id = 'Pharma120' OR pharmacies_id = 'Pharma121';
Find the facilities with trial_ends_at after '2028-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT180' or asset_type_id 'AT181',SELECT * FROM assets WHERE asset_type_id = 'AT180' OR asset_type_id = 'AT181';
List all users with roles_id 'Role234' and official_user_id 'OU061',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU061';
Retrieve all staff members with official_user_id 'OU062' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU062' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT182',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT182';
Get all users with profiles_id 'P071' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P071' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma122' or 'Pharma123',SELECT * FROM assets WHERE pharmacies_id = 'Pharma122' OR pharmacies_id = 'Pharma123';
Find the facilities with trial_ends_at after '2028-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT183' or asset_type_id 'AT184',SELECT * FROM assets WHERE asset_type_id = 'AT183' OR asset_type_id = 'AT184';
List all users with roles_id 'Role345' and official_user_id 'OU062',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU062';
Retrieve all staff members with official_user_id 'OU063' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU063' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT185',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT185';
Get all users with profiles_id 'P072' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P072' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma124' or 'Pharma125',SELECT * FROM assets WHERE pharmacies_id = 'Pharma124' OR pharmacies_id = 'Pharma125';
Find the facilities with trial_ends_at after '2028-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT186' or asset_type_id 'AT187',SELECT * FROM assets WHERE asset_type_id = 'AT186' OR asset_type_id = 'AT187';
List all users with roles_id 'Role456' and official_user_id 'OU063',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU063';
Retrieve all staff members with official_user_id 'OU064' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU064' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT188',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT188';
Get all users with profiles_id 'P073' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P073' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma126' or 'Pharma127',SELECT * FROM assets WHERE pharmacies_id = 'Pharma126' OR pharmacies_id = 'Pharma127';
Find the facilities with trial_ends_at after '2028-08-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-08-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT189' or asset_type_id 'AT190',SELECT * FROM assets WHERE asset_type_id = 'AT189' OR asset_type_id = 'AT190';
List all users with roles_id 'Role567' and official_user_id 'OU064',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU064';
Retrieve all staff members with official_user_id 'OU065' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU065' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT191',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT191';
Get all users with profiles_id 'P074' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P074' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma128' or 'Pharma129',SELECT * FROM assets WHERE pharmacies_id = 'Pharma128' OR pharmacies_id = 'Pharma129';
Find the facilities with trial_ends_at after '2028-09-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-09-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT192' or asset_type_id 'AT193',SELECT * FROM assets WHERE asset_type_id = 'AT192' OR asset_type_id = 'AT193';
List all users with roles_id 'Role678' and official_user_id 'OU065',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU065';
Retrieve all staff members with official_user_id 'OU066' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU066' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT194',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT194';
Get all users with profiles_id 'P075' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P075' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma130' or 'Pharma131',SELECT * FROM assets WHERE pharmacies_id = 'Pharma130' OR pharmacies_id = 'Pharma131';
Find the facilities with trial_ends_at after '2028-10-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-10-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT195' or asset_type_id 'AT196',SELECT * FROM assets WHERE asset_type_id = 'AT195' OR asset_type_id = 'AT196';
List all users with roles_id 'Role789' and official_user_id 'OU066',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU066';
Retrieve all staff members with official_user_id 'OU067' or employee_id 'E1234',SELECT * FROM staff_directory WHERE official_user_id = 'OU067' OR employee_id = 'E1234';
Show all assets with active status and asset_type_id 'AT197',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT197';
Get all users with profiles_id 'P076' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P076' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma132' or 'Pharma133',SELECT * FROM assets WHERE pharmacies_id = 'Pharma132' OR pharmacies_id = 'Pharma133';
Find the facilities with trial_ends_at after '2028-11-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-11-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT198' or asset_type_id 'AT199',SELECT * FROM assets WHERE asset_type_id = 'AT198' OR asset_type_id = 'AT199';
List all users with roles_id 'Role890' and official_user_id 'OU067',SELECT * FROM users WHERE roles_id = 'Role890' AND official_user_id = 'OU067';
Retrieve all staff members with official_user_id 'OU068' or employee_id 'E2345',SELECT * FROM staff_directory WHERE official_user_id = 'OU068' OR employee_id = 'E2345';
Show all assets with active status and asset_type_id 'AT200',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT200';
Get all users with profiles_id 'P077' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P077' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma134' or 'Pharma135',SELECT * FROM assets WHERE pharmacies_id = 'Pharma134' OR pharmacies_id = 'Pharma135';
Find the facilities with trial_ends_at after '2028-12-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2028-12-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT201' or asset_type_id 'AT202',SELECT * FROM assets WHERE asset_type_id = 'AT201' OR asset_type_id = 'AT202';
List all users with roles_id 'Role012' and official_user_id 'OU068',SELECT * FROM users WHERE roles_id = 'Role012' AND official_user_id = 'OU068';
Retrieve all staff members with official_user_id 'OU069' or employee_id 'E3456',SELECT * FROM staff_directory WHERE official_user_id = 'OU069' OR employee_id = 'E3456';
Show all assets with active status and asset_type_id 'AT203',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT203';
Get all users with profiles_id 'P078' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P078' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma136' or 'Pharma137',SELECT * FROM assets WHERE pharmacies_id = 'Pharma136' OR pharmacies_id = 'Pharma137';
Find the facilities with trial_ends_at after '2029-01-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-01-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT204' or asset_type_id 'AT205',SELECT * FROM assets WHERE asset_type_id = 'AT204' OR asset_type_id = 'AT205';
List all users with roles_id 'Role123' and official_user_id 'OU069',SELECT * FROM users WHERE roles_id = 'Role123' AND official_user_id = 'OU069';
Retrieve all staff members with official_user_id 'OU070' or employee_id 'E4567',SELECT * FROM staff_directory WHERE official_user_id = 'OU070' OR employee_id = 'E4567';
Show all assets with active status and asset_type_id 'AT206',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT206';
Get all users with profiles_id 'P079' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P079' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma138' or 'Pharma139',SELECT * FROM assets WHERE pharmacies_id = 'Pharma138' OR pharmacies_id = 'Pharma139';
Find the facilities with trial_ends_at after '2029-02-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-02-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT207' or asset_type_id 'AT208',SELECT * FROM assets WHERE asset_type_id = 'AT207' OR asset_type_id = 'AT208';
List all users with roles_id 'Role234' and official_user_id 'OU070',SELECT * FROM users WHERE roles_id = 'Role234' AND official_user_id = 'OU070';
Retrieve all staff members with official_user_id 'OU071' or employee_id 'E5678',SELECT * FROM staff_directory WHERE official_user_id = 'OU071' OR employee_id = 'E5678';
Show all assets with active status and asset_type_id 'AT209',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT209';
Get all users with profiles_id 'P080' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P080' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma140' or 'Pharma141',SELECT * FROM assets WHERE pharmacies_id = 'Pharma140' OR pharmacies_id = 'Pharma141';
Find the facilities with trial_ends_at after '2029-03-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-03-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT210' or asset_type_id 'AT211',SELECT * FROM assets WHERE asset_type_id = 'AT210' OR asset_type_id = 'AT211';
List all users with roles_id 'Role345' and official_user_id 'OU071',SELECT * FROM users WHERE roles_id = 'Role345' AND official_user_id = 'OU071';
Retrieve all staff members with official_user_id 'OU072' or employee_id 'E6789',SELECT * FROM staff_directory WHERE official_user_id = 'OU072' OR employee_id = 'E6789';
Show all assets with active status and asset_type_id 'AT212',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT212';
Get all users with profiles_id 'P081' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P081' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma142' or 'Pharma143',SELECT * FROM assets WHERE pharmacies_id = 'Pharma142' OR pharmacies_id = 'Pharma143';
Find the facilities with trial_ends_at after '2029-04-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-04-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT213' or asset_type_id 'AT214',SELECT * FROM assets WHERE asset_type_id = 'AT213' OR asset_type_id = 'AT214';
List all users with roles_id 'Role456' and official_user_id 'OU072',SELECT * FROM users WHERE roles_id = 'Role456' AND official_user_id = 'OU072';
Retrieve all staff members with official_user_id 'OU073' or employee_id 'E7890',SELECT * FROM staff_directory WHERE official_user_id = 'OU073' OR employee_id = 'E7890';
Show all assets with active status and asset_type_id 'AT215',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT215';
Get all users with profiles_id 'P082' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P082' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma144' or 'Pharma145',SELECT * FROM assets WHERE pharmacies_id = 'Pharma144' OR pharmacies_id = 'Pharma145';
Find the facilities with trial_ends_at after '2029-05-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-05-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT216' or asset_type_id 'AT217',SELECT * FROM assets WHERE asset_type_id = 'AT216' OR asset_type_id = 'AT217';
List all users with roles_id 'Role567' and official_user_id 'OU073',SELECT * FROM users WHERE roles_id = 'Role567' AND official_user_id = 'OU073';
Retrieve all staff members with official_user_id 'OU074' or employee_id 'E8901',SELECT * FROM staff_directory WHERE official_user_id = 'OU074' OR employee_id = 'E8901';
Show all assets with active status and asset_type_id 'AT218',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT218';
Get all users with profiles_id 'P083' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P083' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma146' or 'Pharma147',SELECT * FROM assets WHERE pharmacies_id = 'Pharma146' OR pharmacies_id = 'Pharma147';
Find the facilities with trial_ends_at after '2029-06-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-06-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT219' or asset_type_id 'AT220',SELECT * FROM assets WHERE asset_type_id = 'AT219' OR asset_type_id = 'AT220';
List all users with roles_id 'Role678' and official_user_id 'OU074',SELECT * FROM users WHERE roles_id = 'Role678' AND official_user_id = 'OU074';
Retrieve all staff members with official_user_id 'OU075' or employee_id 'E9012',SELECT * FROM staff_directory WHERE official_user_id = 'OU075' OR employee_id = 'E9012';
Show all assets with active status and asset_type_id 'AT221',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT221';
Get all users with profiles_id 'P084' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P084' OR type = 'Manager';
List all assets associated with pharmacy 'Pharma148' or 'Pharma149',SELECT * FROM assets WHERE pharmacies_id = 'Pharma148' OR pharmacies_id = 'Pharma149';
Find the facilities with trial_ends_at after '2029-07-01' or trial_ends_at before '2023-12-31',SELECT * FROM facilities WHERE trial_ends_at > '2029-07-01' OR trial_ends_at < '2023-12-31';
Retrieve all assets with asset_type_id 'AT222' or asset_type_id 'AT223',SELECT * FROM assets WHERE asset_type_id = 'AT222' OR asset_type_id = 'AT223';
List all users with roles_id 'Role789' and official_user_id 'OU075',SELECT * FROM users WHERE roles_id = 'Role789' AND official_user_id = 'OU075';
Retrieve all staff members with official_user_id 'OU076' or employee_id 'E0123',SELECT * FROM staff_directory WHERE official_user_id = 'OU076' OR employee_id = 'E0123';
Show all assets with active status and asset_type_id 'AT224',SELECT * FROM assets WHERE active = TRUE AND asset_type_id = 'AT224';
Get all users with profiles_id 'P085' or type 'Manager',SELECT * FROM users WHERE profiles_id = 'P085' OR type = 'Manager';
Retrieve all users along with their associated roles,"SELECT u.*, r.* FROM users u JOIN roles r ON u.role_id = r.role_id;"
Get all facilities along with their associated organizations,"SELECT f.*, o.* FROM facilities f JOIN organizations o ON f.organization_id = o.organization_id;"
List all events along with their associated assets,"SELECT e.*, a.* FROM events e JOIN assets a ON e.asset_id = a.asset_id;"
Retrieve all pharmacies along with their associated staff members,"SELECT p.*, s.* FROM pharmacies p JOIN staff_members s ON p.pharmacy_id = s.pharmacy_id;"
Get all assets along with their associated pharmacies,"SELECT a.*, p.* FROM assets a JOIN pharmacies p ON a.pharmacy_id = p.pharmacy_id;"
List all events along with their associated users,"SELECT e.*, u.* FROM events e JOIN users u ON e.user_id = u.user_id;"
Retrieve all staff members along with their associated roles,"SELECT s.*, r.* FROM staff_members s JOIN roles r ON s.role_id = r.role_id;"
Get all users along with their associated profiles,"SELECT u.*, p.* FROM users u JOIN profiles p ON u.profile_id = p.profile_id;"
List all facilities along with their associated assets,"SELECT f.*, a.* FROM facilities f JOIN assets a ON f.asset_id = a.asset_id;"
Retrieve all pharmacies along with their associated events,"SELECT p.*, e.* FROM pharmacies p JOIN events e ON p.pharmacy_id = e.pharmacy_id;"
Get all assets along with their associated events,"SELECT a.*, e.* FROM assets a JOIN events e ON a.event_id = e.event_id;"
List all users along with their associated staff members,"SELECT u.*, s.* FROM users u JOIN staff_members s ON u.staff_id = s.staff_id;"
Retrieve all staff members along with their associated pharmacies,"SELECT s.*, p.* FROM staff_members s JOIN pharmacies p ON s.pharmacy_id = p.pharmacy_id;"
Get all facilities along with their associated assets and organizations,"SELECT f.*, a.*, o.* FROM facilities f JOIN assets a ON f.asset_id = a.asset_id JOIN organizations o ON f.organization_id = o.organization_id;"
List all events along with their associated users and assets,"SELECT e.*, u.*, a.* FROM events e JOIN users u ON e.user_id = u.user_id JOIN assets a ON e.asset_id = a.asset_id;"
Get all pharmacies along with their associated events and staff members,"SELECT p.*, e.*, s.* FROM pharmacies p JOIN events e ON p.pharmacy_id = e.pharmacy_id JOIN staff_members s ON p.staff_id = s.staff_id;"
Retrieve all users along with their associated roles and staff members,"SELECT u.*, r.*, s.* FROM users u JOIN roles r ON u.role_id = r.role_id JOIN staff_members s ON u.staff_id = s.staff_id;"
Retrieve all events with their associated facilities and users,"SELECT e.*, f.*, u.* FROM events e JOIN facilities f ON e.facility_id = f.facility_id JOIN users u ON e.user_id = u.user_id;"
List all staff members along with their associated roles and organizations,"SELECT s.*, r.*, o.* FROM staff_members s JOIN roles r ON s.role_id = r.role_id JOIN organizations o ON s.org_id = o.org_id;"
Retrieve all users along with their associated roles and profiles,"SELECT u.*, r.*, p.* FROM users u JOIN roles r ON u.role_id = r.role_id JOIN profiles p ON u.profile_id = p.profile_id;"
Get all organizations along with their associated pharmacies,"SELECT o.*, p.* FROM organizations o JOIN pharmacies p ON o.org_id = p.org_id;"
List all events along with their associated assets and users,"SELECT e.*, a.*, u.* FROM events e JOIN assets a ON e.event_id = a.event_id JOIN users u ON e.user_id = u.user_id;"
Fetch the records from the staff_directory table where the full_name contains 'John',SELECT * FROM staff_directory WHERE full_name LIKE '%John%';
List all assets with an active status and updated in the last 7 days,SELECT * FROM assets WHERE active = TRUE AND updated_at >= CURRENT_DATE - INTERVAL '7 days';
Get the hazards with a name starting with 'Fire',SELECT * FROM hazards WHERE name LIKE 'Fire%';
Retrieve events created by user_id '123' and updated after '2023-01-01',SELECT * FROM events WHERE user_id = '123' AND updated_at > '2023-01-01';
Find the staff members with fixed status and working in organization_id 'Org456',SELECT * FROM staff_directory WHERE fixed = TRUE AND org_id = 'Org456';
List all assets of type 'Computer' and associated with organization_id 'Org789',SELECT * FROM assets WHERE asset_type_id = (SELECT id FROM asset_types WHERE name = 'Computer') AND pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE organizations_id = 'Org789');
Retrieve the event staff roles ordered by name in ascending order,SELECT * FROM event_staff_roles ORDER BY name ASC;
Get the assets with serial number 'SN123' and active status,SELECT * FROM assets WHERE serial_number = 'SN123' AND active = TRUE;
Fetch all events where the user's full name contains 'Smith' and harmt is greater than 20,SELECT * FROM events WHERE users_fullname LIKE '%Smith%' AND harmt > 20;
List the users with profiles_id 'Profile123' and organization_id 'Org987',SELECT * FROM users WHERE profiles_id = 'Profile123' AND organization_id = 'Org987';
Retrieve all organizations with trial_ends_at in the future,SELECT * FROM organizations WHERE trial_ends_at > CURRENT_DATE;
Find the pharmacies that were created before '2023-03-01' and enabled after '2023-02-15',SELECT * FROM pharmacies WHERE created_at < '2023-03-01' AND activate_at > '2023-02-15';
"Get the event actions for the events with IDs '123', '456', and '789'","SELECT * FROM event_actions WHERE events_id IN ('123', '456', '789');"
Fetch the hazards with descriptions containing the word 'chemical',SELECT * FROM hazards WHERE description LIKE '%chemical%';
Retrieve the staff members with locum_full_name not equal to 'NULL',SELECT * FROM staff_directory WHERE locum_full_name IS NOT NULL;
List the assets that were updated between '2023-05-01' and '2023-06-30',SELECT * FROM assets WHERE updated_at BETWEEN '2023-05-01' AND '2023-06-30';
Get the event staff roles with order greater than or equal to 3,SELECT * FROM event_staff_roles WHERE order >= 3;
Fetch the events with harmt equal to 0 and prescribers_id is NULL,SELECT * FROM events WHERE harmt = 0 AND prescribers_id IS NULL;
Retrieve all organizations with names starting with 'ABC' and created after '2023-01-01',SELECT * FROM organizations WHERE name LIKE 'ABC%' AND created_at > '2023-01-01';
Find the pharmacies that were disabled in the last 30 days,SELECT * FROM pharmacies WHERE date_disabled >= CURRENT_DATE - INTERVAL '30 days';
List the event actions for the events created by user_id '789' and updated after '2023-02-28',SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '789' AND updated_at > '2023-02-28');
Get the assets with asset_type_id 'AT001' and pharmacies_id 'Pharma1',SELECT * FROM assets WHERE asset_type_id = 'AT001' AND pharmacies_id = 'Pharma1';
Fetch the events that were created in the last 7 days and harmt is greater than or equal to 10,SELECT * FROM events WHERE date_created >= CURRENT_DATE - INTERVAL '7 days' AND harmt >= 10;
Retrieve the full names of all staff members in alphabetical order,SELECT full_name FROM staff_directory ORDER BY full_name ASC;
List all assets associated with pharmacies located in the city 'New York',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE city = 'New York');
Get the event staff roles with forms_id equal to 5 and facility_id equal to 10,SELECT * FROM event_staff_roles WHERE forms_id = 5 AND facility_id = 10;
Fetch the events with harmt greater than 50 and date_closed is NULL,SELECT * FROM events WHERE harmt > 50 AND date_closed IS NULL;
Retrieve the organizations that were updated after '2023-03-15' and have trial_ends_at in the future,SELECT * FROM organizations WHERE updated_at > '2023-03-15' AND trial_ends_at > CURRENT_DATE;
Find the staff members who are active and have the role_id 'Role123',SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id = 'Role123';
List the assets with asset_type_id 'AT002' or 'AT003',"SELECT * FROM assets WHERE asset_type_id IN ('AT002', 'AT003');"
Get the hazards with descriptions containing the word 'safety' and created in the last 30 days,SELECT * FROM hazards WHERE description LIKE '%safety%' AND created_at >= CURRENT_DATE - INTERVAL '30 days';
Fetch the events with harmt greater than or equal to 10 and prescribers_id is not NULL,SELECT * FROM events WHERE harmt >= 10 AND prescribers_id IS NOT NULL;
Retrieve the full names of staff members whose official_user_id starts with 'USR',SELECT full_name FROM staff_directory WHERE official_user_id LIKE 'USR%';
List all assets associated with pharmacies created after '2023-04-01' and updated before '2023-06-30',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE created_at > '2023-04-01' AND updated_at < '2023-06-30');
Get the event staff roles with names containing the word 'supervisor',SELECT * FROM event_staff_roles WHERE name LIKE '%supervisor%';
Fetch the events with harmt less than 10 and date_closed is not NULL,SELECT * FROM events WHERE harmt < 10 AND date_closed IS NOT NULL;
Retrieve the organizations that have the trial_ends_at set to '2023-12-31' and are located in the city 'London',SELECT * FROM organizations WHERE trial_ends_at = '2023-12-31' AND city = 'London';
Find the staff members who are active and have the roles_id of 'Role456' or 'Role789',"SELECT * FROM staff_directory WHERE is_active = TRUE AND roles_id IN ('Role456', 'Role789');"
List the assets with asset_type_id 'AT004' and serial_number is not NULL,SELECT * FROM assets WHERE asset_type_id = 'AT004' AND serial_number IS NOT NULL;
Get the hazards with descriptions starting with 'Potential' and updated in the last 7 days,SELECT * FROM hazards WHERE description LIKE 'Potential%' AND updated_at >= CURRENT_DATE - INTERVAL '7 days';
Fetch the events with harmt between 20 and 50 and is_open set to TRUE,SELECT * FROM events WHERE harmt BETWEEN 20 AND 50 AND is_open = TRUE;
Retrieve the full names of all staff members whose updated_at is equal to '2023-01-01',SELECT full_name FROM staff_directory WHERE updated_at = '2023-01-01';
List all assets associated with pharmacies enabled before '2023-02-01' and disabled after '2023-06-30',SELECT * FROM assets WHERE pharmacies_id IN (SELECT sf_id FROM pharmacies WHERE enabled_at < '2023-02-01' AND disabled_at > '2023-06-30');
Get the event staff roles with forms_id not equal to 1 or 2,"SELECT * FROM event_staff_roles WHERE forms_id NOT IN (1, 2);"
Fetch the events with harmt equal to 0 and reporters_id is not NULL,SELECT * FROM events WHERE harmt = 0 AND reporters_id IS NOT NULL;
Retrieve the organizations that were created after '2023-01-01' and have trial_ends_at set to NULL,SELECT * FROM organizations WHERE created_at > '2023-01-01' AND trial_ends_at IS NULL;
Find the pharmacies with names starting with 'ABC' and activated by 'User123',SELECT * FROM pharmacies WHERE name LIKE 'ABC%' AND activated_by = 'User123';
List the event actions for the events created by user_id '456' and action_date between '2023-02-01' and '2023-03-31',SELECT * FROM event_actions WHERE events_id IN (SELECT id FROM events WHERE user_id = '456') AND action_date BETWEEN '2023-02-01' AND '2023-03-31';
Get the assets with asset_type_id 'AT005' and pharmacies_id not equal to 'Pharma2',SELECT * FROM assets WHERE asset_type_id = 'AT005' AND pharmacies_id <> 'Pharma2';
Fetch the hazards with descriptions containing the word 'environment' and created before '2023-02-15',SELECT * FROM hazards WHERE description LIKE '%environment%' AND created_at < '2023-02-15';
Retrieve the full names of all staff members whose fixed status is FALSE,SELECT full_name FROM staff_directory WHERE fixed = FALSE;
Find all staff members,SELECT * FROM staff_directory;
Find all active staff members,SELECT * FROM staff_directory WHERE is_active = 1;
Find all staff members who are associated with pharmacy 123,SELECT * FROM staff_directory WHERE pharmacies_id = 123;
Find all assets,SELECT * FROM assets;
Find all assets that are active,SELECT * FROM assets WHERE active = 1;
Find all assets that are associated with pharmacy 123,SELECT * FROM assets WHERE pharmacies_id = 123;
Find all hazards,SELECT * FROM hazards;
"Find all hazards that have the name ""needle stick""","SELECT * FROM hazards WHERE name = ""needle stick"";"
Find all hazards that are associated with pharmacy 123,SELECT * FROM hazards WHERE pharmacies_id = 123;
Find all events,SELECT * FROM events;
Find all events that were created by user 123,SELECT * FROM events WHERE users_id = 123;
"Find all events that were created by user 123 and have the harm level of ""high""","SELECT * FROM events WHERE users_id = 123 AND harmt = ""high"";"
Find all actions that were taken on event 123,SELECT * FROM event_actions WHERE events_id = 123;
Find all summary tools that are configured for form 123,SELECT * FROM formsettings_summarytools WHERE forms_id = 123;
Find all summary tools that are configured for all forms in pharmacy 123,SELECT * FROM formsettings_summarytools WHERE forms_id IN (SELECT forms_id FROM forms WHERE pharmacies_id = 123);
Find all users who have created an event,"SELECT users_id, users_fullname FROM events GROUP BY users_id;"
Find all hazards that have been reported by user 123,"SELECT hazards.name, hazards.description FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id WHERE events.users_id = 123;"
Find all events that have been taken on by user 123,"SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123;"
"Find all events that have been taken on by user 123 and have the harm level of ""high""","SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123 AND events.harmt = ""high"";"
"Find all staff members who are associated with pharmacy 123 and have the role of ""manager""","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND role = ""manager"";"
Find all events that have been created in the past 30 days,SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
"Find all events that have been created in the past 30 days and have the harm level of ""high""","SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY AND harmt = ""high"";"
Find the average harm level of all events,SELECT AVG(harmt) AS average_harm_level FROM events;
Find the average harm level of all events that have been created in the past 30 days,SELECT AVG(harmt) AS average_harm_level FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
Find the top 10 hazards that have been reported the most often,"SELECT hazards.name, COUNT(*) AS count FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id GROUP BY hazards.name ORDER BY count DESC LIMIT 10;"
Find all staff members who are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM staff_directory WHERE pharmacies_id IN (123, 456);"
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name = ""John Smith"";"
"Find all assets that are associated with pharmacy 123 or pharmacy 456 and have the serial number ""1234567890"".","SELECT * FROM assets WHERE pharmacies_id IN (123, 456) AND serial_number = ""1234567890"";"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"".","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"");"
Find all events that were created by user 123 or user 456.,"SELECT * FROM events WHERE users_id IN (123, 456);"
"Find all events that were created by user 123 and have the harm level ""high"" or ""medium"".","SELECT * FROM events WHERE users_id = 123 AND harmt IN (""high"", ""medium"");"
Find all actions that were taken on event 123 or event 456.,"SELECT * FROM event_actions WHERE events_id IN (123, 456);"
Find all actions that were taken on event 123 by user 123 or user 456.,"SELECT * FROM event_actions WHERE events_id = 123 AND user_id IN (123, 456);"
Find all summary tools that are configured for form 123 or form 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456);"
Find all summary tools that are configured for form 123 and are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id = 123 AND pharmacies_id IN (123, 456);"
Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123;
"Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them, ordered by the number of actions taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of forms that have been used.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of events that have been created.",SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(events.id) DESC;
"Find all events that have been created by staff members who have created the most events, ordered by the number of events that have been created.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all assets that have been used in the most events that have been created by staff members who have created the most events, ordered by the number of events that have been used.",SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all hazards that have been associated with the most events that have been created by staff members who have created the most events, ordered by the number of events that have been associated.",SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all events that have had the most actions taken on them that have been created by staff members who have created the most events, ordered by the number of actions that have been taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for the most forms that have been used in events that have been created by staff members who have created the most events, ordered by the number of forms that have been configured.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with the hazard ""needle stick"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name WHERE hazards.name = ""needle stick"";"
Find all assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all hazards that have been associated with events that have been created by staff members who are associated with pharmacy 123 and have the harm level ""high"".","SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 AND events.harmt = ""high"";"
Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have the serial number ""1234567890"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number WHERE assets.serial_number = ""1234567890"";"
Find all events that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events that have been created by staff members who have created the most events.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events that have been created by staff members who have created the most events.,SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"" or the name ""Jane Doe"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name IN (""John Smith"", ""Jane Doe"");"
"Find all assets that are associated with pharmacy 123 and have the serial number ""1234567890"" or the serial number ""9876543210"".","SELECT * FROM assets WHERE pharmacies_id = 123 AND serial_number IN (""1234567890"", ""9876543210"");"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"" and are associated with pharmacy 123 or pharmacy 456.","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"") AND pharmacies_id IN (123, 456);"
"Find all events that were created by user 123 or user 456 and have the harm level ""high"" or ""medium"" and were created on or after January 1, 2023.","SELECT * FROM events WHERE users_id IN (123, 456) AND harmt IN (""high"", ""medium"") AND date_created >= '2023-01-01';"
"Find all actions that were taken on event 123 or event 456 by user 123 or user 456 and were taken on or after January 1, 2023.","SELECT * FROM event_actions WHERE events_id IN (123, 456) AND user_id IN (123, 456) AND date_created >= '2023-01-01';"
"Find all summary tools that are configured for form 123 or form 456 and are associated with pharmacy 123 or pharmacy 456 and were configured on or after January 1, 2023.","SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456) AND pharmacies_id IN (123, 456) AND updated_at >= '2023-01-01';"
Find all staff members who have created the most events.,SELECT * FROM staff_directory ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events.,SELECT * FROM assets ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events.,SELECT * FROM hazards ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them.,SELECT * FROM events ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for the most forms.,SELECT * FROM formsettings_summarytools ORDER BY COUNT(forms_id) DESC LIMIT 1;
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users, and only for events that were held in the last year","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id WHERE events.date >= '2022-01-01' GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, ordered by the number of organizations that have attended the event","SELECT events.id, events.name, COUNT(DISTINCT organizations.id) AS number_of_organizations FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id ORDER BY number_of_organizations DESC;"
"Get the list of events that have been attended by users from all organizations, and the number of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, COUNT(DISTINCT users.id) AS number_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY number_of_users DESC;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC;"
Get all events that have been attended by at least 100 users,SELECT events.* FROM events LEFT JOIN events_users ON events.id = events_users.event_id GROUP BY events.id HAVING COUNT(events_users.id) >= 100;
Get all hazards that have been reported by at least 5 different users,SELECT hazards.* FROM hazards LEFT JOIN hazards_reported_by ON hazards.id = hazards_reported_by.hazard_id GROUP BY hazards.id HAVING COUNT(hazards_reported_by.id) >= 5;
Get all assets that are used by at least 5 different events,SELECT assets.* FROM assets LEFT JOIN assets_used_in ON assets.id = assets_used_in.asset_id GROUP BY assets.id HAVING COUNT(assets_used_in.id) >= 5;
Get all pharmacies that have hosted at least 10 events,SELECT pharmacies.* FROM pharmacies LEFT JOIN events ON pharmacies.id = events.pharmacies_id GROUP BY pharmacies.id HAVING COUNT(events.id) >= 10;
Get all users who have attended at least 5 events,SELECT users.* FROM users LEFT JOIN events_users ON users.id = events_users.user_id GROUP BY users.id HAVING COUNT(events_users.id) >= 5;
Get all organizations that have held at least 10 events,SELECT organizations.* FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id GROUP BY organizations.id HAVING COUNT(events.id) >= 10;
Get all formsettings summarytools that have been used by at least 5 events,SELECT formsettings_summarytools.* FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id GROUP BY formsettings_summarytools.id HAVING COUNT(events.id) >= 5;
Get all users who have created at least 5 event actions,SELECT users.* FROM users LEFT JOIN event_actions ON users.id = event_actions.user_id GROUP BY users.id HAVING COUNT(event_actions.id) >= 5;
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at;"
"Get all users and the organizations they are employed by, ordered by the user's name","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity;"
"Get all event actions and the staff members who created those actions, ordered by the action's date","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC;"
"Get all users and the events they have attended, ordered by the number of events the user has attended","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC;"
Get all organizations,SELECT * FROM organizations;
Get all organizations that are active,SELECT * FROM organizations WHERE active = 1;
"Get all organizations whose name contains ""Acme""",SELECT * FROM organizations WHERE name LIKE '%Acme%';
"Get all organizations whose name is ""Acme Corporation""",SELECT * FROM organizations WHERE name = 'Acme Corporation';
Get all organizations whose ID is 12345,SELECT * FROM organizations WHERE id = 12345;
Get all organizations that were created on 2023-01-01,SELECT * FROM organizations WHERE created_at = '2023-01-01';
Get all organizations that were updated on 2023-02-02,SELECT * FROM organizations WHERE updated_at = '2023-02-02';
Get all organizations that were created on 2023-01-01 and are active,SELECT * FROM organizations WHERE created_at = '2023-01-01' AND active = 1;
Get all organizations that were updated on 2023-02-02 and are active,SELECT * FROM organizations WHERE updated_at = '2023-02-02' AND active = 1;
Get all users who were updated on 2023-02-02 and are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all users who are employed by pharmacy with ID 12345 and are active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 1;
Get all users who are employed by pharmacy with ID 12345 and are not active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 0;
Get all users,SELECT * FROM users;
Get all users that are active,SELECT * FROM users WHERE is_active = 1;
"Get all users whose name contains ""John""",SELECT * FROM users WHERE full_name LIKE '%John%';
"Get all users whose name is ""John Doe""",SELECT * FROM users WHERE full_name = 'John Doe';
Get all users whose ID is 12345,SELECT * FROM users WHERE id = 12345;
Get all users who are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345;
Get all users who were created on 2023-01-01,SELECT * FROM users WHERE created_at = '2023-01-01';
Get all events,SELECT * FROM events;
Get all events that are open,SELECT * FROM events WHERE is_open = 1;
Get all events that were created on 2023-01-01,SELECT * FROM events WHERE created_at = '2023-01-01';
Get all events that were updated on 2023-02-02,SELECT * FROM events WHERE updated_at = '2023-02-02';
Get all events that were created on 2023-01-01 and are open,SELECT * FROM events WHERE created_at = '2023-01-01' AND is_open = 1;
Get all events that were updated on 2023-02-02 and are open,SELECT * FROM events WHERE updated_at = '2023-02-02' AND is_open = 1;
Get all events that were created by user with ID 12345,SELECT * FROM events WHERE user_id = 12345;
Get all events that were updated by user with ID 12345,SELECT * FROM events WHERE updated_by = 12345;
Get the first event in the table,SELECT * FROM events LIMIT 1;
Get the last event in the table,SELECT * FROM events ORDER BY created_at DESC LIMIT 1;
Get all formsettings summarytools that are updated,SELECT * FROM formsettings_summarytools WHERE updated_at IS NOT NULL;
Get all formsettings summarytools that were updated on 2023-02-02,SELECT * FROM formsettings_summarytools WHERE updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345;
Get all formsettings summarytools that were created on 2023-01-01,SELECT * FROM formsettings_summarytools WHERE created_at = '2023-01-01';
Get all formsettings summarytools that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 1;
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 0;
Get the first formsettings summarytool in the table,SELECT * FROM formsettings_summarytools LIMIT 1;
Get the last formsettings summarytool in the table,SELECT * FROM formsettings_summarytools ORDER BY created_at DESC LIMIT 1;
Get all event actions,SELECT * FROM event_actions;
Get all event actions that are done,SELECT * FROM event_actions WHERE date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01,SELECT * FROM event_actions WHERE date_created = '2023-01-01';
Get all event actions that were created by user with ID 12345,SELECT * FROM event_actions WHERE user_id = 12345;
Get all event actions that were updated on 2023-02-02,SELECT * FROM event_actions WHERE updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_actions WHERE user_id = 12345 AND updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and are done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NOT NULL;
Get all event actions that were created by user with ID 12345 and are not done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NULL;
Get all event actions that were created on 2023-01-01 and are done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01 and are not done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NULL;
Get all event staff roles,SELECT * FROM event_staff_roles;
Get all event staff roles that are active,SELECT * FROM event_staff_roles WHERE is_active = 1;
"Get all event staff roles whose name is ""Lead""",SELECT * FROM event_staff_roles WHERE name = 'Lead';
Get all event staff roles that are owned by pharmacy with ID 12345,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345;
Get all event staff roles that were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE created_at = '2023-01-01';
Get all event staff roles that were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all event staff roles that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and are active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 1;
Get all event staff roles that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 0;
Get all hazards that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and are active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 1;
Get all hazards that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 0;
Get the first hazard in the table,SELECT * FROM hazards LIMIT 1;
Get the last hazard in the table,SELECT * FROM hazards ORDER BY created_at DESC LIMIT 1;
Get the hazards that were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE updated_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at BETWEEN '2023-01-01' AND '2023-02-02';
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported, and limited to the first 10 results","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at LIMIT 10;"
"Get all users and the organizations they are employed by, ordered by the user's name, and limited to the first 10 results","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name LIMIT 10;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number, and limited to the first 10 results","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number LIMIT 10;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date, and limited to the first 10 results","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date LIMIT 10;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity, and limited to the first 10 results","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity LIMIT 10;"
"Get all event actions and the staff members who created those actions, ordered by the action's date, and limited to the first 10 results","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date LIMIT 10;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used, and limited to the first 10 results","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all users and the events they have attended, ordered by the number of events the user has attended, and limited to the first 10 results","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization, and limited to the first 10 results","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC LIMIT 10;"
Get all staff members and the events they have been assigned to,"SELECT staff_directory., events. FROM staff_directory LEFT JOIN events ON staff_directory.id = events.staff_id;"
Get all events and the hazards that have been reported at those events,"SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id;"
Get all users and the organizations they are employed by,"SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id;"
Get all assets and the staff members who are responsible for those assets,"SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id;"
Get all events and the pharmacies that hosted those events,"SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id;"
Get all hazards and the pharmacies that have been affected by those hazards,"SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id;"
Get all event actions and the staff members who created those actions,"SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id;"
Get all formsettings summarytools and the events that use those summarytools,"SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id;"
Get all users and the events they have attended,"SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id;"
Get all organizations and the events that have been held at those organizations,"SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id;"
Get all assets,SELECT * FROM assets;
Get all assets that are active,SELECT * FROM assets WHERE active = 1;
Get all assets whose serial number is 123456,SELECT * FROM assets WHERE serial_number = 123456;
Get all assets that are owned by pharmacy with ID 12345,SELECT * FROM assets WHERE pharmacies_id = 12345;
Get all assets that were created on 2023-01-01,SELECT * FROM assets WHERE created_at = '2023-01-01';
Get all assets that were updated on 2023-02-02,SELECT * FROM assets WHERE updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM assets WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all assets that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM assets WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and are active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 1;
Get all assets that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 0;
Get all staff members,SELECT * FROM staff_directory;
Get all staff members who are active,SELECT * FROM staff_directory WHERE is_active = 1;
"Get all staff members whose name contains ""John""",SELECT * FROM staff_directory WHERE full_name LIKE '%John%';
"Get all staff members whose name is ""John Doe""",SELECT * FROM staff_directory WHERE full_name = 'John Doe';
Get all staff members whose ID is 12345,SELECT * FROM staff_directory WHERE id = 12345;
Get all staff members who are employed by pharmacy with ID 12345,SELECT * FROM staff_directory WHERE pharmacies_id = 12345;
Get all staff members who were created on 2023-01-01,SELECT * FROM staff_directory WHERE created_at = '2023-01-01';
Get all staff members who were updated on 2023-02-02,SELECT * FROM staff_directory WHERE updated_at = '2023-02-02';
Get all staff members who are fixed,SELECT * FROM staff_directory WHERE fixed = 1;
Get all staff members who are not fixed,SELECT * FROM staff_directory WHERE fixed = 0;
Get all hazards,SELECT * FROM hazards;
Get all hazards that are active,SELECT * FROM hazards WHERE active = 1;
"Get all hazards whose name is ""Chemical spill""",SELECT * FROM hazards WHERE name = 'Chemical spill';
Get all hazards that are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345;
Get all hazards that were created on 2023-01-01,SELECT * FROM hazards WHERE created_at = '2023-01-01';
Get all hazards that were updated on 2023-02-02,SELECT * FROM hazards WHERE updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Find all staff members,SELECT * FROM staff_directory;
Find all active staff members,SELECT * FROM staff_directory WHERE is_active = 1;
Find all staff members who are associated with pharmacy 123,SELECT * FROM staff_directory WHERE pharmacies_id = 123;
Find all assets,SELECT * FROM assets;
Find all assets that are active,SELECT * FROM assets WHERE active = 1;
Find all assets that are associated with pharmacy 123,SELECT * FROM assets WHERE pharmacies_id = 123;
Find all hazards,SELECT * FROM hazards;
"Find all hazards that have the name ""needle stick""","SELECT * FROM hazards WHERE name = ""needle stick"";"
Find all hazards that are associated with pharmacy 123,SELECT * FROM hazards WHERE pharmacies_id = 123;
Find all events,SELECT * FROM events;
Find all events that were created by user 123,SELECT * FROM events WHERE users_id = 123;
"Find all events that were created by user 123 and have the harm level of ""high""","SELECT * FROM events WHERE users_id = 123 AND harmt = ""high"";"
Find all actions that were taken on event 123,SELECT * FROM event_actions WHERE events_id = 123;
Find all summary tools that are configured for form 123,SELECT * FROM formsettings_summarytools WHERE forms_id = 123;
Find all summary tools that are configured for all forms in pharmacy 123,SELECT * FROM formsettings_summarytools WHERE forms_id IN (SELECT forms_id FROM forms WHERE pharmacies_id = 123);
Find all users who have created an event,"SELECT users_id, users_fullname FROM events GROUP BY users_id;"
Find all hazards that have been reported by user 123,"SELECT hazards.name, hazards.description FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id WHERE events.users_id = 123;"
Find all events that have been taken on by user 123,"SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123;"
"Find all events that have been taken on by user 123 and have the harm level of ""high""","SELECT events.*, event_actions.action_date FROM events INNER JOIN event_actions ON events.events_id = event_actions.events_id WHERE event_actions.user_id = 123 AND events.harmt = ""high"";"
"Find all staff members who are associated with pharmacy 123 and have the role of ""manager""","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND role = ""manager"";"
Find all events that have been created in the past 30 days,SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
"Find all events that have been created in the past 30 days and have the harm level of ""high""","SELECT * FROM events WHERE date_created > NOW() - INTERVAL 30 DAY AND harmt = ""high"";"
Find the average harm level of all events,SELECT AVG(harmt) AS average_harm_level FROM events;
Find the average harm level of all events that have been created in the past 30 days,SELECT AVG(harmt) AS average_harm_level FROM events WHERE date_created > NOW() - INTERVAL 30 DAY;
Find the top 10 hazards that have been reported the most often,"SELECT hazards.name, COUNT(*) AS count FROM hazards INNER JOIN events ON hazards.organization_hazard_id = events.hazards_id GROUP BY hazards.name ORDER BY count DESC LIMIT 10;"
Find all staff members who are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM staff_directory WHERE pharmacies_id IN (123, 456);"
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name = ""John Smith"";"
"Find all assets that are associated with pharmacy 123 or pharmacy 456 and have the serial number ""1234567890"".","SELECT * FROM assets WHERE pharmacies_id IN (123, 456) AND serial_number = ""1234567890"";"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"".","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"");"
Find all events that were created by user 123 or user 456.,"SELECT * FROM events WHERE users_id IN (123, 456);"
"Find all events that were created by user 123 and have the harm level ""high"" or ""medium"".","SELECT * FROM events WHERE users_id = 123 AND harmt IN (""high"", ""medium"");"
Find all actions that were taken on event 123 or event 456.,"SELECT * FROM event_actions WHERE events_id IN (123, 456);"
Find all actions that were taken on event 123 by user 123 or user 456.,"SELECT * FROM event_actions WHERE events_id = 123 AND user_id IN (123, 456);"
Find all summary tools that are configured for form 123 or form 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456);"
Find all summary tools that are configured for form 123 and are associated with pharmacy 123 or pharmacy 456.,"SELECT * FROM formsettings_summarytools WHERE forms_id = 123 AND pharmacies_id IN (123, 456);"
Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123;
"Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them, ordered by the number of actions taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of forms that have been used.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have been used in events that have been created by staff members who are associated with pharmacy 123, ordered by the number of events that have been created.",SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number JOIN events ON assets.id = events.assets_id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(events.id) DESC;
"Find all events that have been created by staff members who have created the most events, ordered by the number of events that have been created.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all assets that have been used in the most events that have been created by staff members who have created the most events, ordered by the number of events that have been used.",SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all hazards that have been associated with the most events that have been created by staff members who have created the most events, ordered by the number of events that have been associated.",SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events.id) DESC;
"Find all events that have had the most actions taken on them that have been created by staff members who have created the most events, ordered by the number of actions that have been taken.",SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC;
"Find all summary tools that have been configured for the most forms that have been used in events that have been created by staff members who have created the most events, ordered by the number of forms that have been configured.",SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(forms.id) DESC;
"Find all staff members who have created events that have been associated with the hazard ""needle stick"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name WHERE hazards.name = ""needle stick"";"
Find all assets that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all hazards that have been associated with events that have been created by staff members who are associated with pharmacy 123 and have the harm level ""high"".","SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 AND events.harmt = ""high"";"
Find all events that have been created by staff members who are associated with pharmacy 123 and have had the most actions taken on them.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123 ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for forms that have been used in events that have been created by staff members who are associated with pharmacy 123.,SELECT * FROM formsettings_summarytools JOIN forms ON formsettings_summarytools.forms_id = forms.id JOIN events ON forms.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id WHERE staff_directory.pharmacies_id = 123;
"Find all staff members who have created events that have been associated with hazards that have been associated with assets that have the serial number ""1234567890"".","SELECT * FROM staff_directory JOIN events ON staff_directory.id = events.users_id JOIN hazards ON events.harmt = hazards.name JOIN assets ON hazards.name = assets.serial_number WHERE assets.serial_number = ""1234567890"";"
Find all events that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events that have been created by staff members who have created the most events.,SELECT * FROM assets JOIN events ON assets.id = events.assets_id JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events that have been created by staff members who have created the most events.,SELECT * FROM hazards JOIN events ON hazards.name = events.harmt JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them that have been created by staff members who have created the most events.,SELECT * FROM events JOIN staff_directory ON events.users_id = staff_directory.id ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
"Find all staff members who are associated with pharmacy 123 and have the name ""John Smith"" or the name ""Jane Doe"".","SELECT * FROM staff_directory WHERE pharmacies_id = 123 AND full_name IN (""John Smith"", ""Jane Doe"");"
"Find all assets that are associated with pharmacy 123 and have the serial number ""1234567890"" or the serial number ""9876543210"".","SELECT * FROM assets WHERE pharmacies_id = 123 AND serial_number IN (""1234567890"", ""9876543210"");"
"Find all hazards that have the name ""needle stick"" or the name ""sharps injury"" and are associated with pharmacy 123 or pharmacy 456.","SELECT * FROM hazards WHERE name IN (""needle stick"", ""sharps injury"") AND pharmacies_id IN (123, 456);"
"Find all events that were created by user 123 or user 456 and have the harm level ""high"" or ""medium"" and were created on or after January 1, 2023.","SELECT * FROM events WHERE users_id IN (123, 456) AND harmt IN (""high"", ""medium"") AND date_created >= '2023-01-01';"
"Find all actions that were taken on event 123 or event 456 by user 123 or user 456 and were taken on or after January 1, 2023.","SELECT * FROM event_actions WHERE events_id IN (123, 456) AND user_id IN (123, 456) AND date_created >= '2023-01-01';"
"Find all summary tools that are configured for form 123 or form 456 and are associated with pharmacy 123 or pharmacy 456 and were configured on or after January 1, 2023.","SELECT * FROM formsettings_summarytools WHERE forms_id IN (123, 456) AND pharmacies_id IN (123, 456) AND updated_at >= '2023-01-01';"
Find all staff members who have created the most events.,SELECT * FROM staff_directory ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all assets that have been used in the most events.,SELECT * FROM assets ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all hazards that have been associated with the most events.,SELECT * FROM hazards ORDER BY COUNT(events_id) DESC LIMIT 1;
Find all events that have had the most actions taken on them.,SELECT * FROM events ORDER BY COUNT(event_actions_id) DESC LIMIT 1;
Find all summary tools that have been configured for the most forms.,SELECT * FROM formsettings_summarytools ORDER BY COUNT(forms_id) DESC LIMIT 1;
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event, limited to the top 10 events, and only for events that have been attended by at least 50 users, and only for events that were held in the last year","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id WHERE events.date >= '2022-01-01' GROUP BY events.id, organizations.name HAVING COUNT(DISTINCT users.id) >= 50 ORDER BY percentage_of_users DESC LIMIT 10;"
"Get the list of events that have been attended by users from all organizations, ordered by the number of organizations that have attended the event","SELECT events.id, events.name, COUNT(DISTINCT organizations.id) AS number_of_organizations FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id ORDER BY number_of_organizations DESC;"
"Get the list of events that have been attended by users from all organizations, and the number of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, COUNT(DISTINCT users.id) AS number_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY number_of_users DESC;"
"Get the list of events that have been attended by users from all organizations, and the percentage of users from each organization who have attended the event","SELECT events.id, events.name, organizations.name, (COUNT(DISTINCT users.id) / COUNT(organizations.id)) * 100 AS percentage_of_users FROM events LEFT JOIN events_users ON events.id = events_users.event_id LEFT JOIN users ON events_users.user_id = users.id LEFT JOIN organizations ON users.organizations_id = organizations.id GROUP BY events.id, organizations.name ORDER BY percentage_of_users DESC;"
Get all events that have been attended by at least 100 users,SELECT events.* FROM events LEFT JOIN events_users ON events.id = events_users.event_id GROUP BY events.id HAVING COUNT(events_users.id) >= 100;
Get all hazards that have been reported by at least 5 different users,SELECT hazards.* FROM hazards LEFT JOIN hazards_reported_by ON hazards.id = hazards_reported_by.hazard_id GROUP BY hazards.id HAVING COUNT(hazards_reported_by.id) >= 5;
Get all assets that are used by at least 5 different events,SELECT assets.* FROM assets LEFT JOIN assets_used_in ON assets.id = assets_used_in.asset_id GROUP BY assets.id HAVING COUNT(assets_used_in.id) >= 5;
Get all pharmacies that have hosted at least 10 events,SELECT pharmacies.* FROM pharmacies LEFT JOIN events ON pharmacies.id = events.pharmacies_id GROUP BY pharmacies.id HAVING COUNT(events.id) >= 10;
Get all users who have attended at least 5 events,SELECT users.* FROM users LEFT JOIN events_users ON users.id = events_users.user_id GROUP BY users.id HAVING COUNT(events_users.id) >= 5;
Get all organizations that have held at least 10 events,SELECT organizations.* FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id GROUP BY organizations.id HAVING COUNT(events.id) >= 10;
Get all formsettings summarytools that have been used by at least 5 events,SELECT formsettings_summarytools.* FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id GROUP BY formsettings_summarytools.id HAVING COUNT(events.id) >= 5;
Get all users who have created at least 5 event actions,SELECT users.* FROM users LEFT JOIN event_actions ON users.id = event_actions.user_id GROUP BY users.id HAVING COUNT(event_actions.id) >= 5;
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at;"
"Get all users and the organizations they are employed by, ordered by the user's name","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity;"
"Get all event actions and the staff members who created those actions, ordered by the action's date","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC;"
"Get all users and the events they have attended, ordered by the number of events the user has attended","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC;"
Get all organizations,SELECT * FROM organizations;
Get all organizations that are active,SELECT * FROM organizations WHERE active = 1;
"Get all organizations whose name contains ""Acme""",SELECT * FROM organizations WHERE name LIKE '%Acme%';
"Get all organizations whose name is ""Acme Corporation""",SELECT * FROM organizations WHERE name = 'Acme Corporation';
Get all organizations whose ID is 12345,SELECT * FROM organizations WHERE id = 12345;
Get all organizations that were created on 2023-01-01,SELECT * FROM organizations WHERE created_at = '2023-01-01';
Get all organizations that were updated on 2023-02-02,SELECT * FROM organizations WHERE updated_at = '2023-02-02';
Get all organizations that were created on 2023-01-01 and are active,SELECT * FROM organizations WHERE created_at = '2023-01-01' AND active = 1;
Get all organizations that were updated on 2023-02-02 and are active,SELECT * FROM organizations WHERE updated_at = '2023-02-02' AND active = 1;
Get all users who were updated on 2023-02-02 and are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all users who are employed by pharmacy with ID 12345 and are active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 1;
Get all users who are employed by pharmacy with ID 12345 and are not active,SELECT * FROM users WHERE pharmacies_id = 12345 AND active = 0;
Get all users,SELECT * FROM users;
Get all users that are active,SELECT * FROM users WHERE is_active = 1;
"Get all users whose name contains ""John""",SELECT * FROM users WHERE full_name LIKE '%John%';
"Get all users whose name is ""John Doe""",SELECT * FROM users WHERE full_name = 'John Doe';
Get all users whose ID is 12345,SELECT * FROM users WHERE id = 12345;
Get all users who are employed by pharmacy with ID 12345,SELECT * FROM users WHERE pharmacies_id = 12345;
Get all users who were created on 2023-01-01,SELECT * FROM users WHERE created_at = '2023-01-01';
Get all events,SELECT * FROM events;
Get all events that are open,SELECT * FROM events WHERE is_open = 1;
Get all events that were created on 2023-01-01,SELECT * FROM events WHERE created_at = '2023-01-01';
Get all events that were updated on 2023-02-02,SELECT * FROM events WHERE updated_at = '2023-02-02';
Get all events that were created on 2023-01-01 and are open,SELECT * FROM events WHERE created_at = '2023-01-01' AND is_open = 1;
Get all events that were updated on 2023-02-02 and are open,SELECT * FROM events WHERE updated_at = '2023-02-02' AND is_open = 1;
Get all events that were created by user with ID 12345,SELECT * FROM events WHERE user_id = 12345;
Get all events that were updated by user with ID 12345,SELECT * FROM events WHERE updated_by = 12345;
Get the first event in the table,SELECT * FROM events LIMIT 1;
Get the last event in the table,SELECT * FROM events ORDER BY created_at DESC LIMIT 1;
Get all formsettings summarytools,SELECT * FROM formsettings_summarytools;
Get all formsettings summarytools that are updated,SELECT * FROM formsettings_summarytools WHERE updated_at IS NOT NULL;
Get all formsettings summarytools that were updated on 2023-02-02,SELECT * FROM formsettings_summarytools WHERE updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345;
Get all formsettings summarytools that were created on 2023-01-01,SELECT * FROM formsettings_summarytools WHERE created_at = '2023-01-01';
Get all formsettings summarytools that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 1;
Get all formsettings summarytools that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM formsettings_summarytools WHERE pharmacies_id = 12345 AND active = 0;
Get the first formsettings summarytool in the table,SELECT * FROM formsettings_summarytools LIMIT 1;
Get the last formsettings summarytool in the table,SELECT * FROM formsettings_summarytools ORDER BY created_at DESC LIMIT 1;
Get all formsettings summarytools,SELECT * FROM formsettings_summarytools;
Get all event actions,SELECT * FROM event_actions;
Get all event actions that are done,SELECT * FROM event_actions WHERE date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01,SELECT * FROM event_actions WHERE date_created = '2023-01-01';
Get all event actions that were created by user with ID 12345,SELECT * FROM event_actions WHERE user_id = 12345;
Get all event actions that were updated on 2023-02-02,SELECT * FROM event_actions WHERE updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_actions WHERE user_id = 12345 AND updated_at = '2023-02-02';
Get all event actions that were created by user with ID 12345 and are done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NOT NULL;
Get all event actions that were created by user with ID 12345 and are not done,SELECT * FROM event_actions WHERE user_id = 12345 AND date_done IS NULL;
Get all event actions that were created on 2023-01-01 and are done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NOT NULL;
Get all event actions that were created on 2023-01-01 and are not done,SELECT * FROM event_actions WHERE date_created = '2023-01-01' AND date_done IS NULL;
Get all event staff roles,SELECT * FROM event_staff_roles;
Get all event staff roles that are active,SELECT * FROM event_staff_roles WHERE is_active = 1;
"Get all event staff roles whose name is ""Lead""",SELECT * FROM event_staff_roles WHERE name = 'Lead';
Get all event staff roles that are owned by pharmacy with ID 12345,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345;
Get all event staff roles that were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE created_at = '2023-01-01';
Get all event staff roles that were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all event staff roles that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all event staff roles that are owned by pharmacy with ID 12345 and are active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 1;
Get all event staff roles that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM event_staff_roles WHERE pharmacies_id = 12345 AND active = 0;
Get all hazards that were updated on 2023-02-02 and are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and are active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 1;
Get all hazards that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND active = 0;
Get the first hazard in the table,SELECT * FROM hazards LIMIT 1;
Get the last hazard in the table,SELECT * FROM hazards ORDER BY created_at DESC LIMIT 1;
Get the hazards that were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE updated_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were created between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at BETWEEN '2023-01-01' AND '2023-02-02';
Get the hazards that are owned by pharmacy with ID 12345 and were updated between 2023-01-01 and 2023-02-02,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND updated_at BETWEEN '2023-01-01' AND '2023-02-02';
"Get all events and the hazards that have been reported at those events, ordered by the date the hazard was reported, and limited to the first 10 results","SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id ORDER BY hazards.reported_at LIMIT 10;"
"Get all users and the organizations they are employed by, ordered by the user's name, and limited to the first 10 results","SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id ORDER BY users.full_name LIMIT 10;"
"Get all assets and the staff members who are responsible for those assets, ordered by the asset's serial number, and limited to the first 10 results","SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id ORDER BY assets.serial_number LIMIT 10;"
"Get all events and the pharmacies that hosted those events, ordered by the event's date, and limited to the first 10 results","SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id ORDER BY events.date LIMIT 10;"
"Get all hazards and the pharmacies that have been affected by those hazards, ordered by the hazard's severity, and limited to the first 10 results","SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id ORDER BY hazards.severity LIMIT 10;"
"Get all event actions and the staff members who created those actions, ordered by the action's date, and limited to the first 10 results","SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id ORDER BY event_actions.date LIMIT 10;"
"Get all formsettings summarytools and the events that use those summarytools, ordered by the number of times the summarytool has been used, and limited to the first 10 results","SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all users and the events they have attended, ordered by the number of events the user has attended, and limited to the first 10 results","SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id ORDER BY COUNT(*) DESC LIMIT 10;"
"Get all organizations and the events that have been held at those organizations, ordered by the number of events that have been held at each organization, and limited to the first 10 results","SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id ORDER BY COUNT(*) DESC LIMIT 10;"
Get all staff members and the events they have been assigned to,"SELECT staff_directory., events. FROM staff_directory LEFT JOIN events ON staff_directory.id = events.staff_id;"
Get all events and the hazards that have been reported at those events,"SELECT events., hazards. FROM events LEFT JOIN hazards ON events.id = hazards.event_id;"
Get all users and the organizations they are employed by,"SELECT users., organizations. FROM users LEFT JOIN organizations ON users.organizations_id = organizations.id;"
Get all assets and the staff members who are responsible for those assets,"SELECT assets., staff_directory. FROM assets LEFT JOIN staff_directory ON assets.staff_id = staff_directory.id;"
Get all events and the pharmacies that hosted those events,"SELECT events., pharmacies. FROM events LEFT JOIN pharmacies ON events.pharmacies_id = pharmacies.id;"
Get all hazards and the pharmacies that have been affected by those hazards,"SELECT hazards., pharmacies. FROM hazards LEFT JOIN pharmacies ON hazards.pharmacies_id = pharmacies.id;"
Get all event actions and the staff members who created those actions,"SELECT event_actions., staff_directory. FROM event_actions LEFT JOIN staff_directory ON event_actions.user_id = staff_directory.id;"
Get all formsettings summarytools and the events that use those summarytools,"SELECT formsettings_summarytools., events. FROM formsettings_summarytools LEFT JOIN events ON formsettings_summarytools.events_id = events.id;"
Get all users and the events they have attended,"SELECT users., events. FROM users LEFT JOIN events ON users.id = events.user_id;"
Get all organizations and the events that have been held at those organizations,"SELECT organizations., events. FROM organizations LEFT JOIN events ON organizations.id = events.organizations_id;"
Get all assets,SELECT * FROM assets;
Get all assets that are active,SELECT * FROM assets WHERE active = 1;
Get all assets whose serial number is 123456,SELECT * FROM assets WHERE serial_number = 123456;
Get all assets that are owned by pharmacy with ID 12345,SELECT * FROM assets WHERE pharmacies_id = 12345;
Get all assets that were created on 2023-01-01,SELECT * FROM assets WHERE created_at = '2023-01-01';
Get all assets that were updated on 2023-02-02,SELECT * FROM assets WHERE updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM assets WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';
Get all assets that are owned by pharmacy with ID 12345 and were updated on 2023-02-02,SELECT * FROM assets WHERE pharmacies_id = 12345 AND updated_at = '2023-02-02';
Get all assets that are owned by pharmacy with ID 12345 and are active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 1;
Get all assets that are owned by pharmacy with ID 12345 and are not active,SELECT * FROM assets WHERE pharmacies_id = 12345 AND active = 0;
Get all staff members,SELECT * FROM staff_directory;
Get all staff members who are active,SELECT * FROM staff_directory WHERE is_active = 1;
"Get all staff members whose name contains ""John""",SELECT * FROM staff_directory WHERE full_name LIKE '%John%';
"Get all staff members whose name is ""John Doe""",SELECT * FROM staff_directory WHERE full_name = 'John Doe';
Get all staff members whose ID is 12345,SELECT * FROM staff_directory WHERE id = 12345;
Get all staff members who are employed by pharmacy with ID 12345,SELECT * FROM staff_directory WHERE pharmacies_id = 12345;
Get all staff members who were created on 2023-01-01,SELECT * FROM staff_directory WHERE created_at = '2023-01-01';
Get all staff members who were updated on 2023-02-02,SELECT * FROM staff_directory WHERE updated_at = '2023-02-02';
Get all staff members who are fixed,SELECT * FROM staff_directory WHERE fixed = 1;
Get all staff members who are not fixed,SELECT * FROM staff_directory WHERE fixed = 0;
Get all hazards,SELECT * FROM hazards;
Get all hazards that are active,SELECT * FROM hazards WHERE active = 1;
"Get all hazards whose name is ""Chemical spill""",SELECT * FROM hazards WHERE name = 'Chemical spill';
Get all hazards that are owned by pharmacy with ID 12345,SELECT * FROM hazards WHERE pharmacies_id = 12345;
Get all hazards that were created on 2023-01-01,SELECT * FROM hazards WHERE created_at = '2023-01-01';
Get all hazards that were updated on 2023-02-02,SELECT * FROM hazards WHERE updated_at = '2023-02-02';
Get all hazards that are owned by pharmacy with ID 12345 and were created on 2023-01-01,SELECT * FROM hazards WHERE pharmacies_id = 12345 AND created_at = '2023-01-01';